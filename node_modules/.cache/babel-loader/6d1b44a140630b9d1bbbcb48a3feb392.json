{"remainingRequest":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js!D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\capstone\\DrowsinessFrontEnd\\src\\components\\mixins\\validate.js","dependencies":[{"path":"D:\\capstone\\DrowsinessFrontEnd\\src\\components\\mixins\\validate.js","mtime":1610216665628},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubWF0aC5zaWduIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmlzLWludGVnZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuaXMtbmFuIjsKdmFyIHZhbGlkYXRlTWl4aW5zID0gewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc1Bvc2l0aXZlSW50OiBbZnVuY3Rpb24gKG51bSkgewogICAgICAgIHJldHVybiBNYXRoLnNpZ24oTnVtYmVyKG51bSkpID09PSAxOwogICAgICB9LCBmdW5jdGlvbiAobnVtKSB7CiAgICAgICAgcmV0dXJuIE51bWJlci5pc0ludGVnZXIoTnVtYmVyKG51bSkpOwogICAgICB9LCBmdW5jdGlvbiAobnVtKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKG51bSk7CiAgICAgIH1dLAogICAgICBpc1Bvc2l0aXZlTnVtOiBbZnVuY3Rpb24gKG51bSkgewogICAgICAgIHJldHVybiAhTnVtYmVyLmlzTmFOKE51bWJlcihudW0pKTsKICAgICAgfSwgZnVuY3Rpb24gKG51bSkgewogICAgICAgIHJldHVybiBNYXRoLnNpZ24oTnVtYmVyKG51bSkpID09PSAxOwogICAgICB9XQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFsbG93ZWREYXRlczogZnVuY3Rpb24gYWxsb3dlZERhdGVzKGRheVN0cikgewogICAgICB2YXIgdG9kYXkgPSBuZXcgRGF0ZSgpOwogICAgICB0b2RheS5zZXRIb3VycygwLCAwLCAwLCAwKTsKICAgICAgdmFyIHNlbGVjdERheSA9IG5ldyBEYXRlKGRheVN0cik7CiAgICAgIHNlbGVjdERheS5zZXRIb3VycygwLCAwLCAwLCAwKTsKICAgICAgcmV0dXJuIHNlbGVjdERheS5nZXRUaW1lKCkgPj0gdG9kYXkuZ2V0VGltZSgpOwogICAgfSwKICAgIGlzTnVtOiBmdW5jdGlvbiBpc051bShpbnB1dCkgewogICAgICB2YXIgbnVtID0gTnVtYmVyKGlucHV0KTsKCiAgICAgIGlmIChOdW1iZXIuaXNOYU4obnVtKSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB2YWxpZGF0ZU1peGluczs="},{"version":3,"sources":["D:/capstone/DrowsinessFrontEnd/src/components/mixins/validate.js"],"names":["validateMixins","data","isPositiveInt","num","Math","sign","Number","isInteger","console","log","isPositiveNum","isNaN","methods","allowedDates","dayStr","today","Date","setHours","selectDay","getTime","isNum","input"],"mappings":";;;;AAAA,IAAMA,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXC,MAAAA,aAAa,EAAE,CACb,UAACC,GAAD;AAAA,eAASC,IAAI,CAACC,IAAL,CAAUC,MAAM,CAACH,GAAD,CAAhB,MAA2B,CAApC;AAAA,OADa,EAEb,UAACA,GAAD;AAAA,eAASG,MAAM,CAACC,SAAP,CAAiBD,MAAM,CAACH,GAAD,CAAvB,CAAT;AAAA,OAFa,EAGb,UAACA,GAAD;AAAA,eAASK,OAAO,CAACC,GAAR,CAAYN,GAAZ,CAAT;AAAA,OAHa,CADJ;AAMXO,MAAAA,aAAa,EAAE,CAAC,UAACP,GAAD;AAAA,eAAS,CAACG,MAAM,CAACK,KAAP,CAAaL,MAAM,CAACH,GAAD,CAAnB,CAAV;AAAA,OAAD,EAAsC,UAACA,GAAD;AAAA,eAASC,IAAI,CAACC,IAAL,CAAUC,MAAM,CAACH,GAAD,CAAhB,MAA2B,CAApC;AAAA,OAAtC;AANJ,KAAP;AAAA,GADe;AASrBS,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,sBAACC,MAAD,EAAY;AACxB,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACAD,MAAAA,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACA,UAAMC,SAAS,GAAG,IAAIF,IAAJ,CAASF,MAAT,CAAlB;AACAI,MAAAA,SAAS,CAACD,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;AACA,aAAOC,SAAS,CAACC,OAAV,MAAuBJ,KAAK,CAACI,OAAN,EAA9B;AACD,KAPM;AAQPC,IAAAA,KARO,iBAQDC,KARC,EAQM;AACX,UAAMlB,GAAG,GAAGG,MAAM,CAACe,KAAD,CAAlB;;AACA,UAAIf,MAAM,CAACK,KAAP,CAAaR,GAAb,CAAJ,EAAuB;AACrB,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD;AAdM;AATY,CAAvB;AA2BA,eAAeH,cAAf","sourcesContent":["const validateMixins = {\n  data: () => ({\n    isPositiveInt: [\n      (num) => Math.sign(Number(num)) === 1,\n      (num) => Number.isInteger(Number(num)),\n      (num) => console.log(num),\n    ],\n    isPositiveNum: [(num) => !Number.isNaN(Number(num)), (num) => Math.sign(Number(num)) === 1],\n  }),\n  methods: {\n    allowedDates: (dayStr) => {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      const selectDay = new Date(dayStr);\n      selectDay.setHours(0, 0, 0, 0);\n      return selectDay.getTime() >= today.getTime();\n    },\n    isNum(input) {\n      const num = Number(input);\n      if (Number.isNaN(num)) {\n        return false;\n      }\n      return true;\n    },\n  },\n};\n\nexport default validateMixins;\n"]}]}