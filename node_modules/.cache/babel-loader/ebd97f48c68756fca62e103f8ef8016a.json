{"remainingRequest":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js!D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\capstone\\DrowsinessFrontEnd\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\capstone\\DrowsinessFrontEnd\\src\\store\\modules\\user.js","mtime":1628795083460},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovY2Fwc3RvbmUvRHJvd3NpbmVzc0Zyb250RW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJEOi9jYXBzdG9uZS9Ecm93c2luZXNzRnJvbnRFbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKCnZhciBteVN0YXRlID0gZnVuY3Rpb24gbXlTdGF0ZSgpIHsKICByZXR1cm4gewogICAgdXNlcjogewogICAgICBkYXRhOiBudWxsLAogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBzdWNjZXNzOiBudWxsLAogICAgICBlcnJvcjogbnVsbAogICAgfSwKICAgIGRyaXZlcnM6IHsKICAgICAgZGF0YTogW10sCiAgICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICAgIHN1Y2Nlc3M6IG51bGwsCiAgICAgIGVycm9yOiBudWxsCiAgICB9LAogICAgZGV2aWNlczogewogICAgICBkYXRhOiBbXSwKICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgc3VjY2VzczogbnVsbCwKICAgICAgZXJyb3I6IG51bGwKICAgIH0sCiAgICB0cmFja2luZ3M6IHsKICAgICAgZGF0YTogW10sCiAgICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICAgIHN1Y2Nlc3M6IG51bGwsCiAgICAgIGVycm9yOiBudWxsCiAgICB9LAogICAgZmlybXdhcmVzOiB7CiAgICAgIGRhdGE6IFtdLAogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBzdWNjZXNzOiBudWxsLAogICAgICBlcnJvcjogbnVsbCwKICAgICAgbmV3bHlDcmVhdGVkOiBudWxsCiAgICB9LAogICAgZHJpdmVyc0luRGV2aWNlOiB7CiAgICAgIGRhdGE6IFtdLAogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBzdWNjZXNzOiBudWxsLAogICAgICBlcnJvcjogbnVsbAogICAgfSAvLyBkZWFsczogewogICAgLy8gICBkYXRhOiBbXSwKICAgIC8vICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgIC8vICAgc3VjY2VzczogbnVsbCwKICAgIC8vICAgZXJyb3I6IG51bGwsCiAgICAvLyAgIG5ld2x5Q3JlYXRlZDogbnVsbCwKICAgIC8vIH0sCgogIH07Cn07Cgp2YXIgbXlHZXR0ZXJzID0gey8vIGdldCBsYXN0ZWQgZGVhbAogIC8vIGZpbmRMYXN0ZWREZWFsOiAoc3RhdGUpID0+IChyZW50ZXJJZCwgdmVuZG9ySWQsIHR5cGVJZCkgPT4gewogIC8vICAgbGV0IHJlc3VsdCA9IHN0YXRlLmRlYWxzLmRhdGEuZmlsdGVyKChkZWFsKSA9PiB7CiAgLy8gICAgIGlmIChkZWFsLnJlbnRlci5yZW50ZXJJZCA9PT0gcmVudGVySWQgJiYKICAvLyAgICAgICBkZWFsLnZlbmRvci52ZW5kb3JJZCA9PT0gdmVuZG9ySWQgJiYKICAvLyAgICAgICBkZWFsLnR5cGUudHlwZUlkID09PSB0eXBlSWQgJiYKICAvLyAgICAgICBkZWFsLnN0YXR1cyA9PT0gJ0NSRUFURUQnKSB7CiAgLy8gICAgICAgcmV0dXJuIHRydWU7CiAgLy8gICAgIH0KICAvLyAgICAgcmV0dXJuIGZhbHNlOwogIC8vICAgfSk7CiAgLy8gICByZXN1bHQgPSByZXN1bHQuc29ydCgoZGVhbDEsIGRlYWwyKSA9PiBkZWFsMS5jcmVhdGlvblRpbWUgLSBkZWFsMi5jcmVhdGlvblRpbWUpOwogIC8vICAgY29uc29sZS5sb2coYGxhc3RlZCBkZWFsOiAke3Jlc3VsdFswXX1gKTsKICAvLyAgIHJldHVybiByZXN1bHRbMF07CiAgLy8gfSwKICAvLyBmaW5kUGVuZGluZ0Jvb2tpbmc6IChzdGF0ZSkgPT4gKHJlbnRlcklkLCB2ZW5kb3JJZCwgdHlwZUlkKSA9PiB7CiAgLy8gICBjb25zdCByZXN1bHQgPSBzdGF0ZS5ib29raW5ncy5kYXRhLmZpbHRlcigoYm9va2luZykgPT4gewogIC8vICAgICBpZiAoYm9va2luZy5yZW50ZXIucmVudGVySWQgPT09IHJlbnRlcklkICYmCiAgLy8gICAgICAgYm9va2luZy52ZW5kb3IudmVuZG9ySWQgPT09IHZlbmRvcklkICYmCiAgLy8gICAgICAgYm9va2luZy50eXBlLnR5cGVJZCA9PT0gdHlwZUlkICYmCiAgLy8gICAgICAgYm9va2luZy5zdGF0dXMgPT09ICdJTkNPTUlORycpIHsKICAvLyAgICAgICByZXR1cm4gdHJ1ZTsKICAvLyAgICAgfQogIC8vICAgICByZXR1cm4gZmFsc2U7CiAgLy8gICB9KTsKICAvLyAgIGNvbnNvbGUubG9nKGBwZW5kaW5nIGJvb2tpbmcgJHtyZXN1bHRbMF19YCk7CiAgLy8gICByZXR1cm4gcmVzdWx0WzBdOwogIC8vIH0sCn07CnZhciBtdXRhdGlvblR5cGVzID0gewogIEdFVF9VU0VSX1JFUVVFU1Q6ICdHRVRfVVNFUl9SRVFVRVNUJywKICBHRVRfVVNFUl9TVUNDRVNTOiAnR0VUX1VTRVJfU1VDQ0VTUycsCiAgR0VUX1VTRVJfRkFJTFVSRTogJ0dFVF9VU0VSX0ZBSUxVUkUnLAogIFVQREFURV9VU0VSX1JFUVVFU1Q6ICdVUERBVEVfVVNFUl9SRVFVRVNUJywKICBVUERBVEVfVVNFUl9TVUNDRVNTOiAnVVBEQVRFX1VTRVJfU1VDQ0VTUycsCiAgVVBEQVRFX1VTRVJfRkFJTFVSRTogJ1VQREFURV9VU0VSX0ZBSUxVUkUnLAogIENMRUFSX1VTRVJfREFUQTogJ0NMRUFSX1VTRVJfREFUQScsCiAgR0VUX0RSSVZFUlNfUkVRVUVTVDogJ0dFVF9EUklWRVJTX1JFUVVFU1QnLAogIEdFVF9EUklWRVJTX1NVQ0NFU1M6ICdHRVRfRFJJVkVSU19TVUNDRVNTJywKICBHRVRfRFJJVkVSU19GQUlMVVJFOiAnR0VUX0RSSVZFUlNfRkFJTFVSRScsCiAgR0VUX0RFVklDRVNfUkVRVUVTVDogJ0dFVF9ERVZJQ0VTX1JFUVVFU1QnLAogIEdFVF9ERVZJQ0VTX1NVQ0NFU1M6ICdHRVRfREVWSUNFU19TVUNDRVNTJywKICBHRVRfREVWSUNFU19GQUlMVVJFOiAnR0VUX0RFVklDRVNfRkFJTFVSRScsCiAgQ1JFQVRFX0RFVklDRV9SRVFVRVNUOiAnQ1JFQVRFX0RFVklDRV9SRVFVRVNUJywKICBDUkVBVEVfREVWSUNFX1NVQ0NFU1M6ICdDUkVBVEVfREVWSUNFX1NVQ0NFU1MnLAogIENSRUFURV9ERVZJQ0VfRkFJTFVSRTogJ0NSRUFURV9ERVZJQ0VfRkFJTFVSRScsCiAgVVBEQVRFX0RFVklDRV9SRVFVRVNUOiAnVVBEQVRFX0RFVklDRV9SRVFVRVNUJywKICBVUERBVEVfREVWSUNFX1NVQ0NFU1M6ICdVUERBVEVfREVWSUNFX1NVQ0NFU1MnLAogIFVQREFURV9ERVZJQ0VfRkFJTFVSRTogJ1VQREFURV9ERVZJQ0VfRkFJTFVSRScsCiAgR0VUX1RSQUNLSU5HU19SRVFVRVNUOiAnR0VUX1RSQUNLSU5HU19SRVFVRVNUJywKICBHRVRfVFJBQ0tJTkdTX1NVQ0NFU1M6ICdHRVRfVFJBQ0tJTkdTX1NVQ0NFU1MnLAogIEdFVF9UUkFDS0lOR1NfRkFJTFVSRTogJ0dFVF9UUkFDS0lOR1NfRkFJTFVSRScsCiAgR0VUX0ZJUk1XQVJFU19SRVFVRVNUOiAnR0VUX0ZJUk1XQVJFU19SRVFVRVNUJywKICBHRVRfRklSTVdBUkVTX1NVQ0NFU1M6ICdHRVRfRklSTVdBUkVTX1NVQ0NFU1MnLAogIEdFVF9GSVJNV0FSRVNfRkFJTFVSRTogJ0dFVF9GSVJNV0FSRVNfRkFJTFVSRScsCiAgQ1JFQVRFX0ZJUk1XQVJFX1JFUVVFU1Q6ICdDUkVBVEVfRklSTVdBUkVfUkVRVUVTVCcsCiAgQ1JFQVRFX0ZJUk1XQVJFX1NVQ0NFU1M6ICdDUkVBVEVfRklSTVdBUkVfU1VDQ0VTUycsCiAgQ1JFQVRFX0ZJUk1XQVJFX0ZBSUxVUkU6ICdDUkVBVEVfRklSTVdBUkVfRkFJTFVSRScsCiAgVVBEQVRFX0ZJUk1XQVJFX1JFUVVFU1Q6ICdVUERBVEVfRklSTVdBUkVfUkVRVUVTVCcsCiAgVVBEQVRFX0ZJUk1XQVJFX1NVQ0NFU1M6ICdVUERBVEVfRklSTVdBUkVfU1VDQ0VTUycsCiAgVVBEQVRFX0ZJUk1XQVJFX0ZBSUxVUkU6ICdVUERBVEVfRklSTVdBUkVfRkFJTFVSRScsCiAgR0VUX0RSSVZFUlNJTkRFVklDRV9SRVFVRVNUOiAnR0VUX0RSSVZFUlNJTkRFVklDRV9SRVFVRVNUJywKICBHRVRfRFJJVkVSU0lOREVWSUNFX1NVQ0NFU1M6ICdHRVRfRFJJVkVSU0lOREVWSUNFX1NVQ0NFU1MnLAogIEdFVF9EUklWRVJTSU5ERVZJQ0VfRkFJTFVSRTogJ0dFVF9EUklWRVJTSU5ERVZJQ0VfRkFJTFVSRScgLy8gR0VUX0RFQUxTX1JFUVVFU1Q6ICdHRVRfREVBTFNfUkVRVUVTVCcsCiAgLy8gR0VUX0RFQUxTX1NVQ0NFU1M6ICdHRVRfREVBTFNfU1VDQ0VTUycsCiAgLy8gR0VUX0RFQUxTX0ZBSUxVUkU6ICdHRVRfREVBTFNfRkFJTFVSRScsCiAgLy8gQ1JFQVRFX0RFQUxfUkVRVUVTVDogJ0NSRUFURV9ERUFMX1JFUVVFU1QnLAogIC8vIENSRUFURV9ERUFMX1NVQ0NFU1M6ICdDUkVBVEVfREVBTF9TVUNDRVNTJywKICAvLyBDUkVBVEVfREVBTF9GQUlMVVJFOiAnQ1JFQVRFX0RFQUxfRkFJTFVSRScsCiAgLy8gR0VUX0RFQUxfUkVRVUVTVDogJ0dFVF9ERUFMX1JFUVVFU1QnLAogIC8vIEdFVF9ERUFMX1NVQ0NFU1M6ICdHRVRfREVBTF9TVUNDRVNTJywKICAvLyBHRVRfREVBTF9GQUlMVVJFOiAnR0VUX0RFQUxfRkFJTFVSRScsCiAgLy8gQ0FOQ0VMX0RFQUxfUkVRVUVTVDogJ0NBTkNFTF9ERUFMX1JFUVVFU1QnLAogIC8vIENBTkNFTF9ERUFMX1NVQ0NFU1M6ICdDQU5DRUxfREVBTF9TVUNDRVNTJywKICAvLyBDQU5DRUxfREVBTF9GQUlMVVJFOiAnQ0FOQ0VMX0RFQUxfRkFJTFVSRScsCiAgLy8gQ0FOQ0VMX0JPT0tJTkdfUkVRVUVTVDogJ0NBTkNFTF9CT09LSU5HX1JFUVVFU1QnLAogIC8vIENBTkNFTF9CT09LSU5HX1NVQ0NFU1M6ICdDQU5DRUxfQk9PS0lOR19TVUNDRVNTJywKICAvLyBDQU5DRUxfQk9PS0lOR19GQUlMVVJFOiAnQ0FOQ0VMX0JPT0tJTkdfRkFJTFVSRScsCiAgLy8gRE9ORV9CT09LSU5HX1JFUVVFU1Q6ICdET05FX0JPT0tJTkdfUkVRVUVTVCcsCiAgLy8gRE9ORV9CT09LSU5HX1NVQ0NFU1M6ICdET05FX0JPT0tJTkdfU1VDQ0VTUycsCiAgLy8gRE9ORV9CT09LSU5HX0ZBSUxVUkU6ICdET05FX0JPT0tJTkdfRkFJTFVSRScsCgp9Owp2YXIgbXV0YXRpb25zID0gewogIENMRUFSX1VTRVJfREFUQTogZnVuY3Rpb24gQ0xFQVJfVVNFUl9EQVRBKHN0YXRlKSB7CiAgICBzdGF0ZS51c2VyLmRhdGEgPSBudWxsOwogICAgc3RhdGUudXNlci5pc0xvYWRpbmcgPSBmYWxzZTsKICAgIHN0YXRlLnVzZXIuc3VjY2VzcyA9IGZhbHNlOwogIH0sCiAgR0VUX1VTRVJfUkVRVUVTVDogZnVuY3Rpb24gR0VUX1VTRVJfUkVRVUVTVChzdGF0ZSkgewogICAgc3RhdGUudXNlci5pc0xvYWRpbmcgPSB0cnVlOwogIH0sCiAgR0VUX1VTRVJfU1VDQ0VTUzogZnVuY3Rpb24gR0VUX1VTRVJfU1VDQ0VTUyhzdGF0ZSwgdXNlcikgewogICAgc3RhdGUudXNlci5kYXRhID0gdXNlcjsKICAgIHN0YXRlLnVzZXIuaXNMb2FkaW5nID0gZmFsc2U7CiAgICBzdGF0ZS51c2VyLnN1Y2Nlc3MgPSB0cnVlOwogIH0sCiAgR0VUX1VTRVJfRkFJTFVSRTogZnVuY3Rpb24gR0VUX1VTRVJfRkFJTFVSRShzdGF0ZSwgZXJyb3IpIHsKICAgIHN0YXRlLnVzZXIuaXNMb2FkaW5nID0gZmFsc2U7CiAgICBzdGF0ZS51c2VyLnN1Y2Nlc3MgPSBmYWxzZTsKICAgIHN0YXRlLnVzZXIuZXJyb3IgPSBlcnJvcjsKICB9LAogIEdFVF9EUklWRVJTX1JFUVVFU1Q6IGZ1bmN0aW9uIEdFVF9EUklWRVJTX1JFUVVFU1Qoc3RhdGUpIHsKICAgIHN0YXRlLmRyaXZlcnMuaXNMb2FkaW5nID0gdHJ1ZTsKICB9LAogIEdFVF9EUklWRVJTX1NVQ0NFU1M6IGZ1bmN0aW9uIEdFVF9EUklWRVJTX1NVQ0NFU1Moc3RhdGUsIGRyaXZlcnMpIHsKICAgIHN0YXRlLmRyaXZlcnMuZGF0YSA9IGRyaXZlcnM7CiAgICBzdGF0ZS5kcml2ZXJzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgc3RhdGUuZHJpdmVycy5zdWNjZXNzID0gdHJ1ZTsKICB9LAogIEdFVF9EUklWRVJTX0ZBSUxVUkU6IGZ1bmN0aW9uIEdFVF9EUklWRVJTX0ZBSUxVUkUoc3RhdGUsIGVycm9yKSB7CiAgICBzdGF0ZS5kcml2ZXJzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgc3RhdGUuZHJpdmVycy5zdWNjZXNzID0gZmFsc2U7CiAgICBzdGF0ZS5kcml2ZXJzLmVycm9yID0gZXJyb3I7CiAgfSwKICBHRVRfREVWSUNFU19SRVFVRVNUOiBmdW5jdGlvbiBHRVRfREVWSUNFU19SRVFVRVNUKHN0YXRlKSB7CiAgICBzdGF0ZS5kZXZpY2VzLmlzTG9hZGluZyA9IHRydWU7CiAgfSwKICBHRVRfREVWSUNFU19TVUNDRVNTOiBmdW5jdGlvbiBHRVRfREVWSUNFU19TVUNDRVNTKHN0YXRlLCBkZXZpY2VzKSB7CiAgICBzdGF0ZS5kZXZpY2VzLmRhdGEgPSBkZXZpY2VzOwogICAgc3RhdGUuZGV2aWNlcy5kYXRhLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgcmV0dXJuIGIgLSBhOwogICAgfSk7CiAgICBzdGF0ZS5kZXZpY2VzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgc3RhdGUuZGV2aWNlcy5zdWNjZXNzID0gdHJ1ZTsKICB9LAogIEdFVF9ERVZJQ0VTX0ZBSUxVUkU6IGZ1bmN0aW9uIEdFVF9ERVZJQ0VTX0ZBSUxVUkUoc3RhdGUsIGVycm9yKSB7CiAgICBzdGF0ZS5kZXZpY2VzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgc3RhdGUuZGV2aWNlcy5zdWNjZXNzID0gZmFsc2U7CiAgICBzdGF0ZS5kZXZpY2VzLmVycm9yID0gZXJyb3I7CiAgfSwKICBHRVRfRFJJVkVSU0lOREVWSUNFX1JFUVVFU1Q6IGZ1bmN0aW9uIEdFVF9EUklWRVJTSU5ERVZJQ0VfUkVRVUVTVChzdGF0ZSkgewogICAgc3RhdGUuZHJpdmVyc0luRGV2aWNlLmlzTG9hZGluZyA9IHRydWU7CiAgfSwKICBHRVRfRFJJVkVSU0lOREVWSUNFX1NVQ0NFU1M6IGZ1bmN0aW9uIEdFVF9EUklWRVJTSU5ERVZJQ0VfU1VDQ0VTUyhzdGF0ZSwgZHJpdmVyc0luRGV2aWNlKSB7CiAgICBzdGF0ZS5kcml2ZXJzSW5EZXZpY2UuZGF0YSA9IGRyaXZlcnNJbkRldmljZTsgLy8gc3RhdGUuZGV2aWNlcy5kYXRhLnNvcnQoKGEsIGIpID0+IGIgLSBhKTsKCiAgICBzdGF0ZS5kZXZpY2VzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgc3RhdGUuZGV2aWNlcy5zdWNjZXNzID0gdHJ1ZTsKICB9LAogIEdFVF9EUklWRVJTSU5ERVZJQ0VfRkFJTFVSRTogZnVuY3Rpb24gR0VUX0RSSVZFUlNJTkRFVklDRV9GQUlMVVJFKHN0YXRlLCBlcnJvcikgewogICAgc3RhdGUuZHJpdmVyc0luRGV2aWNlLmlzTG9hZGluZyA9IGZhbHNlOwogICAgc3RhdGUuZHJpdmVyc0luRGV2aWNlLnN1Y2Nlc3MgPSBmYWxzZTsKICAgIHN0YXRlLmRyaXZlcnNJbkRldmljZS5lcnJvciA9IGVycm9yOwogIH0sCiAgQ1JFQVRFX0RFVklDRV9SRVFVRVNUOiBmdW5jdGlvbiBDUkVBVEVfREVWSUNFX1JFUVVFU1Qoc3RhdGUpIHsKICAgIHN0YXRlLmRldmljZXMuaXNMb2FkaW5nID0gdHJ1ZTsKICB9LAogIENSRUFURV9ERVZJQ0VfU1VDQ0VTUzogZnVuY3Rpb24gQ1JFQVRFX0RFVklDRV9TVUNDRVNTKHN0YXRlLCBkZXZpY2UpIHsKICAgIGNvbnNvbGUubG9nKHN0YXRlLmRldmljZXMpOwogICAgc3RhdGUuZGV2aWNlcy5kYXRhLnJlc3VsdHMucHVzaChkZXZpY2UpOwogICAgc3RhdGUuZGV2aWNlcy5kYXRhLnJlc3VsdHMuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICByZXR1cm4gYiAtIGE7CiAgICB9KTsgLy8gc3RhdGUuYm9va2luZ3MubmV3bHlDcmVhdGVkID0gYm9va2luZzsKCiAgICBzdGF0ZS5kZXZpY2VzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgc3RhdGUuZGV2aWNlcy5zdWNjZXNzID0gdHJ1ZTsKICB9LAogIENSRUFURV9ERVZJQ0VfRkFJTFVSRTogZnVuY3Rpb24gQ1JFQVRFX0RFVklDRV9GQUlMVVJFKHN0YXRlLCBlcnJvcikgewogICAgc3RhdGUuZGV2aWNlcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgIHN0YXRlLmRldmljZXMuc3VjY2VzcyA9IGZhbHNlOwogICAgc3RhdGUuZGV2aWNlcy5lcnJvciA9IGVycm9yOwogIH0sCiAgVVBEQVRFX0RFVklDRV9SRVFVRVNUOiBmdW5jdGlvbiBVUERBVEVfREVWSUNFX1JFUVVFU1Qoc3RhdGUpIHsKICAgIHN0YXRlLmRldmljZXMuaXNMb2FkaW5nID0gdHJ1ZTsKICB9LAogIFVQREFURV9ERVZJQ0VfU1VDQ0VTUzogZnVuY3Rpb24gVVBEQVRFX0RFVklDRV9TVUNDRVNTKHN0YXRlLCBkZXZpY2UpIHsKICAgIHN0YXRlLmRldmljZXMuZGF0YS5yZXN1bHRzID0gc3RhdGUuZGV2aWNlcy5kYXRhLnJlc3VsdHMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBkZXZpY2UuZGV2aWNlSWQgIT09IGl0ZW0uZGV2aWNlSWQ7CiAgICB9KTsKICAgIHN0YXRlLmRldmljZXMuZGF0YS5yZXN1bHRzLnB1c2goZGV2aWNlKTsKICAgIHN0YXRlLmRldmljZXMuc3VjY2VzcyA9IHRydWU7CiAgICBzdGF0ZS5kZXZpY2VzLmlzTG9hZGluZyA9IGZhbHNlOwogIH0sCiAgVVBEQVRFX0RFVklDRV9GQUlMVVJFOiBmdW5jdGlvbiBVUERBVEVfREVWSUNFX0ZBSUxVUkUoc3RhdGUsIGVycm9yKSB7CiAgICBzdGF0ZS5kZXZpY2VzLmVycm9yID0gZXJyb3I7CiAgICBzdGF0ZS5kZXZpY2VzLnN1Y2Nlc3MgPSBmYWxzZTsKICAgIHN0YXRlLmRldmljZXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgfSwKICBHRVRfVFJBQ0tJTkdTX1JFUVVFU1Q6IGZ1bmN0aW9uIEdFVF9UUkFDS0lOR1NfUkVRVUVTVChzdGF0ZSkgewogICAgc3RhdGUudHJhY2tpbmdzLmlzTG9hZGluZyA9IHRydWU7CiAgfSwKICBHRVRfVFJBQ0tJTkdTX1NVQ0NFU1M6IGZ1bmN0aW9uIEdFVF9UUkFDS0lOR1NfU1VDQ0VTUyhzdGF0ZSwgdHJhY2tpbmdzKSB7CiAgICBzdGF0ZS50cmFja2luZ3MuZGF0YSA9IHRyYWNraW5nczsKICAgIHN0YXRlLnRyYWNraW5ncy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgIHN0YXRlLnRyYWNraW5ncy5zdWNjZXNzID0gdHJ1ZTsKICB9LAogIEdFVF9UUkFDS0lOR1NfRkFJTFVSRTogZnVuY3Rpb24gR0VUX1RSQUNLSU5HU19GQUlMVVJFKHN0YXRlLCBlcnJvcikgewogICAgc3RhdGUudHJhY2tpbmdzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgc3RhdGUudHJhY2tpbmdzLnN1Y2Nlc3MgPSBmYWxzZTsKICAgIHN0YXRlLnRyYWNraW5ncy5lcnJvciA9IGVycm9yOwogIH0sCiAgQ1JFQVRFX0ZJUk1XQVJFX1JFUVVFU1Q6IGZ1bmN0aW9uIENSRUFURV9GSVJNV0FSRV9SRVFVRVNUKHN0YXRlKSB7CiAgICBzdGF0ZS5maXJtd2FyZXMuaXNMb2FkaW5nID0gdHJ1ZTsKICB9LAogIENSRUFURV9GSVJNV0FSRV9TVUNDRVNTOiBmdW5jdGlvbiBDUkVBVEVfRklSTVdBUkVfU1VDQ0VTUyhzdGF0ZSwgZmlybXdhcmUpIHsKICAgIGNvbnNvbGUubG9nKHN0YXRlLmZpcm13YXJlcyk7CiAgICBzdGF0ZS5maXJtd2FyZXMuZGF0YS5yZXN1bHRzLnB1c2goZmlybXdhcmUpOwogICAgc3RhdGUuZmlybXdhcmVzLmRhdGEucmVzdWx0cyA9IF90b0NvbnN1bWFibGVBcnJheShzdGF0ZS5maXJtd2FyZXMuZGF0YS5yZXN1bHRzKTsKICAgIHN0YXRlLmZpcm13YXJlcy5kYXRhLnJlc3VsdHMuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICByZXR1cm4gYiAtIGE7CiAgICB9KTsKICAgIHN0YXRlLmZpcm13YXJlcy5uZXdseUNyZWF0ZWQgPSBmaXJtd2FyZTsKICAgIHN0YXRlLmZpcm13YXJlcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgIHN0YXRlLmZpcm13YXJlcy5zdWNjZXNzID0gdHJ1ZTsKICB9LAogIENSRUFURV9GSVJNV0FSRV9GQUlMVVJFOiBmdW5jdGlvbiBDUkVBVEVfRklSTVdBUkVfRkFJTFVSRShzdGF0ZSwgZXJyb3IpIHsKICAgIHN0YXRlLmZpcm13YXJlcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgIHN0YXRlLmZpcm13YXJlcy5zdWNjZXNzID0gZmFsc2U7CiAgICBzdGF0ZS5maXJtd2FyZXMuZXJyb3IgPSBlcnJvcjsKICB9LAogIFVQREFURV9GSVJNV0FSRV9SRVFVRVNUOiBmdW5jdGlvbiBVUERBVEVfRklSTVdBUkVfUkVRVUVTVChzdGF0ZSkgewogICAgc3RhdGUuZmlybXdhcmVzLmlzTG9hZGluZyA9IHRydWU7CiAgfSwKICBVUERBVEVfRklSTVdBUkVfU1VDQ0VTUzogZnVuY3Rpb24gVVBEQVRFX0ZJUk1XQVJFX1NVQ0NFU1Moc3RhdGUsIGZpcm13YXJlKSB7CiAgICBjb25zb2xlLmxvZyhzdGF0ZS5maXJtd2FyZXMpOwogICAgc3RhdGUuZmlybXdhcmVzLmRhdGEucmVzdWx0cyA9IHN0YXRlLmZpcm13YXJlcy5kYXRhLnJlc3VsdHMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBpdGVtLmFjdGl2ZTsKICAgIH0pLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gZmlybXdhcmUuZmlybXdhcmVJZCAhPT0gaXRlbS5maXJtd2FyZUlkOwogICAgfSk7IC8vIHN0YXRlLmZpcm13YXJlcy5kYXRhLnJlc3VsdHMucHVzaChmaXJtd2FyZSk7CgogICAgc3RhdGUuZmlybXdhcmVzLmRhdGEucmVzdWx0cy5wdXNoKGZpcm13YXJlKTsKICAgIHN0YXRlLmZpcm13YXJlcy5kYXRhLnJlc3VsdHMgPSBfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUuZmlybXdhcmVzLmRhdGEucmVzdWx0cyk7CiAgICBzdGF0ZS5maXJtd2FyZXMuZGF0YS5yZXN1bHRzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgcmV0dXJuIGIgLSBhOwogICAgfSk7CiAgICBzdGF0ZS5maXJtd2FyZXMubmV3bHlDcmVhdGVkID0gZmlybXdhcmU7CiAgICBzdGF0ZS5maXJtd2FyZXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICBzdGF0ZS5maXJtd2FyZXMuc3VjY2VzcyA9IHRydWU7CiAgfSwKICBVUERBVEVfRklSTVdBUkVfRkFJTFVSRTogZnVuY3Rpb24gVVBEQVRFX0ZJUk1XQVJFX0ZBSUxVUkUoc3RhdGUsIGVycm9yKSB7CiAgICBzdGF0ZS5maXJtd2FyZXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICBzdGF0ZS5maXJtd2FyZXMuc3VjY2VzcyA9IGZhbHNlOwogICAgc3RhdGUuZmlybXdhcmVzLmVycm9yID0gZXJyb3I7CiAgfSwKICBHRVRfRklSTVdBUkVTX1JFUVVFU1Q6IGZ1bmN0aW9uIEdFVF9GSVJNV0FSRVNfUkVRVUVTVChzdGF0ZSkgewogICAgc3RhdGUuZmlybXdhcmVzLmlzTG9hZGluZyA9IGZhbHNlOwogIH0sCiAgR0VUX0ZJUk1XQVJFU19TVUNDRVNTOiBmdW5jdGlvbiBHRVRfRklSTVdBUkVTX1NVQ0NFU1Moc3RhdGUsIGZpcm13YXJlcykgewogICAgc3RhdGUuZmlybXdhcmVzLmRhdGEgPSBmaXJtd2FyZXM7CiAgICBzdGF0ZS5maXJtd2FyZXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICBzdGF0ZS5maXJtd2FyZXMuc3VjY2VzcyA9IHRydWU7CiAgfSwKICBHRVRfRklSTVdBUkVTX0ZBSUxVUkU6IGZ1bmN0aW9uIEdFVF9GSVJNV0FSRVNfRkFJTFVSRShzdGF0ZSwgZXJyb3IpIHsKICAgIHN0YXRlLmZpcm13YXJlcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgIHN0YXRlLmZpcm13YXJlcy5zdWNjZXNzID0gZmFsc2U7CiAgICBzdGF0ZS5maXJtd2FyZXMuZXJyb3IgPSBlcnJvcjsKICB9LAogIC8vIENSRUFURV9ERUFMX1JFUVVFU1Qoc3RhdGUpIHsKICAvLyAgIHN0YXRlLmRlYWxzLmlzTG9hZGluZyA9IGZhbHNlOwogIC8vIH0sCiAgLy8gQ1JFQVRFX0RFQUxfU1VDQ0VTUyhzdGF0ZSwgZGVhbCkgewogIC8vICAgc3RhdGUuZGVhbHMuZGF0YS5wdXNoKGRlYWwpOwogIC8vICAgc3RhdGUuZGVhbHMubmV3bHlDcmVhdGVkID0gZGVhbDsKICAvLyAgIHN0YXRlLmRlYWxzLnN1Y2Nlc3MgPSB0cnVlOwogIC8vICAgc3RhdGUuZGVhbHMuaXNMb2FkaW5nID0gZmFsc2U7CiAgLy8gfSwKICAvLyBDUkVBVEVfREVBTF9GQUlMVVJFKHN0YXRlLCBlcnJvcikgewogIC8vICAgc3RhdGUuZGVhbHMuc3VjY2VzcyA9IGZhbHNlOwogIC8vICAgc3RhdGUuZGVhbHMuZXJyb3IgPSBlcnJvcjsKICAvLyB9LAogIC8vIEdFVF9ERUFMX1JFUVVFU1Qoc3RhdGUpIHsKICAvLyAgIHN0YXRlLmRlYWxzLmlzTG9hZGluZyA9IGZhbHNlOwogIC8vIH0sCiAgLy8gR0VUX0RFQUxfU1VDQ0VTUyhzdGF0ZSwgZGVhbCkgewogIC8vICAgc3RhdGUuZGVhbHMuZGF0YS5wdXNoKGRlYWwpOwogIC8vICAgc3RhdGUuZGVhbHMubmV3bHlDcmVhdGVkID0gZGVhbDsKICAvLyAgIHN0YXRlLmRlYWxzLnN1Y2Nlc3MgPSB0cnVlOwogIC8vICAgc3RhdGUuZGVhbHMuaXNMb2FkaW5nID0gZmFsc2U7CiAgLy8gfSwKICAvLyBHRVRfREVBTF9GQUlMVVJFKHN0YXRlLCBlcnJvcikgewogIC8vICAgc3RhdGUuZGVhbHMuc3VjY2VzcyA9IGZhbHNlOwogIC8vICAgc3RhdGUuZGVhbHMuZXJyb3IgPSBlcnJvcjsKICAvLyB9LAogIC8vIENBTkNFTF9ERUFMX1JFUVVFU1Qoc3RhdGUpIHsKICAvLyAgIHN0YXRlLmRlYWxzLmlzTG9hZGluZyA9IHRydWU7CiAgLy8gfSwKICAvLyBDQU5DRUxfREVBTF9TVUNDRVNTKHN0YXRlLCBkZWFsSWQpIHsKICAvLyAgIHN0YXRlLmRlYWxzLmlzTG9hZGluZyA9IGZhbHNlOwogIC8vICAgc3RhdGUuZGVhbHMuc3VjY2VzcyA9IHRydWU7CiAgLy8gICBjb25zdCByZXMgPSBzdGF0ZS5kZWFscy5kYXRhLmZpbHRlcigoZGVhbCkgPT4gZGVhbC5kZWFsSWQgPT09IGRlYWxJZCk7CiAgLy8gICByZXNbMF0uc3RhdHVzID0gJ0NBTkNFTCc7CiAgLy8gfSwKICAvLyBDQU5DRUxfREVBTF9GQUlMVVJFKHN0YXRlLCBlcnJvcikgewogIC8vICAgc3RhdGUuZGVhbHMuaXNMb2FkaW5nID0gZmFsc2U7CiAgLy8gICBzdGF0ZS5kZWFscy5lcnJvciA9IGVycm9yOwogIC8vIH0sCiAgLy8gQ0FOQ0VMX0JPT0tJTkdfUkVRVUVTVChzdGF0ZSkgewogIC8vICAgc3RhdGUuYm9va2luZ3MuaXNMb2FkaW5nID0gdHJ1ZTsKICAvLyB9LAogIC8vIENBTkNFTF9CT09LSU5HX1NVQ0NFU1Moc3RhdGUsIGJvb2tpbmdJZCkgewogIC8vICAgc3RhdGUuYm9va2luZ3MuaXNMb2FkaW5nID0gZmFsc2U7CiAgLy8gICBzdGF0ZS5ib29raW5ncy5zdWNjZXNzID0gdHJ1ZTsKICAvLyAgIGNvbnN0IHJlcyA9IHN0YXRlLmJvb2tpbmdzLmRhdGEuZmlsdGVyKChib29rKSA9PiBib29rLmJvb2tpbmdJZCA9PT0gYm9va2luZ0lkKTsKICAvLyAgIHJlc1swXS5zdGF0dXMgPSAnQ0FOQ0VMJzsKICAvLyB9LAogIC8vIENBTkNFTF9CT09LSU5HX0ZBSUxVUkUoc3RhdGUsIGVycm9yKSB7CiAgLy8gICBzdGF0ZS5ib29raW5ncy5pc0xvYWRpbmcgPSBmYWxzZTsKICAvLyAgIHN0YXRlLmJvb2tpbmdzLmVycm9yID0gZXJyb3I7CiAgLy8gfSwKICAvLyBET05FX0JPT0tJTkdfUkVRVUVTVChzdGF0ZSkgewogIC8vICAgc3RhdGUuYm9va2luZ3MuaXNMb2FkaW5nID0gdHJ1ZTsKICAvLyB9LAogIC8vIERPTkVfQk9PS0lOR19TVUNDRVNTKHN0YXRlLCBib29raW5nSWQpIHsKICAvLyAgIHN0YXRlLmJvb2tpbmdzLmlzTG9hZGluZyA9IGZhbHNlOwogIC8vICAgc3RhdGUuYm9va2luZ3Muc3VjY2VzcyA9IHRydWU7CiAgLy8gICBjb25zdCByZXMgPSBzdGF0ZS5ib29raW5ncy5kYXRhLmZpbHRlcigoYm9vaykgPT4gYm9vay5ib29raW5nSWQgPT09IGJvb2tpbmdJZCk7CiAgLy8gICByZXNbMF0uc3RhdHVzID0gJ0RPTkUnOwogIC8vIH0sCiAgLy8gRE9ORV9CT09LSU5HX0ZBSUxVUkUoc3RhdGUsIGVycm9yKSB7CiAgLy8gICBzdGF0ZS5ib29raW5ncy5pc0xvYWRpbmcgPSBmYWxzZTsKICAvLyAgIHN0YXRlLmJvb2tpbmdzLmVycm9yID0gZXJyb3I7CiAgLy8gfSwKICBVUERBVEVfVVNFUl9SRVFVRVNUOiBmdW5jdGlvbiBVUERBVEVfVVNFUl9SRVFVRVNUKHN0YXRlKSB7CiAgICBzdGF0ZS5kcml2ZXJzLmlzTG9hZGluZyA9IHRydWU7CiAgfSwKICBVUERBVEVfVVNFUl9TVUNDRVNTOiBmdW5jdGlvbiBVUERBVEVfVVNFUl9TVUNDRVNTKHN0YXRlLCBkcml2ZXIpIHsKICAgIHN0YXRlLmRyaXZlcnMuZGF0YS5yZXN1bHRzID0gc3RhdGUuZHJpdmVycy5kYXRhLnJlc3VsdHMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBkcml2ZXIudXNlcklkICE9PSBpdGVtLnVzZXJJZDsKICAgIH0pOwogICAgc3RhdGUuZHJpdmVycy5kYXRhLnJlc3VsdHMucHVzaChkcml2ZXIpOwogICAgc3RhdGUuZHJpdmVycy5kYXRhLnJlc3VsdHMoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgcmV0dXJuIGEuY3JlYXRlZEF0IC0gYi5jcmVhdGVkQXQ7CiAgICB9KTsKICAgIHN0YXRlLmRyaXZlcnMuc3VjY2VzcyA9IHRydWU7CiAgICBzdGF0ZS5kcml2ZXJzLmlzTG9hZGluZyA9IGZhbHNlOwogIH0sCiAgVVBEQVRFX1VTRVJfRkFJTFVSRTogZnVuY3Rpb24gVVBEQVRFX1VTRVJfRkFJTFVSRShzdGF0ZSwgZXJyb3IpIHsKICAgIHN0YXRlLmRyaXZlcnMuZXJyb3IgPSBlcnJvcjsKICAgIHN0YXRlLmRyaXZlcnMuc3VjY2VzcyA9IGZhbHNlOwogICAgc3RhdGUuZHJpdmVycy5pc0xvYWRpbmcgPSBmYWxzZTsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGxvZ2luOiBmdW5jdGlvbiBsb2dpbihfcmVmLCBwYXJhbXMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIC8vIHBhcmFtcyB7dXNlcm5hbWUsIHBhc3N3b3JkfQogICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9VU0VSX1JFUVVFU1QpOwogICAgICAgICAgICAgIHJlcyA9IG51bGw7CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDM7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5heGlvcy5wb3N0KCcvYXBpL2F1dGgvbG9naW4nLCBwYXJhbXMpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDEpIHsKICAgICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9VU0VSX1NVQ0NFU1MsIHJlcy5kYXRhLmRhdGEpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfVVNFUl9GQUlMVVJFKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMzsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMyk7CiAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX1VTRVJfRkFJTFVSRSwgX2NvbnRleHQudDApOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1szLCAxMF1dKTsKICAgIH0pKSgpOwogIH0sCiAgY2xlYXJVc2VyRGF0YTogZnVuY3Rpb24gY2xlYXJVc2VyRGF0YShfcmVmMikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkNMRUFSX1VTRVJfREFUQSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIGdldFVzZXI6IGZ1bmN0aW9uIGdldFVzZXIoX3JlZjMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCB1c2VySWQsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgdXNlcklkID0gd2luZG93LiRjb29raWVzLmdldCgndXNlcklkJyk7CgogICAgICAgICAgICAgIGlmICghdXNlcklkKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfVVNFUl9SRVFVRVNUKTsKICAgICAgICAgICAgICAgIHJlcyA9IDE7IC8vIGNvbnN0IHJlcyA9IGF3YWl0IHdpbmRvdy5heGlvcy5nZXQoYC9hcGkvdjEvdXNlcnMvJHt1c2VySWR9YCk7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfVVNFUl9TVUNDRVNTLCByZXMuZGF0YS5kYXRhKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9VU0VSX0ZBSUxVUkUpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfVVNFUl9GQUlMVVJFLCBlcnJvcik7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDc7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1c2VySWQsIHJvbGUgb3IgdXNlci5kYXRhIG51bGwnKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgdXBkYXRlVXNlcjogZnVuY3Rpb24gdXBkYXRlVXNlcihfcmVmNCwgbmV3VXNlcikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgIHZhciBjb21taXQsIHVzZXJJZCwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICB1c2VySWQgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCd1c2VySWQnKTsKCiAgICAgICAgICAgICAgaWYgKCF1c2VySWQpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMzsKICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5VUERBVEVfVVNFUl9SRVFVRVNUKTsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5heGlvcy5wdXQoIi9hcGkvdjEvdXNlcnMvIi5jb25jYXQodXNlcklkKSwgbmV3VXNlcik7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQ0LnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLlVQREFURV9VU0VSX1NVQ0NFU1MsIHJlcy5kYXRhLmRhdGEpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5VUERBVEVfVVNFUl9GQUlMVVJFKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLlVQREFURV9VU0VSX0ZBSUxVUkUsIF9jb250ZXh0NC50MCk7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndXNlcklkIG9yIHVzZXIuZGF0YSBudWxsJyk7CgogICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMywgMTFdXSk7CiAgICB9KSkoKTsKICB9LAogIGdldERyaXZlcnM6IGZ1bmN0aW9uIGdldERyaXZlcnMoX3JlZjUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICB2YXIgY29tbWl0LCB1c2VySWQsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICAgICAgICAgICAgdXNlcklkID0gd2luZG93LiRjb29raWVzLmdldCgndXNlcklkJyk7CgogICAgICAgICAgICAgIGlmICghdXNlcklkKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDM7CiAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX0RSSVZFUlNfUkVRVUVTVCk7CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA3OwogICAgICAgICAgICAgIHJldHVybiB3aW5kb3cuYXhpb3MuZ2V0KCcvYXBpL3YxL3VzZXJzL3VzZXInKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygicmVzIDoiLmNvbmNhdChyZXMuZGF0YSkpOwoKICAgICAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfRFJJVkVSU19TVUNDRVNTLCByZXMuZGF0YSk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9EUklWRVJTX0ZBSUxVUkUpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAxNTsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSAxMjsKICAgICAgICAgICAgICBfY29udGV4dDUudDAgPSBfY29udGV4dDVbImNhdGNoIl0oMyk7CiAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX0RSSVZFUlNfRkFJTFVSRSwgX2NvbnRleHQ1LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAxODsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgaGF2ZSB0byBsb2dpbiBiZWZvcmUgZ2V0IGRyaXZlcnMnKTsKCiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNSwgbnVsbCwgW1szLCAxMl1dKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0RGV2aWNlczogZnVuY3Rpb24gZ2V0RGV2aWNlcyhfcmVmNikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYoKSB7CiAgICAgIHZhciBjb21taXQsIHVzZXJJZCwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY2LmNvbW1pdDsKICAgICAgICAgICAgICB1c2VySWQgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCd1c2VySWQnKTsKCiAgICAgICAgICAgICAgaWYgKCF1c2VySWQpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gMzsKICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfREVWSUNFU19SRVFVRVNUKTsKICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5heGlvcy5nZXQoJy9hcGkvdjEvZGV2aWNlcycpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Ni5zZW50OwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJyZXMgOiIuY29uY2F0KHJlcy5kYXRhKSk7CgogICAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9ERVZJQ0VTX1NVQ0NFU1MsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX0RFVklDRVNfRkFJTFVSRSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDE1OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBfY29udGV4dDYucHJldiA9IDEyOwogICAgICAgICAgICAgIF9jb250ZXh0Ni50MCA9IF9jb250ZXh0NlsiY2F0Y2giXSgzKTsKICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfREVWSUNFU19GQUlMVVJFLCBfY29udGV4dDYudDApOwoKICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDE4OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBoYXZlIHRvIGxvZ2luIGJlZm9yZSBnZXQgZHJpdmVycycpOwoKICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU2LCBudWxsLCBbWzMsIDEyXV0pOwogICAgfSkpKCk7CiAgfSwKICBnZXREcml2ZXJzSW5EZXZpY2U6IGZ1bmN0aW9uIGdldERyaXZlcnNJbkRldmljZShfcmVmNywgZGV2aWNlSWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU3KCkgewogICAgICB2YXIgY29tbWl0LCB1c2VySWQsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU3JChfY29udGV4dDcpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDcucHJldiA9IF9jb250ZXh0Ny5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgICAgICAgICAgICAgdXNlcklkID0gd2luZG93LiRjb29raWVzLmdldCgndXNlcklkJyk7CgogICAgICAgICAgICAgIGlmICghdXNlcklkKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDE2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDcucHJldiA9IDM7CiAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX0RSSVZFUlNJTkRFVklDRV9SRVFVRVNUKTsKICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5heGlvcy5nZXQoIi9hcGkvdjEvdXNlci1kZXZpY2VzL3VzZXJzLyIuY29uY2F0KGRldmljZUlkKSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQ3LnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9EUklWRVJTSU5ERVZJQ0VfU1VDQ0VTUywgcmVzLmRhdGEpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfRFJJVkVSU0lOREVWSUNFX0ZBSUxVUkUpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgX2NvbnRleHQ3LnByZXYgPSAxMTsKICAgICAgICAgICAgICBfY29udGV4dDcudDAgPSBfY29udGV4dDdbImNhdGNoIl0oMyk7CiAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX0RSSVZFUlNJTkRFVklDRV9GQUlMVVJFLCBfY29udGV4dDcudDApOwoKICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDE3OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZXJJZCwgcm9sZSBvciB1c2VyLmRhdGEgbnVsbCcpOwoKICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU3LCBudWxsLCBbWzMsIDExXV0pOwogICAgfSkpKCk7CiAgfSwKICBjcmVhdGVEZXZpY2U6IGZ1bmN0aW9uIGNyZWF0ZURldmljZShfcmVmOCwgZGV2aWNlKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOCgpIHsKICAgICAgdmFyIGNvbW1pdCwgdXNlcklkLCByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOCQoX2NvbnRleHQ4KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ4LnByZXYgPSBfY29udGV4dDgubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjguY29tbWl0OwogICAgICAgICAgICAgIHVzZXJJZCA9IHdpbmRvdy4kY29va2llcy5nZXQoJ3VzZXJJZCcpOwoKICAgICAgICAgICAgICBpZiAoIXVzZXJJZCkgewogICAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSAxNjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQ4LnByZXYgPSAzOwogICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkNSRUFURV9ERVZJQ0VfUkVRVUVTVCk7CiAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSA3OwogICAgICAgICAgICAgIHJldHVybiB3aW5kb3cuYXhpb3MucG9zdCgnL2FwaS92MS9kZXZpY2VzJywgZGV2aWNlKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDguc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDIwMSkgewogICAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuQ1JFQVRFX0RFVklDRV9TVUNDRVNTLCByZXMuZGF0YS5kYXRhKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIF9jb250ZXh0OC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgX2NvbnRleHQ4LnQwID0gX2NvbnRleHQ4WyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkNSRUFURV9ERVZJQ0VfRkFJTFVSRSwgX2NvbnRleHQ4LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSAxNzsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgaGF2ZSB0byBsb2dpbiBiZWZvcmUgZ2V0IGEgbmV3IGJvb2tpbmcnKTsKCiAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlOCwgbnVsbCwgW1szLCAxMV1dKTsKICAgIH0pKSgpOwogIH0sCiAgdXBkYXRlRGV2aWNlOiBmdW5jdGlvbiB1cGRhdGVEZXZpY2UoX3JlZjksIG5ld0RldmljZSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTkoKSB7CiAgICAgIHZhciBjb21taXQsIHVzZXJJZCwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTkkKF9jb250ZXh0OSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OS5wcmV2ID0gX2NvbnRleHQ5Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY5LmNvbW1pdDsKICAgICAgICAgICAgICB1c2VySWQgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCd1c2VySWQnKTsKCiAgICAgICAgICAgICAgaWYgKCF1c2VySWQpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0OS5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0OS5wcmV2ID0gMzsKICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5VUERBVEVfREVWSUNFX1JFUVVFU1QpOwogICAgICAgICAgICAgIF9jb250ZXh0OS5uZXh0ID0gNzsKICAgICAgICAgICAgICByZXR1cm4gd2luZG93LmF4aW9zLnB1dCgiL2FwaS92MS9kZXZpY2VzLyIuY29uY2F0KG5ld0RldmljZS5kZXZpY2VJZCksIG5ld0RldmljZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDkuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDIwMCkgewogICAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuVVBEQVRFX0RFVklDRV9TVUNDRVNTLCByZXMuZGF0YS5kYXRhKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuVVBEQVRFX0RFVklDRV9GQUlMVVJFKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0OS5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIF9jb250ZXh0OS5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgX2NvbnRleHQ5LnQwID0gX2NvbnRleHQ5WyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLlVQREFURV9ERVZJQ0VfRkFJTFVSRSwgX2NvbnRleHQ5LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgX2NvbnRleHQ5Lm5leHQgPSAxNzsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdkZXZpY2VJZCBvciBkZXZpY2UgaXMgbnVsbCcpOwoKICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ5LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU5LCBudWxsLCBbWzMsIDExXV0pOwogICAgfSkpKCk7CiAgfSwKICBnZXRUcmFja2luZ3M6IGZ1bmN0aW9uIGdldFRyYWNraW5ncyhfcmVmMTApIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMCgpIHsKICAgICAgdmFyIGNvbW1pdCwgdXNlcklkLCByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTAkKF9jb250ZXh0MTApIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDEwLnByZXYgPSBfY29udGV4dDEwLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxMC5jb21taXQ7CiAgICAgICAgICAgICAgdXNlcklkID0gd2luZG93LiRjb29raWVzLmdldCgndXNlcklkJyk7CgogICAgICAgICAgICAgIGlmICghdXNlcklkKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDEwLm5leHQgPSAxNjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQxMC5wcmV2ID0gMzsKICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfVFJBQ0tJTkdTX1JFUVVFU1QpOwogICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5heGlvcy5nZXQoJy9hcGkvdjEvZGF0YS10cmFja2luZ3MtaW5mb3MnKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDEwLnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9UUkFDS0lOR1NfU1VDQ0VTUywgcmVzLmRhdGEpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfVFJBQ0tJTkdTX0ZBSUxVUkUpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQxMC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIF9jb250ZXh0MTAucHJldiA9IDExOwogICAgICAgICAgICAgIF9jb250ZXh0MTAudDAgPSBfY29udGV4dDEwWyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9UUkFDS0lOR1NfRkFJTFVSRSwgX2NvbnRleHQxMC50MCk7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDE3OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBoYXZlIHRvIGxvZ2luIGJlZm9yZSBnZXQgZHJpdmVycycpOwoKICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMTAsIG51bGwsIFtbMywgMTFdXSk7CiAgICB9KSkoKTsKICB9LAogIGdldEZpcm13YXJlczogZnVuY3Rpb24gZ2V0RmlybXdhcmVzKF9yZWYxMSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTExKCkgewogICAgICB2YXIgY29tbWl0LCB1c2VySWQsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMSQoX2NvbnRleHQxMSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTEucHJldiA9IF9jb250ZXh0MTEubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjExLmNvbW1pdDsKICAgICAgICAgICAgICB1c2VySWQgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCd1c2VySWQnKTsKCiAgICAgICAgICAgICAgaWYgKCF1c2VySWQpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTEubmV4dCA9IDE2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDExLnByZXYgPSAzOwogICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9GSVJNV0FSRVNfUkVRVUVTVCk7CiAgICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gNzsKICAgICAgICAgICAgICByZXR1cm4gd2luZG93LmF4aW9zLmdldCgnL2FwaS92MS9maXJtd2FyZXMnKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDExLnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9GSVJNV0FSRVNfU1VDQ0VTUywgcmVzLmRhdGEpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfRklSTVdBUkVTX0ZBSUxVUkUpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIF9jb250ZXh0MTEucHJldiA9IDExOwogICAgICAgICAgICAgIF9jb250ZXh0MTEudDAgPSBfY29udGV4dDExWyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9GSVJNV0FSRVNfRkFJTFVSRSwgX2NvbnRleHQxMS50MCk7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIF9jb250ZXh0MTEubmV4dCA9IDE3OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBoYXZlIHRvIGxvZ2luIGJlZm9yZSBnZXQgZmlybXdhcmVzJyk7CgogICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDExLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUxMSwgbnVsbCwgW1szLCAxMV1dKTsKICAgIH0pKSgpOwogIH0sCiAgLy8gYXN5bmMgZ2V0T25lQm9va2luZyh7IGNvbW1pdCwgc3RhdGUgfSwgYm9va2luZ0lkKSB7CiAgLy8gICBjb25zdCB1c2VySWQgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCd1c2VySWQnKTsKICAvLyAgIGNvbnN0IHJvbGUgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCdyb2xlJyk7CiAgLy8gICBpZiAodXNlcklkICYmIHJvbGUgJiYgc3RhdGUudXNlci5kYXRhKSB7CiAgLy8gICAgIHRyeSB7CiAgLy8gICAgICAgY29uc3QgY3VycmVudElkcyA9IHN0YXRlLmJvb2tpbmdzLmRhdGEubWFwKChib29raW5nKSA9PiBib29raW5nLmJvb2tpbmdJZCk7CiAgLy8gICAgICAgaWYgKCFjdXJyZW50SWRzLmluY2x1ZGVzKGJvb2tpbmdJZCkpIHsKICAvLyAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9CT09LSU5HX1JFUVVFU1QpOwogIC8vICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgd2luZG93LmF4aW9zLmdldChgL2FwaS92MS9ib29raW5ncy8ke2Jvb2tpbmdJZH1gKTsKICAvLyAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAvLyAgICAgICAgICAgcmVzLmRhdGEuZGF0YS5uZXcgPSB0cnVlOwogIC8vICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfQk9PS0lOR19TVUNDRVNTLCByZXMuZGF0YS5kYXRhKTsKICAvLyAgICAgICAgIH0gZWxzZSB7CiAgLy8gICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9CT09LSU5HX0ZBSUxVUkUpOwogIC8vICAgICAgICAgfQogIC8vICAgICAgIH0gZWxzZSB7CiAgLy8gICAgICAgICBjb25zb2xlLmxvZygndGhpcyBib29raW5nIGlzIGFscmVhZHkgaW4gc3RvcmUnKTsKICAvLyAgICAgICB9CiAgLy8gICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgLy8gICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX0JPT0tJTkdfRkFJTFVSRSwgZXJyb3IpOwogIC8vICAgICB9CiAgLy8gICB9IGVsc2UgewogIC8vICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBoYXZlIHRvIGxvZ2luIGJlZm9yZSBnZXQgYSBuZXcgYm9va2luZycpOwogIC8vICAgfQogIC8vIH0sCiAgY3JlYXRlRmlybXdhcmU6IGZ1bmN0aW9uIGNyZWF0ZUZpcm13YXJlKF9yZWYxMiwgZmlybXdhcmUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMigpIHsKICAgICAgdmFyIGNvbW1pdCwgdXNlcklkLCByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTIkKF9jb250ZXh0MTIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDEyLnByZXYgPSBfY29udGV4dDEyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxMi5jb21taXQ7CiAgICAgICAgICAgICAgdXNlcklkID0gd2luZG93LiRjb29raWVzLmdldCgndXNlcklkJyk7CgogICAgICAgICAgICAgIGlmICghdXNlcklkKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDEyLm5leHQgPSAxNjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQxMi5wcmV2ID0gMzsKICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5DUkVBVEVfRklSTVdBUkVfUkVRVUVTVCk7CiAgICAgICAgICAgICAgX2NvbnRleHQxMi5uZXh0ID0gNzsKICAgICAgICAgICAgICByZXR1cm4gd2luZG93LmF4aW9zLnBvc3QoJy9hcGkvdjEvZmlybXdhcmVzJywgZmlybXdhcmUpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0MTIuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDIwMSkgewogICAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuQ1JFQVRFX0ZJUk1XQVJFX1NVQ0NFU1MsIHJlcy5kYXRhLmRhdGEpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQxMi5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIF9jb250ZXh0MTIucHJldiA9IDExOwogICAgICAgICAgICAgIF9jb250ZXh0MTIudDAgPSBfY29udGV4dDEyWyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkNSRUFURV9GSVJNV0FSRV9GQUlMVVJFLCBfY29udGV4dDEyLnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgX2NvbnRleHQxMi5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignWW91IGhhdmUgdG8gbG9naW4gYmVmb3JlIGNyZWF0ZSBhIG5ldyBmaXJtd2FyZScpOwoKICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMTIsIG51bGwsIFtbMywgMTFdXSk7CiAgICB9KSkoKTsKICB9LAogIHVwZGF0ZUZpcm13YXJlOiBmdW5jdGlvbiB1cGRhdGVGaXJtd2FyZShfcmVmMTMsIGlkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTMoKSB7CiAgICAgIHZhciBjb21taXQsIHVzZXJJZCwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTEzJChfY29udGV4dDEzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMy5wcmV2ID0gX2NvbnRleHQxMy5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMTMuY29tbWl0OwogICAgICAgICAgICAgIHVzZXJJZCA9IHdpbmRvdy4kY29va2llcy5nZXQoJ3VzZXJJZCcpOwoKICAgICAgICAgICAgICBpZiAoIXVzZXJJZCkgewogICAgICAgICAgICAgICAgX2NvbnRleHQxMy5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0MTMucHJldiA9IDM7CiAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuVVBEQVRFX0ZJUk1XQVJFX1JFUVVFU1QpOwogICAgICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5heGlvcy5wdXQoIi9hcGkvdjEvZmlybXdhcmVzLyIuY29uY2F0KGlkKSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQxMy5zZW50OwoKICAgICAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5VUERBVEVfRklSTVdBUkVfU1VDQ0VTUywgcmVzLmRhdGEuZGF0YSk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLlVQREFURV9GSVJNV0FSRV9GQUlMVVJFKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBfY29udGV4dDEzLnByZXYgPSAxMTsKICAgICAgICAgICAgICBfY29udGV4dDEzLnQwID0gX2NvbnRleHQxM1siY2F0Y2giXSgzKTsKICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5VUERBVEVfRklSTVdBUkVfRkFJTFVSRSwgX2NvbnRleHQxMy50MCk7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDE3OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZXJJZCBvciB1c2VyLmRhdGEgbnVsbCcpOwoKICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMy5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMTMsIG51bGwsIFtbMywgMTFdXSk7CiAgICB9KSkoKTsKICB9IC8vIGFzeW5jIGdldERlYWxzKHsgY29tbWl0LCBzdGF0ZSB9KSB7CiAgLy8gICBjb25zdCB1c2VySWQgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCd1c2VySWQnKTsKICAvLyAgIGNvbnN0IHJvbGUgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCdyb2xlJyk7CiAgLy8gICBpZiAodXNlcklkICYmIHJvbGUgJiYgc3RhdGUudXNlci5kYXRhKSB7CiAgLy8gICAgIHRyeSB7CiAgLy8gICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX0RFQUxTX1JFUVVFU1QpOwogIC8vICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHdpbmRvdy5heGlvcy5nZXQoYC9hcGkvdjEvJHtyb2xlfS8ke3VzZXJJZH0vZGVhbHNgKTsKICAvLyAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgLy8gICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfREVBTFNfU1VDQ0VTUywgcmVzLmRhdGEuZGF0YSk7CiAgLy8gICAgICAgfSBlbHNlIHsKICAvLyAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9ERUFMU19GQUlMVVJFKTsKICAvLyAgICAgICB9CiAgLy8gICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgLy8gICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX0RFQUxTX0ZBSUxVUkUsIGVycm9yKTsKICAvLyAgICAgfQogIC8vICAgfSBlbHNlIHsKICAvLyAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgaGF2ZSB0byBsb2dpbiBiZWZvcmUgZ2V0IGRlYWxzJyk7CiAgLy8gICB9CiAgLy8gfSwKICAvLyBhc3luYyBjcmVhdGVEZWFsKHsgY29tbWl0LCBzdGF0ZSB9LCBkZWFsKSB7CiAgLy8gICBjb25zdCB1c2VySWQgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCd1c2VySWQnKTsKICAvLyAgIGNvbnN0IHJvbGUgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCdyb2xlJyk7CiAgLy8gICBpZiAodXNlcklkICYmIHJvbGUgJiYgc3RhdGUudXNlci5kYXRhKSB7CiAgLy8gICAgIHRyeSB7CiAgLy8gICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuQ1JFQVRFX0RFQUxfUkVRVUVTVCk7CiAgLy8gICAgICAgY29uc3QgcmVzID0gYXdhaXQgd2luZG93LmF4aW9zLnBvc3QoJy9hcGkvdjEvZGVhbHMnLCBkZWFsKTsKICAvLyAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAxKSB7CiAgLy8gICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5DUkVBVEVfREVBTF9TVUNDRVNTLCByZXMuZGF0YS5kYXRhKTsKICAvLyAgICAgICB9IGVsc2UgewogIC8vICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuQ1JFQVRFX0RFQUxfRkFJTFVSRSk7CiAgLy8gICAgICAgfQogIC8vICAgICB9IGNhdGNoIChlcnJvcikgewogIC8vICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkNSRUFURV9ERUFMX0ZBSUxVUkUsIGVycm9yKTsKICAvLyAgICAgfQogIC8vICAgfSBlbHNlIHsKICAvLyAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgaGF2ZSB0byBsb2dpbiBiZWZvcmUgZ2V0IGRlYWxzJyk7CiAgLy8gICB9CiAgLy8gfSwKICAvLyBhc3luYyBnZXREZWFsKHsgY29tbWl0LCBzdGF0ZSB9LCBkZWFsSWRzKSB7CiAgLy8gICBjb25zdCB1c2VySWQgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCd1c2VySWQnKTsKICAvLyAgIGNvbnN0IHJvbGUgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCdyb2xlJyk7CiAgLy8gICBjb25zdCBjdXJyZW50SWRzID0gc3RhdGUuZGVhbHMuZGF0YS5tYXAoKGRlYWwpID0+IGRlYWwuZGVhbElkKTsKICAvLyAgIGNvbnN0IG5ld0lkcyA9IGRlYWxJZHMuZmlsdGVyKChuZXdJZCkgPT4gIWN1cnJlbnRJZHMuaW5jbHVkZXMobmV3SWQpKTsKICAvLyAgIGlmIChuZXdJZHMubGVuZ2h0ID4gMCkgewogIC8vICAgICBpZiAodXNlcklkICYmIHJvbGUgJiYgc3RhdGUudXNlci5kYXRhKSB7CiAgLy8gICAgICAgdHJ5IHsKICAvLyAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkdFVF9ERUFMX1JFUVVFU1QpOwogIC8vICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgd2luZG93LmF4aW9zLmdldChgL2FwaS92MS9kZWFscy8ke25ld0lkc1swXX1gKTsKICAvLyAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAvLyAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX0RFQUxfU1VDQ0VTUywgcmVzLmRhdGEuZGF0YSk7CiAgLy8gICAgICAgICB9IGVsc2UgewogIC8vICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5HRVRfREVBTF9GQUlMVVJFKTsKICAvLyAgICAgICAgIH0KICAvLyAgICAgICB9IGNhdGNoIChlcnJvcikgewogIC8vICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuR0VUX0RFQUxfRkFJTFVSRSwgZXJyb3IpOwogIC8vICAgICAgIH0KICAvLyAgICAgfSBlbHNlIHsKICAvLyAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBoYXZlIHRvIGxvZ2luIGJlZm9yZSBnZXQgZGVhbHMnKTsKICAvLyAgICAgfQogIC8vICAgfSBlbHNlIHsKICAvLyAgICAgY29uc29sZS5sb2coJ25vdCBhIG5ldyBkZWFsJyk7CiAgLy8gICB9CiAgLy8gfSwKICAvLyBhc3luYyBjYW5jZWxEZWFsKHsgY29tbWl0LCBzdGF0ZSB9LCBkZWFsSWQpIHsKICAvLyAgIGNvbnN0IHVzZXJJZCA9IHdpbmRvdy4kY29va2llcy5nZXQoJ3VzZXJJZCcpOwogIC8vICAgY29uc3Qgcm9sZSA9IHdpbmRvdy4kY29va2llcy5nZXQoJ3JvbGUnKTsKICAvLyAgIGlmICh1c2VySWQgJiYgcm9sZSAmJiBzdGF0ZS51c2VyLmRhdGEpIHsKICAvLyAgICAgdHJ5IHsKICAvLyAgICAgICBjb25zdCBkZWFsID0gc3RhdGUuZGVhbHMuZGF0YS5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0uZGVhbElkID09PSBkZWFsSWQpWzBdOwogIC8vICAgICAgIGlmIChkZWFsKSB7CiAgLy8gICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5DQU5DRUxfREVBTF9SRVFVRVNUKTsKICAvLyAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHdpbmRvdy5heGlvcy5wdXQoJy9hcGkvdjEvZGVhbHMnLCB7CiAgLy8gICAgICAgICAgIGRlYWxJZCwKICAvLyAgICAgICAgICAgcmVudGVySWQ6IGRlYWwucmVudGVyLnJlbnRlcklkLAogIC8vICAgICAgICAgICB2ZW5kb3JJZDogZGVhbC52ZW5kb3IudmVuZG9ySWQsCiAgLy8gICAgICAgICAgIHR5cGVJZDogZGVhbC50eXBlLnR5cGVJZCwKICAvLyAgICAgICAgICAgc3RhdHVzOiAnQ0FOQ0VMRUQnLAogIC8vICAgICAgICAgICBvZmZlcmVkUHJpY2U6IGRlYWwub2ZmZXJlZFByaWNlLAogIC8vICAgICAgICAgfSk7CiAgLy8gICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgLy8gICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkNBTkNFTF9ERUFMX1NVQ0NFU1MsIHJlcy5kYXRhLmRhdGEpOwogIC8vICAgICAgICAgfQogIC8vICAgICAgIH0gZWxzZSB7CiAgLy8gICAgICAgICBjb25zb2xlLmxvZygnZGVhbCBpcyBudWxsJyk7CiAgLy8gICAgICAgfQogIC8vICAgICB9IGNhdGNoIChlcnJvcikgewogIC8vICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkNBTkNFTF9ERUFMX0ZBSUxVUkUsIGVycm9yKTsKICAvLyAgICAgfQogIC8vICAgfSBlbHNlIHsKICAvLyAgICAgdGhyb3cgbmV3IEVycm9yKCd5b3UgYXJlIG5vdCBsb2dlZCBpbicpOwogIC8vICAgfQogIC8vIH0sCiAgLy8gYXN5bmMgY2FuY2VsQm9va2luZyh7IGNvbW1pdCwgc3RhdGUgfSwgYm9va2luZ0lkKSB7CiAgLy8gICBjb25zdCB1c2VySWQgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCd1c2VySWQnKTsKICAvLyAgIGNvbnN0IHJvbGUgPSB3aW5kb3cuJGNvb2tpZXMuZ2V0KCdyb2xlJyk7CiAgLy8gICBpZiAodXNlcklkICYmIHJvbGUgJiYgc3RhdGUudXNlci5kYXRhKSB7CiAgLy8gICAgIHRyeSB7CiAgLy8gICAgICAgY29uc3QgYm9va2luZyA9IHN0YXRlLmJvb2tpbmdzLmRhdGEuZmlsdGVyKChpdGVtKSA9PiBpdGVtLmJvb2tpbmdJZCA9PT0gYm9va2luZ0lkKVswXTsKICAvLyAgICAgICBpZiAoYm9va2luZykgewogIC8vICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuQ0FOQ0VMX0JPT0tJTkdfUkVRVUVTVCk7CiAgLy8gICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB3aW5kb3cuYXhpb3MucHV0KGAvYXBpL3YxL2Jvb2tpbmdzLyR7Ym9va2luZ0lkfWAsIHsKICAvLyAgICAgICAgICAgYm9va2luZ0lkLAogIC8vICAgICAgICAgICBkZWFsSWQ6IGJvb2tpbmcuZGVhbC5kZWFsSWQsCiAgLy8gICAgICAgICAgIHR5cGVJZDogYm9va2luZy50eXBlLnR5cGVJZCwKICAvLyAgICAgICAgICAgcmVudGVySWQ6IGJvb2tpbmcucmVudGVyLnJlbnRlcklkLAogIC8vICAgICAgICAgICB2ZW5kb3JJZDogYm9va2luZy52ZW5kb3IudmVuZG9ySWQsCiAgLy8gICAgICAgICAgIHN0YXR1czogJ0NBTkNFTExFRCcsCiAgLy8gICAgICAgICAgIG1lZXRUaW1lOiBib29raW5nLm1lZXRUaW1lLAogIC8vICAgICAgICAgICBxckNvZGU6IGJvb2tpbmcucXJDb2RlLAogIC8vICAgICAgICAgfSk7CiAgLy8gICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgLy8gICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLkNBTkNFTF9CT09LSU5HX1NVQ0NFU1MsIHJlcy5kYXRhLmRhdGEpOwogIC8vICAgICAgICAgfQogIC8vICAgICAgIH0gZWxzZSB7CiAgLy8gICAgICAgICBjb25zb2xlLmxvZyhgYm9va2luZyAke2Jvb2tpbmdJZH0gaXMgbm90IGV4aXN0ZWQgaW4gc3RvcmVgKTsKICAvLyAgICAgICB9CiAgLy8gICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgLy8gICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuQ1JFQVRFX0JPT0tJTkdfRkFJTFVSRSwgZXJyb3IpOwogIC8vICAgICB9CiAgLy8gICB9IGVsc2UgewogIC8vICAgICB0aHJvdyBuZXcgRXJyb3IoJ3lvdSBhcmUgbm90IGxvZ2VkIGluJyk7CiAgLy8gICB9CiAgLy8gfSwKICAvLyBhc3luYyB1cGRhdGVCb29raW5nU3RhdHVzKHsgY29tbWl0LCBzdGF0ZSB9LCBib29raW5nSWQpIHsKICAvLyAgIGNvbnN0IHVzZXJJZCA9IHdpbmRvdy4kY29va2llcy5nZXQoJ3VzZXJJZCcpOwogIC8vICAgY29uc3Qgcm9sZSA9IHdpbmRvdy4kY29va2llcy5nZXQoJ3JvbGUnKTsKICAvLyAgIGlmICh1c2VySWQgJiYgcm9sZSAmJiBzdGF0ZS51c2VyLmRhdGEpIHsKICAvLyAgICAgdHJ5IHsKICAvLyAgICAgICBjb25zdCBib29raW5nID0gc3RhdGUuYm9va2luZ3MuZGF0YS5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0uYm9va2luZ0lkID09PSBib29raW5nSWQpWzBdOwogIC8vICAgICAgIGlmIChib29raW5nKSB7CiAgLy8gICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5ET05FX0JPT0tJTkdfUkVRVUVTVCk7CiAgLy8gICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB3aW5kb3cuYXhpb3MucHV0KGAvYXBpL3YxL2Jvb2tpbmdzLyR7Ym9va2luZ0lkfWAsIHsKICAvLyAgICAgICAgICAgYm9va2luZ0lkLAogIC8vICAgICAgICAgICBkZWFsSWQ6IGJvb2tpbmcuZGVhbCA/IGJvb2tpbmcuZGVhbC5kZWFsSWQgOiBudWxsLAogIC8vICAgICAgICAgICB0eXBlSWQ6IGJvb2tpbmcudHlwZS50eXBlSWQsCiAgLy8gICAgICAgICAgIHJlbnRlcklkOiBib29raW5nLnJlbnRlci5yZW50ZXJJZCwKICAvLyAgICAgICAgICAgdmVuZG9ySWQ6IGJvb2tpbmcudmVuZG9yLnZlbmRvcklkLAogIC8vICAgICAgICAgICBzdGF0dXM6ICdET05FJywKICAvLyAgICAgICAgICAgbWVldFRpbWU6IGJvb2tpbmcubWVldFRpbWUsCiAgLy8gICAgICAgICAgIHFyQ29kZTogYm9va2luZy5xckNvZGUsCiAgLy8gICAgICAgICB9KTsKICAvLyAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAvLyAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuRE9ORV9CT09LSU5HX1NVQ0NFU1MsIGJvb2tpbmdJZCk7CiAgLy8gICAgICAgICB9CiAgLy8gICAgICAgfSBlbHNlIHsKICAvLyAgICAgICAgIGNvbnNvbGUubG9nKGBib29raW5nICR7Ym9va2luZ0lkfSBpcyBub3QgZXhpc3RlZCBpbiBzdG9yZWApOwogIC8vICAgICAgIH0KICAvLyAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAvLyAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5ET05FX0JPT0tJTkdfRkFJTFVSRSwgZXJyb3IpOwogIC8vICAgICB9CiAgLy8gICB9IGVsc2UgewogIC8vICAgICB0aHJvdyBuZXcgRXJyb3IoJ3lvdSBhcmUgbm90IGxvZ2VkIGluJyk7CiAgLy8gICB9CiAgLy8gfSwKCn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBteVN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGdldHRlcnM6IG15R2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["D:/capstone/DrowsinessFrontEnd/src/store/modules/user.js"],"names":["myState","user","data","isLoading","success","error","drivers","devices","trackings","firmwares","newlyCreated","driversInDevice","myGetters","mutationTypes","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","CLEAR_USER_DATA","GET_DRIVERS_REQUEST","GET_DRIVERS_SUCCESS","GET_DRIVERS_FAILURE","GET_DEVICES_REQUEST","GET_DEVICES_SUCCESS","GET_DEVICES_FAILURE","CREATE_DEVICE_REQUEST","CREATE_DEVICE_SUCCESS","CREATE_DEVICE_FAILURE","UPDATE_DEVICE_REQUEST","UPDATE_DEVICE_SUCCESS","UPDATE_DEVICE_FAILURE","GET_TRACKINGS_REQUEST","GET_TRACKINGS_SUCCESS","GET_TRACKINGS_FAILURE","GET_FIRMWARES_REQUEST","GET_FIRMWARES_SUCCESS","GET_FIRMWARES_FAILURE","CREATE_FIRMWARE_REQUEST","CREATE_FIRMWARE_SUCCESS","CREATE_FIRMWARE_FAILURE","UPDATE_FIRMWARE_REQUEST","UPDATE_FIRMWARE_SUCCESS","UPDATE_FIRMWARE_FAILURE","GET_DRIVERSINDEVICE_REQUEST","GET_DRIVERSINDEVICE_SUCCESS","GET_DRIVERSINDEVICE_FAILURE","mutations","state","sort","a","b","device","console","log","results","push","filter","item","deviceId","firmware","active","firmwareId","driver","userId","createdAt","actions","login","params","commit","res","window","axios","post","status","clearUserData","getUser","$cookies","get","Error","updateUser","newUser","put","getDrivers","getDevices","getDriversInDevice","createDevice","updateDevice","newDevice","getTrackings","getFirmwares","createFirmware","updateFirmware","id","namespaced","getters"],"mappings":"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","sourcesContent":["const myState = () => ({\n  user: {\n    data: null,\n    isLoading: false,\n    success: null,\n    error: null,\n  },\n  drivers: {\n    data: [],\n    isLoading: false,\n    success: null,\n    error: null,\n  },\n  devices: {\n    data: [],\n    isLoading: false,\n    success: null,\n    error: null,\n  },\n  trackings: {\n    data: [],\n    isLoading: false,\n    success: null,\n    error: null,\n  },\n  firmwares: {\n    data: [],\n    isLoading: false,\n    success: null,\n    error: null,\n    newlyCreated: null,\n  },\n  driversInDevice: {\n    data: [],\n    isLoading: false,\n    success: null,\n    error: null,\n  },\n  // deals: {\n  //   data: [],\n  //   isLoading: false,\n  //   success: null,\n  //   error: null,\n  //   newlyCreated: null,\n  // },\n});\n\nconst myGetters = {\n  // get lasted deal\n  // findLastedDeal: (state) => (renterId, vendorId, typeId) => {\n  //   let result = state.deals.data.filter((deal) => {\n  //     if (deal.renter.renterId === renterId &&\n  //       deal.vendor.vendorId === vendorId &&\n  //       deal.type.typeId === typeId &&\n  //       deal.status === 'CREATED') {\n  //       return true;\n  //     }\n  //     return false;\n  //   });\n  //   result = result.sort((deal1, deal2) => deal1.creationTime - deal2.creationTime);\n  //   console.log(`lasted deal: ${result[0]}`);\n  //   return result[0];\n  // },\n  // findPendingBooking: (state) => (renterId, vendorId, typeId) => {\n  //   const result = state.bookings.data.filter((booking) => {\n  //     if (booking.renter.renterId === renterId &&\n  //       booking.vendor.vendorId === vendorId &&\n  //       booking.type.typeId === typeId &&\n  //       booking.status === 'INCOMING') {\n  //       return true;\n  //     }\n  //     return false;\n  //   });\n  //   console.log(`pending booking ${result[0]}`);\n  //   return result[0];\n  // },\n};\nconst mutationTypes = {\n  GET_USER_REQUEST: 'GET_USER_REQUEST',\n  GET_USER_SUCCESS: 'GET_USER_SUCCESS',\n  GET_USER_FAILURE: 'GET_USER_FAILURE',\n  UPDATE_USER_REQUEST: 'UPDATE_USER_REQUEST',\n  UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS',\n  UPDATE_USER_FAILURE: 'UPDATE_USER_FAILURE',\n  CLEAR_USER_DATA: 'CLEAR_USER_DATA',\n  GET_DRIVERS_REQUEST: 'GET_DRIVERS_REQUEST',\n  GET_DRIVERS_SUCCESS: 'GET_DRIVERS_SUCCESS',\n  GET_DRIVERS_FAILURE: 'GET_DRIVERS_FAILURE',\n  GET_DEVICES_REQUEST: 'GET_DEVICES_REQUEST',\n  GET_DEVICES_SUCCESS: 'GET_DEVICES_SUCCESS',\n  GET_DEVICES_FAILURE: 'GET_DEVICES_FAILURE',\n  CREATE_DEVICE_REQUEST: 'CREATE_DEVICE_REQUEST',\n  CREATE_DEVICE_SUCCESS: 'CREATE_DEVICE_SUCCESS',\n  CREATE_DEVICE_FAILURE: 'CREATE_DEVICE_FAILURE',\n  UPDATE_DEVICE_REQUEST: 'UPDATE_DEVICE_REQUEST',\n  UPDATE_DEVICE_SUCCESS: 'UPDATE_DEVICE_SUCCESS',\n  UPDATE_DEVICE_FAILURE: 'UPDATE_DEVICE_FAILURE',\n  GET_TRACKINGS_REQUEST: 'GET_TRACKINGS_REQUEST',\n  GET_TRACKINGS_SUCCESS: 'GET_TRACKINGS_SUCCESS',\n  GET_TRACKINGS_FAILURE: 'GET_TRACKINGS_FAILURE',\n  GET_FIRMWARES_REQUEST: 'GET_FIRMWARES_REQUEST',\n  GET_FIRMWARES_SUCCESS: 'GET_FIRMWARES_SUCCESS',\n  GET_FIRMWARES_FAILURE: 'GET_FIRMWARES_FAILURE',\n  CREATE_FIRMWARE_REQUEST: 'CREATE_FIRMWARE_REQUEST',\n  CREATE_FIRMWARE_SUCCESS: 'CREATE_FIRMWARE_SUCCESS',\n  CREATE_FIRMWARE_FAILURE: 'CREATE_FIRMWARE_FAILURE',\n  UPDATE_FIRMWARE_REQUEST: 'UPDATE_FIRMWARE_REQUEST',\n  UPDATE_FIRMWARE_SUCCESS: 'UPDATE_FIRMWARE_SUCCESS',\n  UPDATE_FIRMWARE_FAILURE: 'UPDATE_FIRMWARE_FAILURE',\n  GET_DRIVERSINDEVICE_REQUEST: 'GET_DRIVERSINDEVICE_REQUEST',\n  GET_DRIVERSINDEVICE_SUCCESS: 'GET_DRIVERSINDEVICE_SUCCESS',\n  GET_DRIVERSINDEVICE_FAILURE: 'GET_DRIVERSINDEVICE_FAILURE',\n  // GET_DEALS_REQUEST: 'GET_DEALS_REQUEST',\n  // GET_DEALS_SUCCESS: 'GET_DEALS_SUCCESS',\n  // GET_DEALS_FAILURE: 'GET_DEALS_FAILURE',\n  // CREATE_DEAL_REQUEST: 'CREATE_DEAL_REQUEST',\n  // CREATE_DEAL_SUCCESS: 'CREATE_DEAL_SUCCESS',\n  // CREATE_DEAL_FAILURE: 'CREATE_DEAL_FAILURE',\n  // GET_DEAL_REQUEST: 'GET_DEAL_REQUEST',\n  // GET_DEAL_SUCCESS: 'GET_DEAL_SUCCESS',\n  // GET_DEAL_FAILURE: 'GET_DEAL_FAILURE',\n  // CANCEL_DEAL_REQUEST: 'CANCEL_DEAL_REQUEST',\n  // CANCEL_DEAL_SUCCESS: 'CANCEL_DEAL_SUCCESS',\n  // CANCEL_DEAL_FAILURE: 'CANCEL_DEAL_FAILURE',\n  // CANCEL_BOOKING_REQUEST: 'CANCEL_BOOKING_REQUEST',\n  // CANCEL_BOOKING_SUCCESS: 'CANCEL_BOOKING_SUCCESS',\n  // CANCEL_BOOKING_FAILURE: 'CANCEL_BOOKING_FAILURE',\n  // DONE_BOOKING_REQUEST: 'DONE_BOOKING_REQUEST',\n  // DONE_BOOKING_SUCCESS: 'DONE_BOOKING_SUCCESS',\n  // DONE_BOOKING_FAILURE: 'DONE_BOOKING_FAILURE',\n};\nconst mutations = {\n  CLEAR_USER_DATA(state) {\n    state.user.data = null;\n    state.user.isLoading = false;\n    state.user.success = false;\n  },\n  GET_USER_REQUEST(state) {\n    state.user.isLoading = true;\n  },\n  GET_USER_SUCCESS(state, user) {\n    state.user.data = user;\n    state.user.isLoading = false;\n    state.user.success = true;\n  },\n  GET_USER_FAILURE(state, error) {\n    state.user.isLoading = false;\n    state.user.success = false;\n    state.user.error = error;\n  },\n  GET_DRIVERS_REQUEST(state) {\n    state.drivers.isLoading = true;\n  },\n  GET_DRIVERS_SUCCESS(state, drivers) {\n    state.drivers.data = drivers;\n    state.drivers.isLoading = false;\n    state.drivers.success = true;\n  },\n  GET_DRIVERS_FAILURE(state, error) {\n    state.drivers.isLoading = false;\n    state.drivers.success = false;\n    state.drivers.error = error;\n  },\n  GET_DEVICES_REQUEST(state) {\n    state.devices.isLoading = true;\n  },\n  GET_DEVICES_SUCCESS(state, devices) {\n    state.devices.data = devices;\n    state.devices.data.sort((a, b) => b - a);\n    state.devices.isLoading = false;\n    state.devices.success = true;\n  },\n  GET_DEVICES_FAILURE(state, error) {\n    state.devices.isLoading = false;\n    state.devices.success = false;\n    state.devices.error = error;\n  },\n\n  GET_DRIVERSINDEVICE_REQUEST(state) {\n    state.driversInDevice.isLoading = true;\n  },\n  GET_DRIVERSINDEVICE_SUCCESS(state, driversInDevice) {\n    state.driversInDevice.data = driversInDevice;\n    // state.devices.data.sort((a, b) => b - a);\n    state.devices.isLoading = false;\n    state.devices.success = true;\n  },\n  GET_DRIVERSINDEVICE_FAILURE(state, error) {\n    state.driversInDevice.isLoading = false;\n    state.driversInDevice.success = false;\n    state.driversInDevice.error = error;\n  },\n\n  CREATE_DEVICE_REQUEST(state) {\n    state.devices.isLoading = true;\n  },\n  CREATE_DEVICE_SUCCESS(state, device) {\n    console.log(state.devices);\n    state.devices.data.results.push(device);\n    state.devices.data.results.sort((a, b) => b - a);\n    // state.bookings.newlyCreated = booking;\n    state.devices.isLoading = false;\n    state.devices.success = true;\n  },\n  CREATE_DEVICE_FAILURE(state, error) {\n    state.devices.isLoading = false;\n    state.devices.success = false;\n    state.devices.error = error;\n  },\n\n  UPDATE_DEVICE_REQUEST(state) {\n    state.devices.isLoading = true;\n  },\n  UPDATE_DEVICE_SUCCESS(state, device) {\n    state.devices.data.results = state.devices.data.results.filter(\n      (item) => device.deviceId !== item.deviceId,\n    );\n    state.devices.data.results.push(device);\n    state.devices.success = true;\n    state.devices.isLoading = false;\n  },\n  UPDATE_DEVICE_FAILURE(state, error) {\n    state.devices.error = error;\n    state.devices.success = false;\n    state.devices.isLoading = false;\n  },\n\n  GET_TRACKINGS_REQUEST(state) {\n    state.trackings.isLoading = true;\n  },\n  GET_TRACKINGS_SUCCESS(state, trackings) {\n    state.trackings.data = trackings;\n    state.trackings.isLoading = false;\n    state.trackings.success = true;\n  },\n  GET_TRACKINGS_FAILURE(state, error) {\n    state.trackings.isLoading = false;\n    state.trackings.success = false;\n    state.trackings.error = error;\n  },\n  CREATE_FIRMWARE_REQUEST(state) {\n    state.firmwares.isLoading = true;\n  },\n  CREATE_FIRMWARE_SUCCESS(state, firmware) {\n    console.log(state.firmwares);\n    state.firmwares.data.results.push(firmware);\n    state.firmwares.data.results = [...state.firmwares.data.results];\n    state.firmwares.data.results.sort((a, b) => b - a);\n    state.firmwares.newlyCreated = firmware;\n    state.firmwares.isLoading = false;\n    state.firmwares.success = true;\n  },\n  CREATE_FIRMWARE_FAILURE(state, error) {\n    state.firmwares.isLoading = false;\n    state.firmwares.success = false;\n    state.firmwares.error = error;\n  },\n  UPDATE_FIRMWARE_REQUEST(state) {\n    state.firmwares.isLoading = true;\n  },\n  UPDATE_FIRMWARE_SUCCESS(state, firmware) {\n    console.log(state.firmwares);\n    state.firmwares.data.results = state.firmwares.data.results\n      .filter(\n        (item) => item.active,\n      )\n      .filter(\n        (item) => firmware.firmwareId !== item.firmwareId,\n      );\n    // state.firmwares.data.results.push(firmware);\n    state.firmwares.data.results.push(firmware);\n    state.firmwares.data.results = [...state.firmwares.data.results];\n    state.firmwares.data.results.sort((a, b) => b - a);\n    state.firmwares.newlyCreated = firmware;\n    state.firmwares.isLoading = false;\n    state.firmwares.success = true;\n  },\n  UPDATE_FIRMWARE_FAILURE(state, error) {\n    state.firmwares.isLoading = false;\n    state.firmwares.success = false;\n    state.firmwares.error = error;\n  },\n  GET_FIRMWARES_REQUEST(state) {\n    state.firmwares.isLoading = false;\n  },\n  GET_FIRMWARES_SUCCESS(state, firmwares) {\n    state.firmwares.data = firmwares;\n    state.firmwares.isLoading = false;\n    state.firmwares.success = true;\n  },\n  GET_FIRMWARES_FAILURE(state, error) {\n    state.firmwares.isLoading = false;\n    state.firmwares.success = false;\n    state.firmwares.error = error;\n  },\n  // CREATE_DEAL_REQUEST(state) {\n  //   state.deals.isLoading = false;\n  // },\n  // CREATE_DEAL_SUCCESS(state, deal) {\n  //   state.deals.data.push(deal);\n  //   state.deals.newlyCreated = deal;\n  //   state.deals.success = true;\n  //   state.deals.isLoading = false;\n  // },\n  // CREATE_DEAL_FAILURE(state, error) {\n  //   state.deals.success = false;\n  //   state.deals.error = error;\n  // },\n  // GET_DEAL_REQUEST(state) {\n  //   state.deals.isLoading = false;\n  // },\n  // GET_DEAL_SUCCESS(state, deal) {\n  //   state.deals.data.push(deal);\n  //   state.deals.newlyCreated = deal;\n  //   state.deals.success = true;\n  //   state.deals.isLoading = false;\n  // },\n  // GET_DEAL_FAILURE(state, error) {\n  //   state.deals.success = false;\n  //   state.deals.error = error;\n  // },\n  // CANCEL_DEAL_REQUEST(state) {\n  //   state.deals.isLoading = true;\n  // },\n  // CANCEL_DEAL_SUCCESS(state, dealId) {\n  //   state.deals.isLoading = false;\n  //   state.deals.success = true;\n  //   const res = state.deals.data.filter((deal) => deal.dealId === dealId);\n  //   res[0].status = 'CANCEL';\n  // },\n  // CANCEL_DEAL_FAILURE(state, error) {\n  //   state.deals.isLoading = false;\n  //   state.deals.error = error;\n  // },\n  // CANCEL_BOOKING_REQUEST(state) {\n  //   state.bookings.isLoading = true;\n  // },\n  // CANCEL_BOOKING_SUCCESS(state, bookingId) {\n  //   state.bookings.isLoading = false;\n  //   state.bookings.success = true;\n  //   const res = state.bookings.data.filter((book) => book.bookingId === bookingId);\n  //   res[0].status = 'CANCEL';\n  // },\n  // CANCEL_BOOKING_FAILURE(state, error) {\n  //   state.bookings.isLoading = false;\n  //   state.bookings.error = error;\n  // },\n  // DONE_BOOKING_REQUEST(state) {\n  //   state.bookings.isLoading = true;\n  // },\n  // DONE_BOOKING_SUCCESS(state, bookingId) {\n  //   state.bookings.isLoading = false;\n  //   state.bookings.success = true;\n  //   const res = state.bookings.data.filter((book) => book.bookingId === bookingId);\n  //   res[0].status = 'DONE';\n  // },\n  // DONE_BOOKING_FAILURE(state, error) {\n  //   state.bookings.isLoading = false;\n  //   state.bookings.error = error;\n  // },\n  UPDATE_USER_REQUEST(state) {\n    state.drivers.isLoading = true;\n  },\n  UPDATE_USER_SUCCESS(state, driver) {\n    state.drivers.data.results = state.drivers.data.results.filter(\n      (item) => driver.userId !== item.userId,\n    );\n    state.drivers.data.results.push(driver);\n    state.drivers.data.results((a, b) => a.createdAt - b.createdAt);\n    state.drivers.success = true;\n    state.drivers.isLoading = false;\n  },\n  UPDATE_USER_FAILURE(state, error) {\n    state.drivers.error = error;\n    state.drivers.success = false;\n    state.drivers.isLoading = false;\n  },\n};\n\nconst actions = {\n  async login({ commit }, params) {\n    // params {username, password}\n    commit(mutationTypes.GET_USER_REQUEST);\n    let res = null;\n    try {\n      res = await window.axios.post('/api/auth/login', params);\n      if (res.status === 201) {\n        commit(mutationTypes.GET_USER_SUCCESS, res.data.data);\n      } else {\n        commit(mutationTypes.GET_USER_FAILURE);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_USER_FAILURE, error);\n    }\n  },\n  async clearUserData({ commit }) {\n    commit(mutationTypes.CLEAR_USER_DATA);\n  },\n  async getUser({ commit }) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.GET_USER_REQUEST);\n        const res = 1;\n        // const res = await window.axios.get(`/api/v1/users/${userId}`);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_USER_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.GET_USER_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_USER_FAILURE, error);\n      }\n    } else {\n      throw new Error('userId, role or user.data null');\n    }\n  },\n  async updateUser({ commit }, newUser) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.UPDATE_USER_REQUEST);\n        const res = await window.axios.put(`/api/v1/users/${userId}`, newUser);\n        if (res.status === 200) {\n          commit(mutationTypes.UPDATE_USER_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.UPDATE_USER_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.UPDATE_USER_FAILURE, error);\n      }\n    } else {\n      throw new Error('userId or user.data null');\n    }\n  },\n\n  async getDrivers({ commit }) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.GET_DRIVERS_REQUEST);\n        const res = await window.axios.get('/api/v1/users/user');\n        console.log(`res :${res.data}`);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_DRIVERS_SUCCESS, res.data);\n        } else {\n          commit(mutationTypes.GET_DRIVERS_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_DRIVERS_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get drivers');\n    }\n  },\n\n  async getDevices({ commit }) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.GET_DEVICES_REQUEST);\n        const res = await window.axios.get('/api/v1/devices');\n        console.log(`res :${res.data}`);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_DEVICES_SUCCESS, res.data);\n        } else {\n          commit(mutationTypes.GET_DEVICES_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_DEVICES_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get drivers');\n    }\n  },\n\n  async getDriversInDevice({ commit }, deviceId) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.GET_DRIVERSINDEVICE_REQUEST);\n        const res = await window.axios.get(`/api/v1/user-devices/users/${deviceId}`);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_DRIVERSINDEVICE_SUCCESS, res.data);\n        } else {\n          commit(mutationTypes.GET_DRIVERSINDEVICE_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_DRIVERSINDEVICE_FAILURE, error);\n      }\n    } else {\n      throw new Error('userId, role or user.data null');\n    }\n  },\n\n  async createDevice({ commit }, device) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.CREATE_DEVICE_REQUEST);\n        const res = await window.axios.post('/api/v1/devices', device);\n        if (res.status === 201) {\n          commit(mutationTypes.CREATE_DEVICE_SUCCESS, res.data.data);\n        }\n      } catch (error) {\n        commit(mutationTypes.CREATE_DEVICE_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get a new booking');\n    }\n  },\n\n  async updateDevice({ commit }, newDevice) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.UPDATE_DEVICE_REQUEST);\n        const res = await window.axios.put(`/api/v1/devices/${newDevice.deviceId}`, newDevice.data);\n        if (res.status === 200) {\n          commit(mutationTypes.UPDATE_DEVICE_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.UPDATE_DEVICE_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.UPDATE_DEVICE_FAILURE, error);\n      }\n    } else {\n      throw new Error('deviceId or device is null');\n    }\n  },\n\n  async getTrackings({ commit }) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.GET_TRACKINGS_REQUEST);\n        const res = await window.axios.get('/api/v1/data-trackings-infos');\n        if (res.status === 200) {\n          commit(mutationTypes.GET_TRACKINGS_SUCCESS, res.data);\n        } else {\n          commit(mutationTypes.GET_TRACKINGS_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_TRACKINGS_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get drivers');\n    }\n  },\n  async getFirmwares({ commit }) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.GET_FIRMWARES_REQUEST);\n        const res = await window.axios.get('/api/v1/firmwares');\n        if (res.status === 200) {\n          commit(mutationTypes.GET_FIRMWARES_SUCCESS, res.data);\n        } else {\n          commit(mutationTypes.GET_FIRMWARES_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_FIRMWARES_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get firmwares');\n    }\n  },\n\n  // async getOneBooking({ commit, state }, bookingId) {\n  //   const userId = window.$cookies.get('userId');\n  //   const role = window.$cookies.get('role');\n  //   if (userId && role && state.user.data) {\n  //     try {\n  //       const currentIds = state.bookings.data.map((booking) => booking.bookingId);\n  //       if (!currentIds.includes(bookingId)) {\n  //         commit(mutationTypes.GET_BOOKING_REQUEST);\n  //         const res = await window.axios.get(`/api/v1/bookings/${bookingId}`);\n  //         if (res.status === 200) {\n  //           res.data.data.new = true;\n  //           commit(mutationTypes.GET_BOOKING_SUCCESS, res.data.data);\n  //         } else {\n  //           commit(mutationTypes.GET_BOOKING_FAILURE);\n  //         }\n  //       } else {\n  //         console.log('this booking is already in store');\n  //       }\n  //     } catch (error) {\n  //       commit(mutationTypes.GET_BOOKING_FAILURE, error);\n  //     }\n  //   } else {\n  //     throw new Error('You have to login before get a new booking');\n  //   }\n  // },\n  async createFirmware({ commit }, firmware) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.CREATE_FIRMWARE_REQUEST);\n        const res = await window.axios.post('/api/v1/firmwares', firmware);\n        if (res.status === 201) {\n          commit(mutationTypes.CREATE_FIRMWARE_SUCCESS, res.data.data);\n        }\n      } catch (error) {\n        commit(mutationTypes.CREATE_FIRMWARE_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before create a new firmware');\n    }\n  },\n\n  async updateFirmware({ commit }, id) {\n    const userId = window.$cookies.get('userId');\n    if (userId) {\n      try {\n        commit(mutationTypes.UPDATE_FIRMWARE_REQUEST);\n        const res = await window.axios.put(`/api/v1/firmwares/${id}`);\n        if (res.status === 200) {\n          commit(mutationTypes.UPDATE_FIRMWARE_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.UPDATE_FIRMWARE_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.UPDATE_FIRMWARE_FAILURE, error);\n      }\n    } else {\n      throw new Error('userId or user.data null');\n    }\n  },\n  // async getDeals({ commit, state }) {\n  //   const userId = window.$cookies.get('userId');\n  //   const role = window.$cookies.get('role');\n  //   if (userId && role && state.user.data) {\n  //     try {\n  //       commit(mutationTypes.GET_DEALS_REQUEST);\n  //       const res = await window.axios.get(`/api/v1/${role}/${userId}/deals`);\n  //       if (res.status === 200) {\n  //         commit(mutationTypes.GET_DEALS_SUCCESS, res.data.data);\n  //       } else {\n  //         commit(mutationTypes.GET_DEALS_FAILURE);\n  //       }\n  //     } catch (error) {\n  //       commit(mutationTypes.GET_DEALS_FAILURE, error);\n  //     }\n  //   } else {\n  //     throw new Error('You have to login before get deals');\n  //   }\n  // },\n  // async createDeal({ commit, state }, deal) {\n  //   const userId = window.$cookies.get('userId');\n  //   const role = window.$cookies.get('role');\n  //   if (userId && role && state.user.data) {\n  //     try {\n  //       commit(mutationTypes.CREATE_DEAL_REQUEST);\n  //       const res = await window.axios.post('/api/v1/deals', deal);\n  //       if (res.status === 201) {\n  //         commit(mutationTypes.CREATE_DEAL_SUCCESS, res.data.data);\n  //       } else {\n  //         commit(mutationTypes.CREATE_DEAL_FAILURE);\n  //       }\n  //     } catch (error) {\n  //       commit(mutationTypes.CREATE_DEAL_FAILURE, error);\n  //     }\n  //   } else {\n  //     throw new Error('You have to login before get deals');\n  //   }\n  // },\n  // async getDeal({ commit, state }, dealIds) {\n  //   const userId = window.$cookies.get('userId');\n  //   const role = window.$cookies.get('role');\n  //   const currentIds = state.deals.data.map((deal) => deal.dealId);\n  //   const newIds = dealIds.filter((newId) => !currentIds.includes(newId));\n  //   if (newIds.lenght > 0) {\n  //     if (userId && role && state.user.data) {\n  //       try {\n  //         commit(mutationTypes.GET_DEAL_REQUEST);\n  //         const res = await window.axios.get(`/api/v1/deals/${newIds[0]}`);\n  //         if (res.status === 200) {\n  //           commit(mutationTypes.GET_DEAL_SUCCESS, res.data.data);\n  //         } else {\n  //           commit(mutationTypes.GET_DEAL_FAILURE);\n  //         }\n  //       } catch (error) {\n  //         commit(mutationTypes.GET_DEAL_FAILURE, error);\n  //       }\n  //     } else {\n  //       throw new Error('You have to login before get deals');\n  //     }\n  //   } else {\n  //     console.log('not a new deal');\n  //   }\n  // },\n  // async cancelDeal({ commit, state }, dealId) {\n  //   const userId = window.$cookies.get('userId');\n  //   const role = window.$cookies.get('role');\n  //   if (userId && role && state.user.data) {\n  //     try {\n  //       const deal = state.deals.data.filter((item) => item.dealId === dealId)[0];\n  //       if (deal) {\n  //         commit(mutationTypes.CANCEL_DEAL_REQUEST);\n  //         const res = await window.axios.put('/api/v1/deals', {\n  //           dealId,\n  //           renterId: deal.renter.renterId,\n  //           vendorId: deal.vendor.vendorId,\n  //           typeId: deal.type.typeId,\n  //           status: 'CANCELED',\n  //           offeredPrice: deal.offeredPrice,\n  //         });\n  //         if (res.status === 200) {\n  //           commit(mutationTypes.CANCEL_DEAL_SUCCESS, res.data.data);\n  //         }\n  //       } else {\n  //         console.log('deal is null');\n  //       }\n  //     } catch (error) {\n  //       commit(mutationTypes.CANCEL_DEAL_FAILURE, error);\n  //     }\n  //   } else {\n  //     throw new Error('you are not loged in');\n  //   }\n  // },\n  // async cancelBooking({ commit, state }, bookingId) {\n  //   const userId = window.$cookies.get('userId');\n  //   const role = window.$cookies.get('role');\n  //   if (userId && role && state.user.data) {\n  //     try {\n  //       const booking = state.bookings.data.filter((item) => item.bookingId === bookingId)[0];\n  //       if (booking) {\n  //         commit(mutationTypes.CANCEL_BOOKING_REQUEST);\n  //         const res = await window.axios.put(`/api/v1/bookings/${bookingId}`, {\n  //           bookingId,\n  //           dealId: booking.deal.dealId,\n  //           typeId: booking.type.typeId,\n  //           renterId: booking.renter.renterId,\n  //           vendorId: booking.vendor.vendorId,\n  //           status: 'CANCELLED',\n  //           meetTime: booking.meetTime,\n  //           qrCode: booking.qrCode,\n  //         });\n  //         if (res.status === 200) {\n  //           commit(mutationTypes.CANCEL_BOOKING_SUCCESS, res.data.data);\n  //         }\n  //       } else {\n  //         console.log(`booking ${bookingId} is not existed in store`);\n  //       }\n  //     } catch (error) {\n  //       commit(mutationTypes.CREATE_BOOKING_FAILURE, error);\n  //     }\n  //   } else {\n  //     throw new Error('you are not loged in');\n  //   }\n  // },\n  // async updateBookingStatus({ commit, state }, bookingId) {\n  //   const userId = window.$cookies.get('userId');\n  //   const role = window.$cookies.get('role');\n  //   if (userId && role && state.user.data) {\n  //     try {\n  //       const booking = state.bookings.data.filter((item) => item.bookingId === bookingId)[0];\n  //       if (booking) {\n  //         commit(mutationTypes.DONE_BOOKING_REQUEST);\n  //         const res = await window.axios.put(`/api/v1/bookings/${bookingId}`, {\n  //           bookingId,\n  //           dealId: booking.deal ? booking.deal.dealId : null,\n  //           typeId: booking.type.typeId,\n  //           renterId: booking.renter.renterId,\n  //           vendorId: booking.vendor.vendorId,\n  //           status: 'DONE',\n  //           meetTime: booking.meetTime,\n  //           qrCode: booking.qrCode,\n  //         });\n  //         if (res.status === 200) {\n  //           commit(mutationTypes.DONE_BOOKING_SUCCESS, bookingId);\n  //         }\n  //       } else {\n  //         console.log(`booking ${bookingId} is not existed in store`);\n  //       }\n  //     } catch (error) {\n  //       commit(mutationTypes.DONE_BOOKING_FAILURE, error);\n  //     }\n  //   } else {\n  //     throw new Error('you are not loged in');\n  //   }\n  // },\n};\n\nexport default {\n  namespaced: true,\n  state: myState,\n  mutations,\n  getters: myGetters,\n  actions,\n};\n"]}]}