{"remainingRequest":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js!D:\\capstone\\DrowsinessFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\capstone\\DrowsinessFrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\capstone\\DrowsinessFrontEnd\\src\\components\\core_layout\\LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\capstone\\DrowsinessFrontEnd\\src\\components\\core_layout\\LineChart.vue","mtime":1626500915103},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZ1ZUFwZXhDaGFydHMgZnJvbSAndnVlLWFwZXhjaGFydHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xpbmVDaGFydCcsCiAgY29tcG9uZW50czogewogICAgYXBleGNoYXJ0OiBWdWVBcGV4Q2hhcnRzCiAgfSwKICBwcm9wczogewogICAgaW5wdXREYXRhMjogQXJyYXkKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgICBjaGFydDogewogICAgICAgICAgaWQ6ICd5dCcsCiAgICAgICAgICBncm91cDogJ3NvY2lhbCcsCiAgICAgICAgICB0eXBlOiAnYXJlYScsCiAgICAgICAgICBoZWlnaHQ6IDE2MAogICAgICAgIH0sCiAgICAgICAgeGF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdkYXRldGltZScsCiAgICAgICAgICAvLyAgIGNhdGVnb3JpZXM6IFsnMDEvMDEvMjAwMycsICcwMi8wMS8yMDAzJywgJzAzLzAxLzIwMDMnLCAnMDQvMDEvMjAwMycsICcwNS8wMS8yMDAzJywgJzA2LzAxLzIwMDMnLCAnMDcvMDEvMjAwMycsICcwOC8wMS8yMDAzJ10sCiAgICAgICAgICBtaW46IHRoaXMuZ2V0Rmlyc3RWYWx1ZQogICAgICAgIH0KICAgICAgfSwKICAgICAgc2VyaWVzOiBbewogICAgICAgIG5hbWU6ICdTb3V0aCcsCiAgICAgICAgZGF0YTogdGhpcy5nZW5lcmF0ZURheVdpc2VUaW1lU2VyaWVzKG5ldyBEYXRlKCcxMSBGZWIgMjAxNycpLmdldFRpbWUoKSwgMjAsIHsKICAgICAgICAgIG1pbjogMTAsCiAgICAgICAgICBtYXg6IDYwCiAgICAgICAgfSkKICAgICAgfSAvLyB7CiAgICAgIC8vICAgbmFtZTogJ05vcnRoJywKICAgICAgLy8gICBkYXRhOiB0aGlzLmdlbmVyYXRlRGF5V2lzZVRpbWVTZXJpZXMobmV3IERhdGUoJzExIEZlYiAyMDE3JykuZ2V0VGltZSgpLCAyMCwgewogICAgICAvLyAgICAgbWluOiAxMCwKICAgICAgLy8gICAgIG1heDogMjAsCiAgICAgIC8vICAgfSksCiAgICAgIC8vIH0sCiAgICAgIC8vIHsKICAgICAgLy8gICBuYW1lOiAnQ2VudHJhbCcsCiAgICAgIC8vICAgZGF0YTogdGhpcy5nZW5lcmF0ZURheVdpc2VUaW1lU2VyaWVzKG5ldyBEYXRlKCcxMSBGZWIgMjAxNycpLmdldFRpbWUoKSwgMjAsIHsKICAgICAgLy8gICAgIG1pbjogMTAsCiAgICAgIC8vICAgICBtYXg6IDE1LAogICAgICAvLyAgIH0pLAogICAgICAvLyB9LAogICAgICBdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UmVzdWx0OiBmdW5jdGlvbiBnZXRSZXN1bHQodHJhY2tpbmdzKSB7CiAgICAgIHZhciByZXN1bHRzID0gW107CiAgICAgIHZhciB2YWx1ZSA9IHsKICAgICAgICBkYXRhOiB0cmFja2luZ3MsCiAgICAgICAgbmFtZTogJ1RyYWNraW5ncycKICAgICAgfTsKICAgICAgcmVzdWx0cy5wdXNoKHZhbHVlKTsKICAgICAgcmV0dXJuIHJlc3VsdHM7CiAgICB9LAogICAgZ3JvdXBCeTogZnVuY3Rpb24gZ3JvdXBCeShsaXN0LCBrZXlHZXR0ZXIpIHsKICAgICAgdmFyIG1hcCA9IG5ldyBNYXAoKTsKICAgICAgbGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgdmFyIGtleSA9IGtleUdldHRlcihpdGVtKTsKICAgICAgICB2YXIgY29sbGVjdGlvbiA9IG1hcC5nZXQoa2V5KTsKCiAgICAgICAgaWYgKCFjb2xsZWN0aW9uKSB7CiAgICAgICAgICBtYXAuc2V0KGtleSwgW2l0ZW1dKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29sbGVjdGlvbi5wdXNoKGl0ZW0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBtYXA7CiAgICB9LAogICAgZ2VuZXJhdGVEYXlXaXNlVGltZVNlcmllczogZnVuY3Rpb24gZ2VuZXJhdGVEYXlXaXNlVGltZVNlcmllcyhiYXNldmFsLCBjb3VudCwgeXJhbmdlKSB7CiAgICAgIHZhciBpID0gMDsKICAgICAgdmFyIHNlcmllcyA9IFtdOwoKICAgICAgd2hpbGUgKGkgPCBjb3VudCkgewogICAgICAgIHZhciB4ID0gYmFzZXZhbDsKICAgICAgICB2YXIgeSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICh5cmFuZ2UubWF4IC0geXJhbmdlLm1pbiArIDEpKSArIHlyYW5nZS5taW47CiAgICAgICAgc2VyaWVzLnB1c2goW3gsIHldKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduCgogICAgICAgIGJhc2V2YWwgKz0gODY0MDAwMDA7CiAgICAgICAgaSArPSAxOwogICAgICB9CgogICAgICByZXR1cm4gc2VyaWVzOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGdldDMwRGF5c0FnbzogZnVuY3Rpb24gZ2V0MzBEYXlzQWdvKCkgewogICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7CiAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSAtIDMwKTsKICAgICAgcmV0dXJuIGRhdGUuZ2V0VGltZSgpOwogICAgfSwKICAgIGdldDMwRGF5c0VuZDogZnVuY3Rpb24gZ2V0MzBEYXlzRW5kKCkgewogICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7CiAgICAgIHJldHVybiBkYXRlLmdldFRpbWUoKTsKICAgIH0sCiAgICBnZXQzMERheXNGcm9tOiBmdW5jdGlvbiBnZXQzMERheXNGcm9tKCkgewogICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7CiAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSAtIDMwKTsKICAgICAgcmV0dXJuIGRhdGUuZ2V0VGltZSgpOwogICAgfSwKICAgIGdldERhdGFFYWNoTW9udGg6IGZ1bmN0aW9uIGdldERhdGFFYWNoTW9udGgoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gdGhpcy5pbnB1dERhdGEyLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLnRyYWNraW5nQXQgPj0gX3RoaXMuZ2V0MzBEYXlzRnJvbSAmJiBpdGVtLnRyYWNraW5nQXQgPD0gX3RoaXMuZ2V0MzBEYXlzRW5kOwogICAgICB9KS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdHJhY2tpbmdBdDogbmV3IERhdGUoaXRlbS50cmFja2luZ0F0KS50b0xvY2FsZURhdGVTdHJpbmcoKQogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICAgIGdldFJlc3VsdERhdGE6IGZ1bmN0aW9uIGdldFJlc3VsdERhdGEoKSB7CiAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuZ3JvdXBCeSh0aGlzLmdldERhdGFFYWNoTW9udGgsIGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0udHJhY2tpbmdBdDsKICAgICAgfSkpLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICByZXR1cm4gbmV3IERhdGUoYVswXSkuZ2V0VGltZSgpIC0gbmV3IERhdGUoYlswXSkuZ2V0VGltZSgpOwogICAgICB9KSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgYXJyYXktY2FsbGJhY2stcmV0dXJuCiAgICAgIC5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICB2YXIgYXJyID0gW107CiAgICAgICAgYXJyLnB1c2gobmV3IERhdGUoaXRlbVswXSkuZ2V0VGltZSgpKTsKICAgICAgICBhcnIucHVzaChpdGVtWzFdLmxlbmd0aCk7CiAgICAgICAgcmV0dXJuIGFycjsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0UmVzdWx0RGF0YTI6IGZ1bmN0aW9uIGdldFJlc3VsdERhdGEyKCkgewogICAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmdyb3VwQnkodGhpcy5nZXREYXRhRWFjaE1vbnRoLCBmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLnRyYWNraW5nQXQ7CiAgICAgIH0pKS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGFbMF0pLmdldFRpbWUoKSAtIG5ldyBEYXRlKGJbMF0pLmdldFRpbWUoKTsKICAgICAgfSkubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW1bMF07CiAgICAgIH0pOwogICAgfSwKICAgIGdldEZpcnN0VmFsdWU6IGZ1bmN0aW9uIGdldEZpcnN0VmFsdWUoKSB7CiAgICAgIHJldHVybiBuZXcgRGF0ZSh0aGlzLmdldFJlc3VsdERhdGEyWzBdKS5nZXRUaW1lKCkgLSAyNCAqIDYwICogNjAgKiAxMDAwOwogICAgfSwKICAgIGdldFJlc3VsdFZhbHVlOiBmdW5jdGlvbiBnZXRSZXN1bHRWYWx1ZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0UmVzdWx0KHRoaXMuZ2V0UmVzdWx0RGF0YSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- <div id=\"chart-area\">\n    <apexchart\n      type=\"area\"\n      height=\"160\"\n      :options=\"chartOptionsArea\"\n      :series=\"seriesArea\"\n    ></apexchart>\n  </div> -->\n  <div id=\"chart-area\">\n    <apexchart\n      width=\"800\"\n      height=\"330\"\n      type=\"area\"\n      :options=\"chartOptions\"\n      :series=\"getResultValue\"\n    ></apexchart>\n    <div style=\"font-size: 20px; fontweight: bold; color: #777cf5\" class=\"d-flex justify-center\">\n      Drowsiness Trackings In 30 Days Ago\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueApexCharts from 'vue-apexcharts';\n\nexport default {\n  name: 'LineChart',\n  components: {\n    apexchart: VueApexCharts,\n  },\n  props: {\n    inputData2: Array,\n  },\n  data() {\n    return {\n      chartOptions: {\n        chart: {\n          id: 'yt',\n          group: 'social',\n          type: 'area',\n          height: 160,\n        },\n        xaxis: {\n          type: 'datetime',\n          //   categories: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003', '08/01/2003'],\n          min: this.getFirstValue,\n        },\n      },\n      series: [\n        {\n          name: 'South',\n          data: this.generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n            min: 10,\n            max: 60,\n          }),\n        },\n        // {\n        //   name: 'North',\n        //   data: this.generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n        //     min: 10,\n        //     max: 20,\n        //   }),\n        // },\n\n        // {\n        //   name: 'Central',\n        //   data: this.generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n        //     min: 10,\n        //     max: 15,\n        //   }),\n        // },\n      ],\n    };\n  },\n  methods: {\n    getResult(trackings) {\n      const results = [];\n      const value = {\n        data: trackings,\n        name: 'Trackings',\n      };\n      results.push(value);\n      return results;\n    },\n    groupBy(list, keyGetter) {\n      const map = new Map();\n      list.forEach((item) => {\n        const key = keyGetter(item);\n        const collection = map.get(key);\n        if (!collection) {\n          map.set(key, [item]);\n        } else {\n          collection.push(item);\n        }\n      });\n      return map;\n    },\n    generateDayWiseTimeSeries(baseval, count, yrange) {\n      let i = 0;\n      const series = [];\n      while (i < count) {\n        const x = baseval;\n        const y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n        series.push([x, y]);\n        // eslint-disable-next-line no-param-reassign\n        baseval += 86400000;\n        i += 1;\n      }\n      return series;\n    },\n  },\n  computed: {\n    get30DaysAgo() {\n      const date = new Date();\n      date.setDate(date.getDate() - 30);\n      return date.getTime();\n    },\n    get30DaysEnd() {\n      const date = new Date();\n      return date.getTime();\n    },\n    get30DaysFrom() {\n      const date = new Date();\n      date.setDate(date.getDate() - 30);\n      return date.getTime();\n    },\n    getDataEachMonth() {\n      return this.inputData2\n        .filter(\n          (item) => item.trackingAt >= this.get30DaysFrom && item.trackingAt <= this.get30DaysEnd,\n        )\n        .map((item) => ({\n          trackingAt: new Date(item.trackingAt).toLocaleDateString(),\n        }));\n    },\n    getResultData() {\n      return (\n        Array.from(this.groupBy(this.getDataEachMonth, (item) => item.trackingAt))\n          .sort((a, b) => new Date(a[0]).getTime() - new Date(b[0]).getTime())\n          // eslint-disable-next-line array-callback-return\n          .map((item) => {\n            const arr = [];\n            arr.push(new Date(item[0]).getTime());\n            arr.push(item[1].length);\n            return arr;\n          })\n      );\n    },\n    getResultData2() {\n      return Array.from(this.groupBy(this.getDataEachMonth, (item) => item.trackingAt))\n        .sort((a, b) => new Date(a[0]).getTime() - new Date(b[0]).getTime())\n        .map((item) => item[0]);\n    },\n    getFirstValue() {\n      return new Date(this.getResultData2[0]).getTime() - 24 * 60 * 60 * 1000;\n    },\n    getResultValue() {\n      return this.getResult(this.getResultData);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components/core_layout"}]}