{"remainingRequest":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js!D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\capstone\\DrowsinessFrontEnd\\src\\store\\modules\\rentor\\hosteltype.js","dependencies":[{"path":"D:\\capstone\\DrowsinessFrontEnd\\src\\store\\modules\\rentor\\hosteltype.js","mtime":1610926189613},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/capstone/DrowsinessFrontEnd/src/store/modules/rentor/hosteltype.js"],"names":["myState","hostelType","data","isLoading","success","error","hostelGroup","schedules","suggestedTypes","types","groups","totalType","Number","totalGroup","page","feedback","getters","getHostelGroupById","state","id","result","find","group","groupId","mutationTypes","GET_HOSTEL_TYPE_REQUEST","GET_HOSTEL_TYPE_SUCCESS","GET_HOSTEL_TYPE_FAILURE","GET_HOSTEL_GROUP_REQUEST","GET_HOSTEL_GROUP_SUCCESS","GET_HOSTEL_GROUP_FAILURE","GET_SCHEDULES_REQUEST","GET_SCHEDULES_SUCCESS","GET_SCHEDULES_FAILURE","GET_SUGGESTED_TYPE_REQUEST","GET_SUGGESTED_TYPE_SUCCESS","GET_SUGGESTED_TYPE_FAILURE","GET_FEEDBACK_REQUEST","GET_FEEDBACK_SUCCESS","GET_FEEDBACK_FAILURE","SET_FEEDBACKS_VALUES","mutations","list","actions","getTypeAndGroup","typeId","commit","window","axios","get","response","status","type","getSchedules","getSuggestedTypes","params","paramStr","universityId","provinceId","size","getFeedbacks","setFeedbacks","namespaced"],"mappings":"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","sourcesContent":["const myState = () => ({\n  hostelType: {\n    data: null,\n    isLoading: false,\n    success: null,\n    error: null,\n  },\n  hostelGroup: {\n    data: null,\n    isLoading: false,\n    success: null,\n    error: null,\n  },\n  schedules: {\n    data: [],\n    isLoading: false,\n    success: null,\n    error: null,\n  },\n  suggestedTypes: {\n    data: {\n      types: null,\n      groups: null,\n      totalType: Number,\n      totalGroup: Number,\n    },\n    page: 1,\n    isLoading: false,\n    success: null,\n    error: null,\n  },\n  feedback: {\n    data: [],\n    isLoading: false,\n    success: null,\n    error: null,\n  },\n});\n\nconst getters = {\n  getHostelGroupById: (state) => (id) => {\n    let result = null;\n    if (state.suggestedTypes.data.groups) {\n      result = state.suggestedTypes.data.groups.find((group) => group.groupId === Number(id));\n    }\n    return result;\n  },\n  // eslint-disable-next-line\n  isLoading: (state) =>\r\n    // eslint-disable-next-line\n    state.hostelGroup.isLoading || state.hostelType.isLoading || state.schedules.isLoading,\r\n};\n\nconst mutationTypes = {\n  GET_HOSTEL_TYPE_REQUEST: 'GET_HOSTEL_TYPE_REQUEST',\n  GET_HOSTEL_TYPE_SUCCESS: 'GET_HOSTEL_TYPE_SUCCESS',\n  GET_HOSTEL_TYPE_FAILURE: 'GET_HOSTEL_TYPE_FAILURE',\n\n  GET_HOSTEL_GROUP_REQUEST: 'GET_HOSTEL_GROUP_REQUEST',\n  GET_HOSTEL_GROUP_SUCCESS: 'GET_HOSTEL_GROUP_SUCCESS',\n  GET_HOSTEL_GROUP_FAILURE: 'GET_HOSTEL_GROUP_FAILURE',\n\n  GET_SCHEDULES_REQUEST: 'GET_SCHEDULES_REQUEST',\n  GET_SCHEDULES_SUCCESS: 'GET_SCHEDULES_SUCCESS',\n  GET_SCHEDULES_FAILURE: 'GET_SCHEDULES_FAILURE',\n\n  GET_SUGGESTED_TYPE_REQUEST: 'GET_SUGGESTED_TYPE_REQUEST',\n  GET_SUGGESTED_TYPE_SUCCESS: 'GET_SUGGESTED_TYPE_SUCCESS',\n  GET_SUGGESTED_TYPE_FAILURE: 'GET_SUGGESTED_TYPE_FAILURE',\n\n  GET_FEEDBACK_REQUEST: 'GET_FEEDBACK_REQUEST',\n  GET_FEEDBACK_SUCCESS: 'GET_FEEDBACK_SUCCESS',\n  GET_FEEDBACK_FAILURE: 'GET_FEEDBACK_FAILURE',\n\n  SET_FEEDBACKS_VALUES: 'SET_FEEDBACKS_VALUES',\n};\n\nconst mutations = {\n  GET_HOSTEL_TYPE_REQUEST(state) {\n    state.hostelType.isLoading = true;\n  },\n  GET_HOSTEL_GROUP_REQUEST(state) {\n    state.hostelGroup.isLoading = true;\n  },\n  GET_HOSTEL_TYPE_SUCCESS(state, hostelType) {\n    state.hostelType.data = hostelType;\n    state.hostelType.isLoading = false;\n    state.hostelType.success = true;\n  },\n  GET_HOSTEL_GROUP_SUCCESS(state, hostelGroup) {\n    state.hostelGroup.data = hostelGroup;\n    state.hostelGroup.isLoading = false;\n    state.hostelGroup.success = true;\n  },\n  GET_HOSTEL_TYPE_FAILURE(state, error) {\n    state.hostelType.isLoading = false;\n    state.hostelType.error = error;\n  },\n  GET_HOSTEL_GROUP_FAILURE(state, error) {\n    state.hostelGroup.isLoading = false;\n    state.hostelGroup.error = error;\n  },\n  GET_SCHEDULES_REQUEST(state) {\n    state.schedules.isLoading = true;\n  },\n  GET_SCHEDULES_SUCCESS(state, schedules) {\n    state.schedules.data = schedules;\n    state.schedules.isLoading = false;\n    state.schedules.success = true;\n  },\n  GET_SCHEDULES_FAILURE(state, error) {\n    state.schedules.isLoading = false;\n    state.schedules.error = error;\n  },\n\n  GET_SUGGESTED_TYPE_REQUEST(state) {\n    state.suggestedTypes.isLoading = true;\n  },\n  GET_SUGGESTED_TYPE_SUCCESS(state, data) {\n    state.suggestedTypes.data = data;\n    state.suggestedTypes.isLoading = false;\n    state.suggestedTypes.success = true;\n    state.suggestedTypes.error = null;\n  },\n  GET_SUGGESTED_TYPE_FAILURE(state, error) {\n    state.suggestedTypes.error = error;\n    state.suggestedTypes.data = null;\n  },\n\n  GET_FEEDBACK_REQUEST(state) {\n    state.feedback.isLoading = true;\n  },\n  GET_FEEDBACK_SUCCESS(state, data) {\n    state.feedback.data = data;\n    state.feedback.isLoading = false;\n    state.feedback.success = true;\n    state.feedback.error = null;\n  },\n  GET_FEEDBACK_FAILURE(state, error) {\n    state.feedback.error = error;\n    state.feedback.data = null;\n  },\n  SET_FEEDBACKS_VALUES: (state, list) => {\n    state.feedback.data = list;\n  },\n};\n\nconst actions = {\n  async getTypeAndGroup({ commit }, typeId) {\n    try {\n      commit(mutationTypes.GET_HOSTEL_TYPE_REQUEST);\n      commit(mutationTypes.GET_HOSTEL_GROUP_REQUEST);\n      const response = await window.axios.get(`/api/v1/types?typeId=${typeId}`);\n      if (response.status >= 200 && response.status <= 299) {\n        commit(mutationTypes.GET_HOSTEL_TYPE_SUCCESS, response.data.data.type);\n        commit(mutationTypes.GET_HOSTEL_GROUP_SUCCESS, response.data.data.group);\n      } else {\n        commit(mutationTypes.GET_HOSTEL_TYPE_FAILURE);\n        commit(mutationTypes.GET_HOSTEL_GROUP_FAILURE);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_HOSTEL_TYPE_FAILURE, error);\n      commit(mutationTypes.GET_HOSTEL_GROUP_FAILURE, error);\n    }\n  },\n  async getSchedules({ commit }, groupId) {\n    try {\n      commit(mutationTypes.GET_SCHEDULES_REQUEST);\n      const response = await window.axios.get(`/api/v1/groups/${groupId}/schedules`);\n      if (response.status >= 200 && response.status <= 299) {\n        commit(mutationTypes.GET_SCHEDULES_SUCCESS, response.data.data);\n      } else {\n        commit(mutationTypes.GET_SCHEDULES_FAILURE);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_SCHEDULES_FAILURE, error);\n    }\n  },\n  async getSuggestedTypes({ commit }, params) {\n    try {\n      commit(mutationTypes.GET_SUGGESTED_TYPE_REQUEST);\n      let paramStr = '';\n      if (params.universityId) {\n        paramStr += `&schoolId=${params.universityId}`;\n      }\n      if (params.provinceId) {\n        paramStr += `&provinceId=${params.provinceId}`;\n      }\n      const response = await window.axios.get(\n        `/api/v1/types?asc=false${paramStr}&size=${params.size}`,\n      );\n      if (response.status >= 200 && response.status <= 299) {\n        commit(mutationTypes.GET_SUGGESTED_TYPE_SUCCESS, response.data.data);\n      } else {\n        commit(mutationTypes.GET_SUGGESTED_TYPE_FAILURE, response.status);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_SCHEDULES_FAILURE, 500);\n    }\n  },\n  async getFeedbacks({ commit }, typeId) {\n    try {\n      commit(mutationTypes.GET_FEEDBACK_REQUEST);\n      const response = await window.axios.get(`/api/v1/types/${typeId}/feedbacks`);\n      if (response.status >= 200 && response.status <= 299) {\n        commit(mutationTypes.GET_FEEDBACK_SUCCESS, response.data.data);\n      } else {\n        commit(mutationTypes.GET_FEEDBACK_FAILURE);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_FEEDBACK_FAILURE, error);\n    }\n  },\n  setFeedbacks({ commit }, list) {\n    commit(mutationTypes.SET_FEEDBACKS_VALUES, list);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state: myState,\n  mutations,\n  getters,\n  actions,\n};\n"]}]}