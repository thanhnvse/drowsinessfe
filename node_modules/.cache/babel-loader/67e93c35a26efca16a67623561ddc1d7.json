{"remainingRequest":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\thread-loader\\dist\\cjs.js!D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js!D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\capstone\\DrowsinessFrontEnd\\src\\components\\mixins\\authentication.js","dependencies":[{"path":"D:\\capstone\\DrowsinessFrontEnd\\src\\components\\mixins\\authentication.js","mtime":1625392100053},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/capstone/DrowsinessFrontEnd/src/components/mixins/authentication.js"],"names":["mapActions","firebase","auth","authenticationMixins","data","loging","computed","userData","$store","state","user","loginSuccess","success","methods","loginRequest","logout","signOut","then","$cookies","remove","clearUserData","$router","push","catch","error","console","log","getTokenIdFromFirebase","jwtToken","setPersistence","authNamespace","Auth","Persistence","LOCAL","signInWithCustomToken","currentUser","getIdToken","idToken","refreshToken","afterLogin","keepCurrentRoute","token","set","role","id","userId","$route","params","nextUrl","message","login","username","password"],"mappings":"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","sourcesContent":["import { mapActions } from 'vuex';\nimport firebase from '../../config/firebase';\n// import pushNotiMixins from './pushNotification';\n\nconst { auth } = firebase;\n\nconst authenticationMixins = {\n  data: () => ({\n    loging: false,\n  }),\n  // mixins: [pushNotiMixins],\n  computed: {\n    userData() {\n      return this.$store.state.user.user.data;\n    },\n    loginSuccess() {\n      return this.$store.state.user.user.success;\n    },\n  },\n  methods: {\n    ...mapActions({\n      loginRequest: 'user/login',\n    }),\n    logout() {\n      auth\n        .signOut()\n        .then(() => {\n          this.$cookies.remove('role');\n          this.$cookies.remove('userId');\n          this.$cookies.remove('jwt');\n          this.$cookies.remove('firebaseIdToken');\n          this.$cookies.remove('messagingToken');\n          this.clearUserData();\n          this.$router.push('/');\n        })\n        .catch((error) => console.log(error));\n    },\n    async getTokenIdFromFirebase(jwtToken) {\n      try {\n        await auth.setPersistence(firebase.authNamespace.Auth.Persistence.LOCAL);\n        await auth.signInWithCustomToken(jwtToken);\n        const { currentUser } = auth;\n        console.log('firebase user data:', currentUser);\n        const idToken = await currentUser.getIdToken(true);\n        console.log(idToken);\n        const { refreshToken } = currentUser;\n        return { idToken, refreshToken };\n      } catch (error) {\n        console.log('firebase login error: ', error);\n      }\n      return null;\n    },\n    async afterLogin(keepCurrentRoute) {\n      if (this.loginSuccess) {\n        const { token } = this.userData;\n        this.$cookies.set('token', token);\n        // const idToken = await this.getTokenIdFromFirebase(jwtToken);\n        // this.$cookies.set('firebaseIdToken', idToken);\n        // this.$cookies.set('firebaseRefreshToken', refreshToken);\n        const role = 'ROLE_ADMIN';\n        const id = this.userData.userId;\n        // switch (this.userData.role) {\n        //   case 'VENDOR':\n        //     role = 'vendors';\n        //     break;\n        //   case 'RENTER':\n        //     role = 'renters';\n        //     break;\n        //   case 'ADMIN':\n        //     role = 'admin';\n        //     break;\n        //   case 'MANAGER':\n        //     role = 'manager';\n        //     break;\n        //   default:\n        //     break;\n        // }\n        this.$cookies.set('role', role);\n        this.$cookies.set('userId', id);\n        if (!keepCurrentRoute) {\n          console.log(this.$route.params);\n          const { nextUrl } = this.$route.params;\n          if (nextUrl) {\n            this.$router.push(nextUrl);\n          } else {\n            switch (role) {\n              case 'ROLE_ADMIN':\n                this.$router.push('/');\n                break;\n              default:\n                this.$router.push('/404-error');\n            }\n          }\n        }\n        // this.doGetMessagingToken();\n      } else {\n        this.message = 'Error username or password!';\n      }\n    },\n    async login(keepCurrentRoute) {\n      this.loging = true;\n      await this.loginRequest({\n        username: this.username,\n        password: this.password,\n        token: this.token,\n      });\n      await this.afterLogin(keepCurrentRoute);\n      this.loging = false;\n    },\n  },\n};\n\nexport default authenticationMixins;\n"]}]}