{"remainingRequest":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js!D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\capstone\\DrowsinessFrontEnd\\src\\store\\modules\\vendor\\overview.js","dependencies":[{"path":"D:\\capstone\\DrowsinessFrontEnd\\src\\store\\modules\\vendor\\overview.js","mtime":1624897349287},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/capstone/DrowsinessFrontEnd/src/store/modules/vendor/overview.js"],"names":["myState","usersChatList","data","isLoading","error","success","myGetters","getUserById","state","id","result","filter","user","userId","Number","length","mutationTypes","GET_USERSCHATLIST_REQUEST","GET_USERSCHATLIST_SUCCESS","GET_USERSCHATLIST_FAILURE","ADD_USER_TO_LIST_REQUEST","ADD_USER_TO_LIST_SUCCESS","ADD_USER_TO_LIST_FAILURE","mutations","users","concat","push","actions","getUserByIds","ids","commit","currentRenterIds","map","renter","console","log","newRenterIds","includes","url","join","window","axios","get","res","status","Error","addUserToListById","namespaced","getters"],"mappings":"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","sourcesContent":["const myState = () => ({\n  usersChatList: {\n    data: [],\n    isLoading: false,\n    error: null,\n    success: null,\n  },\n});\n\nconst myGetters = {\n  getUserById: (state) => (id) => {\n    const result = state.usersChatList.data.filter((user) => user.userId === Number(id));\n    if (result.length > 0) {\n      return result[0];\n    }\n    return null;\n  },\n};\nconst mutationTypes = {\n  GET_USERSCHATLIST_REQUEST: 'GET_USERSCHATLIST_REQUEST',\n  GET_USERSCHATLIST_SUCCESS: 'GET_USERSCHATLIST_SUCCESS',\n  GET_USERSCHATLIST_FAILURE: 'GET_USERSCHATLIST_FAILURE',\n  ADD_USER_TO_LIST_REQUEST: 'ADD_USER_TO_LIST_REQUEST',\n  ADD_USER_TO_LIST_SUCCESS: 'ADD_USER_TO_LIST_SUCCESS',\n  ADD_USER_TO_LIST_FAILURE: 'ADD_USER_TO_LIST_FAILURE',\n};\nconst mutations = {\n  GET_USERSCHATLIST_REQUEST(state) {\n    state.usersChatList.isLoading = true;\n  },\n  GET_USERSCHATLIST_SUCCESS(state, users) {\n    state.usersChatList.data = state.usersChatList.data.concat(users);\n    state.usersChatList.isLoading = false;\n    state.usersChatList.success = true;\n  },\n  GET_USERSCHATLIST_FAILURE(state, error) {\n    state.usersChatList.isLoading = false;\n    state.usersChatList.success = false;\n    state.usersChatList.error = error;\n  },\n  ADD_USER_TO_LIST_REQUEST(state) {\n    state.usersChatList.isLoading = true;\n  },\n  ADD_USER_TO_LIST_SUCCESS(state, user) {\n    state.usersChatList.data.push(user);\n    state.usersChatList.isLoading = false;\n    state.usersChatList.success = true;\n  },\n  ADD_USER_TO_LIST_FAILURE(state, error) {\n    state.usersChatList.isLoading = false;\n    state.usersChatList.success = false;\n    state.usersChatList.error = error;\n  },\n};\n\nconst actions = {\n  async getUserByIds({ commit, state }, ids) {\n    // ids is a list of user id\n    try {\n      commit(mutationTypes.GET_USERSCHATLIST_REQUEST);\n      const currentRenterIds = state.usersChatList.data.map((renter) => renter.userId);\n      console.log(`current ${currentRenterIds}`);\n      const newRenterIds = ids.filter((id) => !currentRenterIds.includes(id));\n      console.log(`new ids: ${newRenterIds}`);\n      if (newRenterIds.length > 0) {\n        const url = `/api/v1/renters?renterIds=${newRenterIds.join(',')}`;\n        const res = await window.axios.get(url);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_USERSCHATLIST_SUCCESS, res.data.data);\n        } else {\n          throw Error('response is not successed');\n        }\n      } else {\n        commit(mutationTypes.GET_USERSCHATLIST_SUCCESS, []);\n        console.log('there are no new id');\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_USERSCHATLIST_FAILURE, error);\n    }\n  },\n  async addUserToListById({ commit }, id) {\n    try {\n      commit(mutationTypes.GET_USERSCHATLIST_REQUEST);\n      const res = await window.axios.get(`/api/v1/renters/${id}`);\n      if (res.status === 200) {\n        commit(mutationTypes.GET_USERSCHATLIST_SUCCESS, res.data.data);\n      } else {\n        throw Error('response is not successed');\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_USERSCHATLIST_FAILURE, error);\n    }\n  },\n};\n\nexport default {\n  namespaced: true,\n  state: myState,\n  mutations,\n  getters: myGetters,\n  actions,\n};\n"]}]}