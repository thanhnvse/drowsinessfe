{"remainingRequest":"D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\thread-loader\\dist\\cjs.js!D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\babel-loader\\lib\\index.js!D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\capstone\\HostelFrontEnd-BV2\\src\\store\\modules\\rentor\\discovery.js","dependencies":[{"path":"D:\\capstone\\HostelFrontEnd-BV2\\src\\store\\modules\\rentor\\discovery.js","mtime":1610216666417},{"path":"D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/capstone/HostelFrontEnd-BV2/src/store/modules/rentor/discovery.js"],"names":["myState","stats","streets","data","streetIds","isLoading","error","undefined","success","district","province","getters","getStatsByIds","state","ids","res","filter","street","includes","streetId","getAverage","init","area","room","price","summary","reduce","acc","curr","avgSuperficiality","count","avgPrice","toFixed","mutationTypes","GET_STREET_STATS_REQUEST","GET_STREET_STATS_SUCCESS","GET_STREET_STATS_FAILURE","GET_DISTRICT_STATS_REQUEST","GET_DISTRICT_STATS_SUCCESS","GET_DISTRICT_STATS_FAILURE","GET_PROVINCE_STATS_REQUEST","GET_PROVINCE_STATS_SUCCESS","GET_PROVINCE_STATS_FAILURE","mutations","actions","getStreetStats","commit","currentIds","notDuplicateIds","id","push","window","axios","get","join","getDistrictStatistic","districtId","response","status","getProvinceStatistic","districts","districtIdsStr","forEach","element","namespaced"],"mappings":";;;;;;;;;;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAO;AACrBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,EADC;AAEPC,QAAAA,SAAS,EAAE,EAFJ;AAGPC,QAAAA,SAAS,EAAE,KAHJ;AAIPC,QAAAA,KAAK,EAAEC,SAJA;AAKPC,QAAAA,OAAO,EAAED;AALF,OADJ;AAQLE,MAAAA,QAAQ,EAAE;AACRN,QAAAA,IAAI,EAAE,IADE;AAERE,QAAAA,SAAS,EAAE,KAFH;AAGRG,QAAAA,OAAO,EAAE,IAHD;AAIRF,QAAAA,KAAK,EAAE;AAJC,OARL;AAcLI,MAAAA,QAAQ,EAAE;AACRP,QAAAA,IAAI,EAAE,EADE;AAERE,QAAAA,SAAS,EAAE,IAFH;AAGRG,QAAAA,OAAO,EAAE,IAHD;AAIRF,QAAAA,KAAK,EAAE;AAJC;AAdL;AADc,GAAP;AAAA,CAAhB;;AAwBA,IAAMK,OAAO,GAAG;AACdC,EAAAA,aAAa,EAAE,uBAACC,KAAD;AAAA,WAAW,UAACC,GAAD,EAAS;AACjC,UAAMC,GAAG,GAAGF,KAAK,CAACZ,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyBa,MAAzB,CAAgC,UAACC,MAAD;AAAA,eAAYH,GAAG,CAACI,QAAJ,CAAaD,MAAM,CAACE,QAApB,CAAZ;AAAA,OAAhC,CAAZ;AACA,aAAOJ,GAAP;AACD,KAHc;AAAA,GADD;AAKdK,EAAAA,UAAU,EAAE,oBAACP,KAAD;AAAA,WAAW,UAACC,GAAD,EAAS;AAC9B,UAAMC,GAAG,GAAGF,KAAK,CAACZ,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyBa,MAAzB,CAAgC,UAACC,MAAD;AAAA,eAAYH,GAAG,CAACI,QAAJ,CAAaD,MAAM,CAACE,QAApB,CAAZ;AAAA,OAAhC,CAAZ;AACA,UAAME,IAAI,GAAG;AACXC,QAAAA,IAAI,EAAE,CADK;AAEXC,QAAAA,IAAI,EAAE,CAFK;AAGXC,QAAAA,KAAK,EAAE;AAHI,OAAb;AAKA,UAAMC,OAAO,GAAGV,GAAG,CAACW,MAAJ,CAAW,UAACC,GAAD,EAAMC,IAAN,EAAe;AACxCD,QAAAA,GAAG,CAACL,IAAJ,IAAYM,IAAI,CAACC,iBAAL,GAAyBD,IAAI,CAACE,KAA1C;AACAH,QAAAA,GAAG,CAACJ,IAAJ,IAAYK,IAAI,CAACE,KAAjB;AACAH,QAAAA,GAAG,CAACH,KAAJ,IAAaI,IAAI,CAACG,QAAL,GAAgBH,IAAI,CAACE,KAAlC;AACA,eAAOH,GAAP;AACD,OALe,EAKbN,IALa,CAAhB;AAMA,aAAO;AACLG,QAAAA,KAAK,EAAE,CAACC,OAAO,CAACD,KAAR,GAAgBC,OAAO,CAACF,IAAzB,EAA+BS,OAA/B,CAAuC,CAAvC,CADF;AAELV,QAAAA,IAAI,EAAE,CAACG,OAAO,CAACH,IAAR,GAAeG,OAAO,CAACF,IAAxB,EAA8BS,OAA9B,CAAsC,CAAtC;AAFD,OAAP;AAID,KAjBW;AAAA;AALE,CAAhB;AAwBA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,wBAAwB,EAAE,0BADN;AAEpBC,EAAAA,wBAAwB,EAAE,0BAFN;AAGpBC,EAAAA,wBAAwB,EAAE,0BAHN;AAKpBC,EAAAA,0BAA0B,EAAE,4BALR;AAMpBC,EAAAA,0BAA0B,EAAE,4BANR;AAOpBC,EAAAA,0BAA0B,EAAE,4BAPR;AASpBC,EAAAA,0BAA0B,EAAE,4BATR;AAUpBC,EAAAA,0BAA0B,EAAE,4BAVR;AAWpBC,EAAAA,0BAA0B,EAAE;AAXR,CAAtB;AAaA,IAAMC,SAAS,GAAG;AAChBT,EAAAA,wBADgB,oCACSrB,KADT,EACgB;AAC9BA,IAAAA,KAAK,CAACZ,KAAN,CAAYC,OAAZ,CAAoBG,SAApB,GAAgC,IAAhC;AACD,GAHe;AAIhB8B,EAAAA,wBAJgB,oCAIStB,KAJT,EAIgBZ,KAJhB,EAIuB;AACrCY,IAAAA,KAAK,CAACZ,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,GAA2BF,KAA3B;AACAY,IAAAA,KAAK,CAACZ,KAAN,CAAYC,OAAZ,CAAoBM,OAApB,GAA8B,IAA9B;AACAK,IAAAA,KAAK,CAACZ,KAAN,CAAYC,OAAZ,CAAoBG,SAApB,GAAgC,KAAhC;AACD,GARe;AAShB+B,EAAAA,wBATgB,oCASSvB,KATT,EASgBP,KAThB,EASuB;AACrCO,IAAAA,KAAK,CAACZ,KAAN,CAAYC,OAAZ,CAAoBI,KAApB,GAA4BA,KAA5B;AACAO,IAAAA,KAAK,CAACZ,KAAN,CAAYC,OAAZ,CAAoBM,OAApB,GAA8B,KAA9B;AACAK,IAAAA,KAAK,CAACZ,KAAN,CAAYC,OAAZ,CAAoBG,SAApB,GAAgC,KAAhC;AACD,GAbe;AAehBgC,EAAAA,0BAfgB,sCAeWxB,KAfX,EAekB;AAChCA,IAAAA,KAAK,CAACZ,KAAN,CAAYQ,QAAZ,CAAqBJ,SAArB,GAAiC,IAAjC;AACD,GAjBe;AAkBhBiC,EAAAA,0BAlBgB,sCAkBWzB,KAlBX,EAkBkBV,IAlBlB,EAkBwB;AACtCU,IAAAA,KAAK,CAACZ,KAAN,CAAYQ,QAAZ,CAAqBN,IAArB,GAA4BA,IAA5B;AACAU,IAAAA,KAAK,CAACZ,KAAN,CAAYQ,QAAZ,CAAqBJ,SAArB,GAAiC,KAAjC;AACAQ,IAAAA,KAAK,CAACZ,KAAN,CAAYQ,QAAZ,CAAqBD,OAArB,GAA+B,IAA/B;AACD,GAtBe;AAuBhB+B,EAAAA,0BAvBgB,sCAuBW1B,KAvBX,EAuBkBP,KAvBlB,EAuByB;AACvCO,IAAAA,KAAK,CAACZ,KAAN,CAAYQ,QAAZ,CAAqBJ,SAArB,GAAiC,KAAjC;AACAQ,IAAAA,KAAK,CAACZ,KAAN,CAAYQ,QAAZ,CAAqBH,KAArB,GAA6BA,KAA7B;AACD,GA1Be;AA4BhBkC,EAAAA,0BA5BgB,sCA4BW3B,KA5BX,EA4BkB;AAChCA,IAAAA,KAAK,CAACZ,KAAN,CAAYS,QAAZ,CAAqBL,SAArB,GAAiC,IAAjC;AACD,GA9Be;AA+BhBoC,EAAAA,0BA/BgB,sCA+BW5B,KA/BX,EA+BkBV,IA/BlB,EA+BwB;AACtCU,IAAAA,KAAK,CAACZ,KAAN,CAAYS,QAAZ,CAAqBP,IAArB,GAA4BA,IAA5B;AACAU,IAAAA,KAAK,CAACZ,KAAN,CAAYS,QAAZ,CAAqBL,SAArB,GAAiC,KAAjC;AACAQ,IAAAA,KAAK,CAACZ,KAAN,CAAYS,QAAZ,CAAqBF,OAArB,GAA+B,IAA/B;AACD,GAnCe;AAoChBkC,EAAAA,0BApCgB,sCAoCW7B,KApCX,EAoCkBP,KApClB,EAoCyB;AACvCO,IAAAA,KAAK,CAACZ,KAAN,CAAYS,QAAZ,CAAqBL,SAArB,GAAiC,KAAjC;AACAQ,IAAAA,KAAK,CAACZ,KAAN,CAAYS,QAAZ,CAAqBJ,KAArB,GAA6BA,KAA7B;AACD;AAvCe,CAAlB;AAyCA,IAAMsC,OAAO,GAAG;AACRC,EAAAA,cADQ,gCAC0BzC,SAD1B,EACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5B0C,cAAAA,MAA4B,QAA5BA,MAA4B,EAApBjC,KAAoB,QAApBA,KAAoB;AAC3CkC,cAAAA,UAD2C,GAC9BlC,KAAK,CAACZ,KAAN,CAAYC,OAAZ,CAAoBE,SADU;AAE3C4C,cAAAA,eAF2C,GAEzB5C,SAAS,CAACY,MAAV,CAAiB,UAACiC,EAAD;AAAA,uBAAQ,CAACF,UAAU,CAAC7B,QAAX,CAAoB+B,EAApB,CAAT;AAAA,eAAjB,CAFyB;AAGjDF,cAAAA,UAAU,CAACG,IAAX,CAAgBF,eAAhB;AAHiD;AAK/CF,cAAAA,MAAM,CAACb,aAAa,CAACC,wBAAf,CAAN;AAL+C;AAAA,qBAM7BiB,MAAM,CAACC,KAAP,CAAaC,GAAb,uCACeL,eAAe,CAACM,IAAhB,CAAqB,GAArB,CADf,EAN6B;;AAAA;AAMzCvC,cAAAA,GANyC;AAS/C+B,cAAAA,MAAM,CAACb,aAAa,CAACE,wBAAf,EAAyCpB,GAAG,CAACZ,IAAJ,CAASA,IAAlD,CAAN;AAT+C;AAAA;;AAAA;AAAA;AAAA;AAW/C2C,cAAAA,MAAM,CAACb,aAAa,CAACG,wBAAf,cAAN;;AAX+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAalD,GAda;AAgBRmB,EAAAA,oBAhBQ,uCAgByBC,UAhBzB,EAgBqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtBV,cAAAA,MAAsB,SAAtBA,MAAsB;AAAA;AAE/CA,cAAAA,MAAM,CAACb,aAAa,CAACI,0BAAf,CAAN;AAF+C;AAAA,qBAGxBc,MAAM,CAACC,KAAP,CAAaC,GAAb,iCAA0CG,UAA1C,EAHwB;;AAAA;AAGzCC,cAAAA,QAHyC;;AAI/C,kBAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,IAAmB,GAAjD,EAAsD;AACpDZ,gBAAAA,MAAM,CAACb,aAAa,CAACK,0BAAf,EAA2CmB,QAAQ,CAACtD,IAAT,CAAcA,IAAzD,CAAN;AACD,eAFD,MAEO;AACL2C,gBAAAA,MAAM,CAACb,aAAa,CAACM,0BAAf,CAAN;AACD;;AAR8C;AAAA;;AAAA;AAAA;AAAA;AAU/CO,cAAAA,MAAM,CAACb,aAAa,CAACM,0BAAf,eAAN;;AAV+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYlD,GA5Ba;AA6BRoB,EAAAA,oBA7BQ,uCA6ByBC,SA7BzB,EA6BoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArBd,cAAAA,MAAqB,SAArBA,MAAqB;AAAA;AAG9CA,cAAAA,MAAM,CAACb,aAAa,CAACO,0BAAf,CAAN;AACIqB,cAAAA,cAJ0C,GAIzB,EAJyB;AAK9CD,cAAAA,SAAS,CAACA,SAAV,CAAoBE,OAApB,CAA4B,UAACC,OAAD,EAAa;AACvCF,gBAAAA,cAAc,mBAAYE,OAAO,CAACP,UAApB,CAAd;AACD,eAFD;AAL8C;AAAA,qBAQvBL,MAAM,CAACC,KAAP,CAAaC,GAAb,6BAAsCQ,cAAtC,EARuB;;AAAA;AAQxCJ,cAAAA,QARwC;;AAS9C,kBAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,IAAmB,GAAjD,EAAsD;AACpDZ,gBAAAA,MAAM,CAACb,aAAa,CAACQ,0BAAf,EAA2CgB,QAAQ,CAACtD,IAAT,CAAcA,IAAzD,CAAN;AACD,eAFD,MAEO;AACL2C,gBAAAA,MAAM,CAACb,aAAa,CAACS,0BAAf,CAAN;AACD;;AAb6C;AAAA;;AAAA;AAAA;AAAA;AAe9CI,cAAAA,MAAM,CAACb,aAAa,CAACS,0BAAf,eAAN;;AAf8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBjD;AA9Ca,CAAhB;AAiDA,eAAe;AACbsB,EAAAA,UAAU,EAAE,IADC;AAEbnD,EAAAA,KAAK,EAAEb,OAFM;AAGb2C,EAAAA,SAAS,EAATA,SAHa;AAIbhC,EAAAA,OAAO,EAAPA,OAJa;AAKbiC,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["const myState = () => ({\n  stats: {\n    streets: {\n      data: [],\n      streetIds: [],\n      isLoading: false,\n      error: undefined,\n      success: undefined,\n    },\n    district: {\n      data: null,\n      isLoading: false,\n      success: null,\n      error: null,\n    },\n    province: {\n      data: [],\n      isLoading: true,\n      success: null,\n      error: null,\n    },\n  },\n});\n\nconst getters = {\n  getStatsByIds: (state) => (ids) => {\n    const res = state.stats.streets.data.filter((street) => ids.includes(street.streetId));\n    return res;\n  },\n  getAverage: (state) => (ids) => {\n    const res = state.stats.streets.data.filter((street) => ids.includes(street.streetId));\n    const init = {\n      area: 0,\n      room: 0,\n      price: 0,\n    };\n    const summary = res.reduce((acc, curr) => {\n      acc.area += curr.avgSuperficiality * curr.count;\n      acc.room += curr.count;\n      acc.price += curr.avgPrice * curr.count;\n      return acc;\n    }, init);\n    return {\n      price: (summary.price / summary.room).toFixed(2),\n      area: (summary.area / summary.room).toFixed(2),\n    };\n  },\n};\nconst mutationTypes = {\n  GET_STREET_STATS_REQUEST: 'GET_STREET_STATS_REQUEST',\n  GET_STREET_STATS_SUCCESS: 'GET_STREET_STATS_SUCCESS',\n  GET_STREET_STATS_FAILURE: 'GET_STREET_STATS_FAILURE',\n\n  GET_DISTRICT_STATS_REQUEST: 'GET_DISTRICT_STATS_REQUEST',\n  GET_DISTRICT_STATS_SUCCESS: 'GET_DISTRICT_STATS_SUCCESS',\n  GET_DISTRICT_STATS_FAILURE: 'GET_DISTRICT_STATS_FAILURE',\n\n  GET_PROVINCE_STATS_REQUEST: 'GET_PROVINCE_STATS_REQUEST',\n  GET_PROVINCE_STATS_SUCCESS: 'GET_PROVINCE_STATS_SUCCESS',\n  GET_PROVINCE_STATS_FAILURE: 'GET_PROVINCE_STATS_FAILURE',\n};\nconst mutations = {\n  GET_STREET_STATS_REQUEST(state) {\n    state.stats.streets.isLoading = true;\n  },\n  GET_STREET_STATS_SUCCESS(state, stats) {\n    state.stats.streets.data = stats;\n    state.stats.streets.success = true;\n    state.stats.streets.isLoading = false;\n  },\n  GET_STREET_STATS_FAILURE(state, error) {\n    state.stats.streets.error = error;\n    state.stats.streets.success = false;\n    state.stats.streets.isLoading = false;\n  },\n\n  GET_DISTRICT_STATS_REQUEST(state) {\n    state.stats.district.isLoading = true;\n  },\n  GET_DISTRICT_STATS_SUCCESS(state, data) {\n    state.stats.district.data = data;\n    state.stats.district.isLoading = false;\n    state.stats.district.success = true;\n  },\n  GET_DISTRICT_STATS_FAILURE(state, error) {\n    state.stats.district.isLoading = false;\n    state.stats.district.error = error;\n  },\n\n  GET_PROVINCE_STATS_REQUEST(state) {\n    state.stats.province.isLoading = true;\n  },\n  GET_PROVINCE_STATS_SUCCESS(state, data) {\n    state.stats.province.data = data;\n    state.stats.province.isLoading = false;\n    state.stats.province.success = true;\n  },\n  GET_PROVINCE_STATS_FAILURE(state, error) {\n    state.stats.province.isLoading = false;\n    state.stats.province.error = error;\n  },\n};\nconst actions = {\n  async getStreetStats({ commit, state }, streetIds) {\n    const currentIds = state.stats.streets.streetIds;\n    const notDuplicateIds = streetIds.filter((id) => !currentIds.includes(id));\n    currentIds.push(notDuplicateIds);\n    try {\n      commit(mutationTypes.GET_STREET_STATS_REQUEST);\n      const res = await window.axios.get(\n        `/api/v1/statistic?streetIds=${notDuplicateIds.join(',')}`,\n      );\n      commit(mutationTypes.GET_STREET_STATS_SUCCESS, res.data.data);\n    } catch (error) {\n      commit(mutationTypes.GET_STREET_STATS_FAILURE, error);\n    }\n  },\n\n  async getDistrictStatistic({ commit }, districtId) {\n    try {\n      commit(mutationTypes.GET_DISTRICT_STATS_REQUEST);\n      const response = await window.axios.get(`/api/v1/statistic?ids=${districtId}`);\n      if (response.status >= 200 && response.status <= 299) {\n        commit(mutationTypes.GET_DISTRICT_STATS_SUCCESS, response.data.data);\n      } else {\n        commit(mutationTypes.GET_DISTRICT_STATS_FAILURE);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_DISTRICT_STATS_FAILURE, error);\n    }\n  },\n  async getProvinceStatistic({ commit }, districts) {\n    // param: list districtIds\n    try {\n      commit(mutationTypes.GET_PROVINCE_STATS_REQUEST);\n      let districtIdsStr = '';\n      districts.districts.forEach((element) => {\n        districtIdsStr += `&ids=${element.districtId}`;\n      });\n      const response = await window.axios.get(`/api/v1/statistic?${districtIdsStr}`);\n      if (response.status >= 200 && response.status <= 299) {\n        commit(mutationTypes.GET_PROVINCE_STATS_SUCCESS, response.data.data);\n      } else {\n        commit(mutationTypes.GET_PROVINCE_STATS_FAILURE);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_PROVINCE_STATS_FAILURE, error);\n    }\n  },\n};\n\nexport default {\n  namespaced: true,\n  state: myState,\n  mutations,\n  getters,\n  actions,\n};\n"]}]}