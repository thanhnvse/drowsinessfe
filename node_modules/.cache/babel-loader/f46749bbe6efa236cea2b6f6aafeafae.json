{"remainingRequest":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\thread-loader\\dist\\cjs.js!D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js!D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\capstone\\DrowsinessFrontEnd\\src\\store\\modules\\rentor\\filterresult.js","dependencies":[{"path":"D:\\capstone\\DrowsinessFrontEnd\\src\\store\\modules\\rentor\\filterresult.js","mtime":1624897349285},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\capstone\\DrowsinessFrontEnd\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/capstone/DrowsinessFrontEnd/src/store/modules/rentor/filterresult.js"],"names":["myState","search","value","filter","around","selects","items","facility","data","isLoading","price","select","area","results","types","groups","mutationTypes","SET_FILTER_VALUES","SET_SEARCH_VALUE","GET_FILTER_RESULT_REQUEST","GET_FILTER_RESULT_SUCCESS","GET_FILTER_RESULT_FAILURE","GET_FACILITIES_SUCCESS","GET_FACILITIES_FAILURE","GET_FACILITIES_REQUEST","mutations","state","filterValues","searchValue","inputData","getters","getHostelGroupById","id","result","group","groupId","Number","length","getHostelTypeById","type","typeId","actions","setFilterValue","commit","setSearchValue","getFilterResult","params","convert","maxPrice","split","minSuperficiality","minCapacity","maxCapacity","address","queryString","Object","keys","map","key","join","size","page","window","axios","get","res","status","searchByAddress","url","searchByCoordinator","lat","long","getAllFacilities","console","log","response","namespaced"],"mappings":"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","sourcesContent":["const myState = {\n  search: {\n    value: '',\n  },\n  filter: {\n    around: {\n      selects: [],\n      items: [\n        'Chợ, siêu thị, cửa hàng tiện lợi',\n        'Trạm xe buýt',\n        'Bệnh viện, trạm y tế',\n        'Ngân hàng',\n      ],\n    },\n    facility: {\n      selects: [],\n      data: [],\n      isLoading: false,\n    },\n    // facility: {\n    //   selects: [],\n    //   items: [\n    //     'Máy lạnh',\n    //     'Máy giặt',\n    //     'Tủ lạnh',\n    //     'Bình nóng lạnh',\n    //     'Chỗ đậu xe',\n    //   ],\n    // },\n    price: {\n      select: '1 triệu',\n      items: [\n        '1 triệu',\n        '2 triệu',\n        '3 triệu',\n        '4 triệu',\n        '5 triệu',\n        '6 triệu',\n        '7 triệu',\n        '8 triệu',\n        '9 triệu',\n        '10 triệu',\n      ],\n    },\n    area: {\n      select: '20 m2',\n      items: [\n        '10 m2',\n        '15 m2',\n        '20 m2',\n        '25 m2',\n        '30 m2',\n        '40 m2',\n        '50 m2',\n        '70 m2',\n        '100 m2',\n      ],\n    },\n  },\n  results: {\n    data: {\n      types: [],\n      groups: [],\n    },\n    isLoading: false,\n  },\n};\nconst mutationTypes = {\n  SET_FILTER_VALUES: 'SET_FILTER_VALUES',\n  SET_SEARCH_VALUE: 'SET_SEARCH_VALUE',\n  GET_FILTER_RESULT_REQUEST: 'GET_FILTER_RESULT_REQUEST',\n  GET_FILTER_RESULT_SUCCESS: 'GET_FILTER_RESULT_SUCCESS',\n  GET_FILTER_RESULT_FAILURE: 'GET_FILTER_RESULT_FAILURE',\n  // facilities\n  GET_FACILITIES_SUCCESS: 'GET_FACILITIES_SUCCESS',\n  GET_FACILITIES_FAILURE: 'GET_FACILITIES_FAILURE',\n  GET_FACILITIES_REQUEST: 'GET_FACILITIES_REQUEST',\n};\nconst mutations = {\n  SET_FILTER_VALUES: (state, filterValues) => {\n    state.filter = filterValues;\n  },\n  SET_SEARCH_VALUE: (state, searchValue) => {\n    state.search.value = searchValue;\n  },\n  GET_FILTER_RESULT_REQUEST: (state) => {\n    state.results.isLoading = true;\n  },\n  GET_FILTER_RESULT_SUCCESS: (state, results) => {\n    state.results.data = results;\n    state.results.isLoading = false;\n  },\n  GET_FILTER_RESULT_FAILURE: (state) => {\n    state.results.isLoading = false;\n  },\n\n  // facilities\n  GET_FACILITIES_SUCCESS(state, inputData) {\n    state.facility.data = inputData;\n    state.facility.isLoading = false;\n  },\n  GET_FACILITIES_FAILURE(state) {\n    state.facility.isLoading = false;\n  },\n  GET_FACILITIES_REQUEST(state) {\n    state.facility.isLoading = true;\n  },\n};\nconst getters = {\n  getHostelGroupById: (state) => (id) => {\n    const result = state.results.data.groups.filter(\n      (group) => group.groupId === Number(id),\n    );\n    if (result.length > 0) {\n      return result[0];\n    }\n    return null;\n  },\n  getHostelTypeById: (state) => (id) => {\n    const result = state.results.data.types.filter(\n      (type) => type.typeId === Number(id),\n    );\n    if (result.length > 0) {\n      return result[0];\n    }\n    return null;\n  },\n};\nconst actions = {\n  setFilterValue({ commit }, filterValues) {\n    commit(mutationTypes.SET_FILTER_VALUES, filterValues);\n  },\n  setSearchValue({ commit }, searchValue) {\n    commit(mutationTypes.SET_SEARCH_VALUE, searchValue);\n  },\n  async getFilterResult({ commit, state }, params) {\n    // params contains page, size and address\n    commit(mutationTypes.GET_FILTER_RESULT_REQUEST);\n    const data = {\n      around: state.filter.around.selects,\n      facility: state.filter.around.selects,\n      price: state.filter.price.select,\n      area: state.filter.area.select,\n    };\n    const convert = {\n      // minPrice: Number(data.price.split('-')[0]),\n      maxPrice: Number(data.price.split(' ')[0]) * 1000000,\n      minSuperficiality: data.area.split(' ')[0],\n      // maxSuperficiality: data.area[1],\n      minCapacity: 0,\n      maxCapacity: 10,\n      address: state.search.value,\n    };\n    let queryString = Object.keys(convert).map((key) => {\n      if (convert[key]) {\n        return `${key}=${convert[key]}&`;\n      }\n      return '';\n    });\n    queryString = `?${queryString.join('')}size=${params.size}&page=${\n      params.page\n    }`;\n    const res = await window.axios.get(`/api/v1/types${queryString}`);\n    if (res.status === 200) {\n      commit(mutationTypes.GET_FILTER_RESULT_SUCCESS, res.data.data);\n    } else {\n      commit(mutationTypes.GET_FILTER_RESULT_FAILURE);\n    }\n  },\n  async searchByAddress({ commit, state }) {\n    commit(mutationTypes.GET_FILTER_RESULT_REQUEST);\n    const url = `/api/v1/types?address=${state.search.value}`;\n    const res = await window.axios.get(url);\n    if (res.status === 200) {\n      commit(mutationTypes.GET_FILTER_RESULT_SUCCESS, res.data.data);\n    } else {\n      commit(mutationTypes.GET_FILTER_RESULT_FAILURE);\n    }\n  },\n  async searchByCoordinator({ commit }, params) {\n    // params = {lat, long}\n    try {\n      commit(mutationTypes.GET_FILTER_RESULT_REQUEST);\n      const url = `/api/v1/types?distance=5&latitude=${params.lat}&longitude=${params.long}&page=1&size=5`;\n      const res = await window.axios.get(url);\n      if (res.status === 200) {\n        commit(mutationTypes.GET_FILTER_RESULT_SUCCESS, res.data.data);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_FILTER_RESULT_FAILURE);\n    }\n  },\n  async getAllFacilities({ commit }) {\n    // no param\n    try {\n      console.log('filter');\n      commit(mutationTypes.GET_FACILITIES_REQUEST);\n      const response = await window.axios.get('/api/v1/facilities');\n      if (response.status >= 200 && response.status <= 299) {\n        commit(mutationTypes.GET_FACILITIES_SUCCESS, response.data.data);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_FACILITIES_FAILURE);\n    }\n  },\n};\nexport default {\n  namespaced: true,\n  state: myState,\n  mutations,\n  getters,\n  actions,\n};\n"]}]}