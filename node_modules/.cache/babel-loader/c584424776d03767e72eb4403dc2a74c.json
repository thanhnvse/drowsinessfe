{"remainingRequest":"D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\babel-loader\\lib\\index.js!D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\capstone\\HostelFrontEnd-BV2\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\capstone\\HostelFrontEnd-BV2\\src\\store\\modules\\user.js","mtime":1611653116768},{"path":"D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\capstone\\HostelFrontEnd-BV2\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/capstone/HostelFrontEnd-BV2/src/store/modules/user.js"],"names":["myState","user","data","isLoading","isUpdating","success","error","contracts","page","size","isCreating","newlyCreated","bookings","deals","notifications","new","feedback","feedbackUpdate","requests","renters","vendors","types","myGetters","findLastedDeal","state","renterId","vendorId","typeId","result","filter","deal","console","log","renter","userId","vendor","type","status","sort","deal1","deal2","creationTime","findPendingBooking","booking","findDealById","id","dealId","findBookingById","find","bookingId","Number","findContractById","contract","c","contractId","mutationTypes","CREATE_ROOM_REQUEST_REQUEST","CREATE_ROOM_REQUEST_SUCCESS","CREATE_ROOM_REQUEST_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","CLEAR_USER_DATA","GET_CONTRACTS_REQUEST","GET_CONTRACTS_SUCCESS","GET_CONTRACTS_FAILURE","GET_BOOKINGS_REQUEST","GET_BOOKINGS_SUCCESS","GET_BOOKINGS_FAILURE","GET_BOOKING_REQUEST","GET_BOOKING_SUCCESS","GET_BOOKING_FAILURE","CREATE_BOOKING_REQUEST","CREATE_BOOKING_SUCCESS","CREATE_BOOKING_FAILURE","GET_DEALS_REQUEST","GET_DEALS_SUCCESS","GET_DEALS_FAILURE","CREATE_DEAL_REQUEST","CREATE_DEAL_SUCCESS","CREATE_DEAL_FAILURE","GET_DEAL_REQUEST","GET_DEAL_SUCCESS","GET_DEAL_FAILURE","CANCEL_DEAL_REQUEST","CANCEL_DEAL_SUCCESS","CANCEL_DEAL_FAILURE","CANCEL_BOOKING_REQUEST","CANCEL_BOOKING_SUCCESS","CANCEL_BOOKING_FAILURE","DONE_BOOKING_REQUEST","DONE_BOOKING_SUCCESS","DONE_BOOKING_FAILURE","CLEAR_NEWLY_CREATED_BOOKING","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILURE","CREATE_CONTRACT_REQUEST","CREATE_CONTRACT_SUCCESS","CREATE_CONTRACT_FAILURE","UPDATE_CONTRACT_REQUEST","UPDATE_CONTRACT_SUCCESS","UPDATE_CONTRACT_FAILURE","ACTIVATE_CONTRACT_REQUEST","ACTIVATE_CONTRACT_SUCCESS","ACTIVATE_CONTRACT_FAILURE","GET_ONE_CONTRACT_REQUEST","GET_ONE_CONTRACT_SUCCESS","GET_ONE_CONTRACT_FAILURE","SEND_NOTIFICATION_REQUEST","SEND_NOTIFICATION_SUCCESS","SEND_NOTIFICATION_FAILURE","ADD_NOTIFICATION_LOCAL_REQUEST","ADD_NOTIFICATION_LOCAL_SUCCESS","ADD_NOTIFICATION_LOCAL_FAILURE","CREATE_FEEDBACK_REQUEST","CREATE_FEEDBACK_SUCCESS","CREATE_FEEDBACK_FAILURE","DELETE_FEEDBACK_REQUEST","DELETE_FEEDBACK_SUCCESS","DELETE_FEEDBACK_FAILURE","UPDATE_FEEDBACK_REQUEST","UPDATE_FEEDBACK_SUCCESS","UPDATE_FEEDBACK_FAILURE","GET_ROOM_REQUESTS_REQUEST","GET_ROOM_REQUESTS_SUCCESS","GET_ROOM_REQUESTS_FAILURE","GET_ALLRENTERS_REQUEST","GET_ALLRENTERS_SUCCESS","GET_ALLRENTERS_FAILURE","GET_ALLVENDORS_REQUEST","GET_ALLVENDORS_SUCCESS","GET_ALLVENDORS_FAILURE","GET_ALLTYPES_REQUEST","GET_ALLTYPES_SUCCESS","GET_ALLTYPES_FAILURE","UPDATE_HOSTEL_TYPE_REQUEST","UPDATE_HOSTEL_TYPE_SUCCESS","UPDATE_HOSTEL_TYPE_FAILURE","UPDATE_VENDOR_REQUEST","UPDATE_VENDOR_SUCCESS","UPDATE_VENDOR_FAILURE","UPDATE_RENTER_REQUEST","UPDATE_RENTER_SUCCESS","UPDATE_RENTER_FAILURE","mutations","request","unshift","oldContractIndex","findIndex","splice","push","res","newBooking","book","index","noti","item","group","newType","temp","actions","getRoomRequests","commit","window","$cookies","get","role","axios","Error","createRoomRequest","post","login","params","phone","password","getTokenIdFromFirebase","userData","jwtToken","idToken","refreshToken","clearUserData","getUser","updateUser","newUser","put","updateVendorV2","dataUpdate","updateRenterV2","updateUserFirebaseToken","firebaseToken","getBookings","getContracts","getOneBooking","currentIds","map","includes","insertOneBooking","editBooking","createBooking","getDeals","createDeal","getDeal","dealIds","newIds","newId","lenght","cancelDeal","offeredPrice","cancelBooking","meetTime","qrCode","updateBookingStatus","content","updateBookingStatusLocal","clearNewlyCreatedBooking","registerRenter","response","registerVendor","createContract","updateContract","JSON","stringify","activateContract","payload","updateContractLocal","getOneContract","sendNotification","title","body","action","icon","addNotificationLocal","sendFeedback","deleteFeedback","feedbackId","delete","updateFeedback","getAllRenters","getAllVendors","getAllTypes","updateHostelTypeV2","namespaced","getters"],"mappings":"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","sourcesContent":["const myState = () => ({\n  user: {\n    data: null,\n    isLoading: false,\n    isUpdating: false,\n    success: null,\n    error: null,\n  },\n  contracts: {\n    data: [],\n    page: [1],\n    size: 50,\n    isLoading: false,\n    isCreating: false,\n    isUpdating: false,\n    newlyCreated: null,\n    success: null,\n    error: null,\n  },\n  bookings: {\n    data: [],\n    isLoading: false,\n    isCreating: false,\n    isUpdating: false,\n    success: null,\n    error: null,\n    newlyCreated: null,\n  },\n  deals: {\n    data: [],\n    isLoading: false,\n    success: null,\n    error: null,\n    newlyCreated: null,\n  },\n  notifications: {\n    data: [],\n    isCreating: false,\n    success: null,\n    error: null,\n    new: null,\n  },\n  feedback: {\n    data: [],\n    isLoading: false,\n    success: null,\n    error: null,\n    feedbackUpdate: null,\n  },\n  requests: {\n    data: [],\n    isLoading: false,\n    isCreating: false,\n    error: null,\n    success: null,\n  },\n  renters: {\n    data: [],\n    isLoading: false,\n    error: null,\n    success: null,\n  },\n  vendors: {\n    data: [],\n    isLoading: false,\n    error: null,\n    success: null,\n  },\n  types: {\n    data: [],\n    isLoading: false,\n    isUpdating: false,\n    error: null,\n    success: null,\n  },\n});\n\nconst myGetters = {\n  // get lasted deal\n  findLastedDeal: (state) => (renterId, vendorId, typeId) => {\n    let result = state.deals.data.filter((deal) => {\n      console.log(state.deals.data);\n      if (\n        deal.renter.userId === renterId &&\n        deal.vendor.userId === vendorId &&\n        deal.type.typeId === typeId &&\n        deal.status === 'CREATED'\n      ) {\n        return true;\n      }\n      return false;\n    });\n    result = result.sort((deal1, deal2) => deal1.creationTime - deal2.creationTime);\n    console.log(`lasted deal: ${result[0]}`);\n    return result[0];\n  },\n  findPendingBooking: (state) => (renterId, vendorId, typeId) => {\n    const result = state.bookings.data.filter((booking) => {\n      if (\n        booking.renter.renterId === renterId &&\n        booking.vendor.vendorId === vendorId &&\n        booking.type.typeId === typeId &&\n        booking.status === 'INCOMING'\n      ) {\n        return true;\n      }\n      return false;\n    });\n    console.log(`pending booking ${result[0]}`);\n    return result[0];\n  },\n  findDealById: (state) => (id) => {\n    const result = state.deals.data.filter((deal) => deal.dealId === id);\n    return result[0];\n  },\n  findBookingById: (state) => (id) => {\n    const result = state.bookings.data.find((booking) => booking.bookingId === Number(id));\n    return result;\n  },\n  findContractById: (state) => (id) => {\n    console.log('find contract id', id);\n    const contract = state.contracts.data.find((c) => c.contractId === Number(id));\n    return contract;\n  },\n};\nconst mutationTypes = {\n  CREATE_ROOM_REQUEST_REQUEST: 'CREATE_ROOM_REQUEST_REQUEST',\n  CREATE_ROOM_REQUEST_SUCCESS: 'CREATE_ROOM_REQUEST_SUCCESS',\n  CREATE_ROOM_REQUEST_FAILURE: 'CREATE_ROOM_REQUEST_FAILURE',\n\n  GET_USER_REQUEST: 'GET_USER_REQUEST',\n  GET_USER_SUCCESS: 'GET_USER_SUCCESS',\n  GET_USER_FAILURE: 'GET_USER_FAILURE',\n\n  UPDATE_USER_REQUEST: 'UPDATE_USER_REQUEST',\n  UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS',\n  UPDATE_USER_FAILURE: 'UPDATE_USER_FAILURE',\n\n  CLEAR_USER_DATA: 'CLEAR_USER_DATA',\n\n  GET_CONTRACTS_REQUEST: 'GET_CONTRACTS_REQUEST',\n  GET_CONTRACTS_SUCCESS: 'GET_CONTRACTS_SUCCESS',\n  GET_CONTRACTS_FAILURE: 'GET_CONTRACTS_FAILURE',\n\n  GET_BOOKINGS_REQUEST: 'GET_BOOKINGS_REQUEST',\n  GET_BOOKINGS_SUCCESS: 'GET_BOOKINGS_SUCCESS',\n  GET_BOOKINGS_FAILURE: 'GET_BOOKINGS_FAILURE',\n\n  GET_BOOKING_REQUEST: 'GET_BOOKING_REQUEST',\n  GET_BOOKING_SUCCESS: 'GET_BOOKING_SUCCESS',\n  GET_BOOKING_FAILURE: 'GET_BOOKING_FAILURE',\n\n  CREATE_BOOKING_REQUEST: 'CREATE_BOOKING_REQUEST',\n  CREATE_BOOKING_SUCCESS: 'CREATE_BOOKING_SUCCESS',\n  CREATE_BOOKING_FAILURE: 'CREATE_BOOKING_FAILURE',\n\n  GET_DEALS_REQUEST: 'GET_DEALS_REQUEST',\n  GET_DEALS_SUCCESS: 'GET_DEALS_SUCCESS',\n  GET_DEALS_FAILURE: 'GET_DEALS_FAILURE',\n\n  CREATE_DEAL_REQUEST: 'CREATE_DEAL_REQUEST',\n  CREATE_DEAL_SUCCESS: 'CREATE_DEAL_SUCCESS',\n  CREATE_DEAL_FAILURE: 'CREATE_DEAL_FAILURE',\n\n  GET_DEAL_REQUEST: 'GET_DEAL_REQUEST',\n  GET_DEAL_SUCCESS: 'GET_DEAL_SUCCESS',\n  GET_DEAL_FAILURE: 'GET_DEAL_FAILURE',\n\n  CANCEL_DEAL_REQUEST: 'CANCEL_DEAL_REQUEST',\n  CANCEL_DEAL_SUCCESS: 'CANCEL_DEAL_SUCCESS',\n  CANCEL_DEAL_FAILURE: 'CANCEL_DEAL_FAILURE',\n\n  CANCEL_BOOKING_REQUEST: 'CANCEL_BOOKING_REQUEST',\n  CANCEL_BOOKING_SUCCESS: 'CANCEL_BOOKING_SUCCESS',\n  CANCEL_BOOKING_FAILURE: 'CANCEL_BOOKING_FAILURE',\n\n  DONE_BOOKING_REQUEST: 'DONE_BOOKING_REQUEST',\n  DONE_BOOKING_SUCCESS: 'DONE_BOOKING_SUCCESS',\n  DONE_BOOKING_FAILURE: 'DONE_BOOKING_FAILURE',\n\n  CLEAR_NEWLY_CREATED_BOOKING: 'CLEAR_NEWLY_CREATED_BOOKING',\n\n  REGISTER_USER_REQUEST: 'REGISTER_USER_REQUEST',\n  REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS',\n  REGISTER_USER_FAILURE: 'REGISTER_USER_FAILURE',\n\n  CREATE_CONTRACT_REQUEST: 'CREATE_CONTRACT_REQUEST',\n  CREATE_CONTRACT_SUCCESS: 'CREATE_CONTRACT_SUCCESS',\n  CREATE_CONTRACT_FAILURE: 'CREATE_CONTRACT_FAILURE',\n\n  UPDATE_CONTRACT_REQUEST: 'UPDATE_CONTRACT_REQUEST',\n  UPDATE_CONTRACT_SUCCESS: 'UPDATE_CONTRACT_SUCCESS',\n  UPDATE_CONTRACT_FAILURE: 'UPDATE_CONTRACT_FAILURE',\n\n  ACTIVATE_CONTRACT_REQUEST: 'ACTIVATE_CONTRACT_REQUEST',\n  ACTIVATE_CONTRACT_SUCCESS: 'ACTIVATE_CONTRACT_SUCCESS',\n  ACTIVATE_CONTRACT_FAILURE: 'ACTIVATE_CONTRACT_FAILURE',\n\n  GET_ONE_CONTRACT_REQUEST: 'GET_ONE_CONTRACT_REQUEST',\n  GET_ONE_CONTRACT_SUCCESS: 'GET_ONE_CONTRACT_SUCCESS',\n  GET_ONE_CONTRACT_FAILURE: 'GET_ONE_CONTRACT_FAILURE',\n\n  SEND_NOTIFICATION_REQUEST: 'SEND_NOTIFICATION_REQUEST',\n  SEND_NOTIFICATION_SUCCESS: 'SEND_NOTIFICATION_SUCCESS',\n  SEND_NOTIFICATION_FAILURE: 'SEND_NOTIFICATION_FAILURE',\n\n  ADD_NOTIFICATION_LOCAL_REQUEST: 'ADD_NOTIFICATION_LOCAL_REQUEST',\n  ADD_NOTIFICATION_LOCAL_SUCCESS: 'ADD_NOTIFICATION_LOCAL_SUCCESS',\n  ADD_NOTIFICATION_LOCAL_FAILURE: 'ADD_NOTIFICATION_LOCAL_FAILURE',\n\n  CREATE_FEEDBACK_REQUEST: 'CREATE_FEEDBACK_REQUEST',\n  CREATE_FEEDBACK_SUCCESS: 'CREATE_FEEDBACK_SUCCESS',\n  CREATE_FEEDBACK_FAILURE: 'CREATE_FEEDBACK_FAILURE',\n\n  DELETE_FEEDBACK_REQUEST: 'DELETE_FEEDBACK_REQUEST',\n  DELETE_FEEDBACK_SUCCESS: 'DELETE_FEEDBACK_SUCCESS',\n  DELETE_FEEDBACK_FAILURE: 'DELETE_FEEDBACK_FAILURE',\n\n  UPDATE_FEEDBACK_REQUEST: 'UPDATE_FEEDBACK_REQUEST',\n  UPDATE_FEEDBACK_SUCCESS: 'UPDATE_FEEDBACK_SUCCESS',\n  UPDATE_FEEDBACK_FAILURE: 'UPDATE_FEEDBACK_FAILURE',\n\n  GET_ROOM_REQUESTS_REQUEST: 'GET_ROOM_REQUESTS_REQUEST',\n  GET_ROOM_REQUESTS_SUCCESS: 'GET_ROOM_REQUESTS_SUCCESS',\n  GET_ROOM_REQUESTS_FAILURE: 'GET_ROOM_REQUESTS_FAILURE',\n\n  GET_ALLRENTERS_REQUEST: 'GET_ALLRENTERS_REQUEST',\n  GET_ALLRENTERS_SUCCESS: 'GET_ALLRENTERS_SUCCESS',\n  GET_ALLRENTERS_FAILURE: 'GET_ALLRENTERS_FAILURE',\n\n  GET_ALLVENDORS_REQUEST: 'GET_ALLVENDORS_REQUEST',\n  GET_ALLVENDORS_SUCCESS: 'GET_ALLVENDORS_SUCCESS',\n  GET_ALLVENDORS_FAILURE: 'GET_ALLVENDORS_FAILURE',\n\n  GET_ALLTYPES_REQUEST: 'GET_ALLTYPES_REQUEST',\n  GET_ALLTYPES_SUCCESS: 'GET_ALLTYPES_SUCCESS',\n  GET_ALLTYPES_FAILURE: 'GET_ALLTYPES_FAILURE',\n\n  UPDATE_HOSTEL_TYPE_REQUEST: 'UPDATE_HOSTEL_TYPE_REQUEST',\n  UPDATE_HOSTEL_TYPE_SUCCESS: 'UPDATE_HOSTEL_TYPE_SUCCESS',\n  UPDATE_HOSTEL_TYPE_FAILURE: 'UPDATE_HOSTEL_TYPE_FAILURE',\n\n  UPDATE_VENDOR_REQUEST: 'UPDATE_VENDOR_REQUEST',\n  UPDATE_VENDOR_SUCCESS: 'UPDATE_VENDOR_SUCCESS',\n  UPDATE_VENDOR_FAILURE: 'UPDATE_VENDOR_FAILURE',\n\n  UPDATE_RENTER_REQUEST: 'UPDATE_RENTER_REQUEST',\n  UPDATE_RENTER_SUCCESS: 'UPDATE_RENTER_SUCCESS',\n  UPDATE_RENTER_FAILURE: 'UPDATE_RENTER_FAILURE',\n};\nconst mutations = {\n  CREATE_ROOM_REQUEST_REQUEST(state) {\n    state.requests.isCreating = true;\n  },\n  CREATE_ROOM_REQUEST_SUCCESS(state, request) {\n    state.requests.isCreating = false;\n    state.requests.data.unshift(request);\n    state.requests.success = true;\n  },\n  CREATE_ROOM_REQUEST_FAILURE(state, error) {\n    state.requests.isCreating = false;\n    state.requests.error = error;\n    state.requests.success = true;\n  },\n  CLEAR_USER_DATA(state) {\n    state.user.data = null;\n    state.user.isLoading = false;\n    state.user.success = false;\n    state.notifications.data = [];\n  },\n  GET_USER_REQUEST(state) {\n    state.user.isLoading = true;\n    state.user.success = null;\n    state.user.error = null;\n  },\n  GET_USER_SUCCESS(state, user) {\n    state.user.data = user;\n    console.log(user);\n    state.user.isLoading = false;\n    state.user.success = true;\n  },\n  GET_USER_FAILURE(state, error) {\n    state.user.isLoading = false;\n    state.user.success = false;\n    state.user.error = error;\n  },\n  GET_CONTRACTS_REQUEST(state) {\n    state.contracts.isLoading = true;\n    state.contracts.error = null;\n    state.contracts.success = null;\n  },\n  GET_CONTRACTS_SUCCESS(state, contracts) {\n    state.contracts.data = contracts;\n    state.contracts.isLoading = false;\n    state.contracts.success = true;\n  },\n  GET_CONTRACTS_FAILURE(state, error) {\n    state.contracts.isLoading = false;\n    state.contracts.success = false;\n    state.contracts.error = error;\n  },\n  GET_ONE_CONTRACT_REQUEST(state) {\n    state.contracts.isLoading = true;\n    state.contracts.error = null;\n    state.contracts.success = null;\n  },\n  GET_ONE_CONTRACT_SUCCESS(state, contract) {\n    const oldContractIndex = state.contracts.data.findIndex(\n      (c) => Number(c.contractId) === Number(contract.contractId),\n    );\n    if (oldContractIndex > -1) {\n      state.contracts.data.splice(oldContractIndex, 1, contract);\n    } else {\n      state.contracts.data.unshift(contract);\n    }\n    state.contracts.isLoading = false;\n    state.contracts.success = true;\n  },\n  GET_ONE_CONTRACT_FAILURE(state, error) {\n    state.contracts.isLoading = false;\n    state.contracts.success = false;\n    state.contracts.error = error;\n  },\n  GET_BOOKINGS_REQUEST(state) {\n    state.bookings.isLoading = true;\n    state.bookings.success = null;\n    state.bookings.error = null;\n  },\n  GET_BOOKINGS_SUCCESS(state, booking) {\n    state.bookings.data = booking;\n    state.bookings.isLoading = false;\n    state.bookings.success = true;\n  },\n  GET_BOOKINGS_FAILURE(state, error) {\n    state.bookings.isLoading = false;\n    state.bookings.success = false;\n    state.bookings.error = error;\n  },\n  GET_BOOKING_REQUEST(state) {\n    state.bookings.isLoading = true;\n    state.bookings.success = null;\n    state.bookings.error = null;\n  },\n  GET_BOOKING_SUCCESS(state, booking) {\n    state.bookings.data.unshift(booking);\n    state.bookings.isLoading = false;\n    state.bookings.success = true;\n  },\n  GET_BOOKING_FAILURE(state, error) {\n    state.bookings.isLoading = false;\n    state.bookings.success = false;\n    state.bookings.error = error;\n  },\n  CREATE_BOOKING_REQUEST(state) {\n    state.bookings.isLoading = true;\n    state.bookings.success = null;\n    state.bookings.error = null;\n  },\n  CREATE_BOOKING_SUCCESS(state, booking) {\n    state.bookings.data.push(booking);\n    state.bookings.newlyCreated = booking;\n    state.bookings.isLoading = false;\n    state.bookings.success = true;\n  },\n  CREATE_BOOKING_FAILURE(state, error) {\n    state.bookings.isLoading = false;\n    state.bookings.success = false;\n    state.bookings.error = error;\n  },\n  REGISTER_USER_REQUEST(state) {\n    state.user.isLoading = true;\n  },\n  REGISTER_USER_SUCCESS(state, renter) {\n    state.user.data = renter;\n    state.user.isLoading = false;\n    state.user.success = true;\n  },\n  REGISTER_USER_FAILURE(state, error) {\n    state.user.isLoading = false;\n    state.user.success = false;\n    state.user.error = error;\n  },\n  GET_DEALS_REQUEST(state) {\n    state.deals.isLoading = false;\n    state.deals.success = null;\n    state.deals.error = null;\n  },\n  GET_DEALS_SUCCESS(state, deals) {\n    state.deals.data = deals;\n    state.deals.isLoading = false;\n    state.deals.success = true;\n  },\n  GET_DEALS_FAILURE(state, error) {\n    state.deals.isLoading = false;\n    state.deals.success = false;\n    state.deals.error = error;\n  },\n  CREATE_DEAL_REQUEST(state) {\n    state.deals.isLoading = false;\n  },\n  CREATE_DEAL_SUCCESS(state, deal) {\n    state.deals.data.push(deal);\n    state.deals.newlyCreated = deal;\n    state.deals.success = true;\n    state.deals.isLoading = false;\n  },\n  CREATE_DEAL_FAILURE(state, error) {\n    state.deals.success = false;\n    state.deals.error = error;\n  },\n  GET_DEAL_REQUEST(state) {\n    state.deals.isLoading = false;\n  },\n  GET_DEAL_SUCCESS(state, deal) {\n    state.deals.data.push(deal);\n    state.deals.newlyCreated = deal;\n    state.deals.success = true;\n    state.deals.isLoading = false;\n  },\n  GET_DEAL_FAILURE(state, error) {\n    state.deals.success = false;\n    state.deals.error = error;\n  },\n  CANCEL_DEAL_REQUEST(state) {\n    state.deals.isLoading = true;\n    state.bookings.success = null;\n    state.bookings.error = null;\n  },\n  CANCEL_DEAL_SUCCESS(state, dealId) {\n    state.deals.isLoading = false;\n    state.deals.success = true;\n    const res = state.deals.data.filter((deal) => deal.dealId === dealId);\n    res[0].status = 'CANCEL';\n  },\n  CANCEL_DEAL_FAILURE(state, error) {\n    state.deals.isLoading = false;\n    state.deals.error = error;\n  },\n  CANCEL_BOOKING_REQUEST(state) {\n    state.bookings.isLoading = true;\n  },\n  CANCEL_BOOKING_SUCCESS(state, newBooking) {\n    const { bookingId } = newBooking;\n    state.bookings.isLoading = false;\n    state.bookings.success = true;\n    const res = state.bookings.data.filter((book) => book.bookingId === bookingId);\n    res[0].status = 'CANCELLED';\n  },\n  CANCEL_BOOKING_FAILURE(state, error) {\n    state.bookings.isLoading = false;\n    state.bookings.error = error;\n  },\n  DONE_BOOKING_REQUEST(state) {\n    state.bookings.isUpdating = true;\n    state.bookings.success = null;\n    state.bookings.error = null;\n  },\n  DONE_BOOKING_SUCCESS(state, bookingId) {\n    state.bookings.isUpdating = false;\n    state.bookings.success = true;\n    const res = state.bookings.data.find((book) => book.bookingId === bookingId);\n    res.status = 'DONE';\n  },\n  DONE_BOOKING_FAILURE(state, error) {\n    state.bookings.isUpdating = false;\n    state.bookings.error = error;\n  },\n  CLEAR_NEWLY_CREATED_BOOKING(state) {\n    state.bookings.newlyCreated = null;\n  },\n  CREATE_CONTRACT_REQUEST(state) {\n    state.contracts.isCreating = true;\n    state.contracts.error = null;\n    state.contracts.success = null;\n    state.contracts.newlyCreated = null;\n  },\n  CREATE_CONTRACT_SUCCESS(state, contract) {\n    state.contracts.isCreating = false;\n    state.contracts.data.push(contract);\n    state.contracts.newlyCreated = contract;\n    state.contracts.success = true;\n  },\n  CREATE_CONTRACT_FAILURE(state, error) {\n    state.contracts.isCreating = false;\n    state.contracts.error = error;\n    state.contracts.success = false;\n  },\n  UPDATE_CONTRACT_REQUEST(state) {\n    state.contracts.isUpdating = true;\n    state.contracts.error = null;\n    state.contracts.success = null;\n  },\n  UPDATE_CONTRACT_SUCCESS(state, contract) {\n    const { contractId } = contract;\n    state.contracts.isUpdating = false;\n    const index = state.contracts.data.findIndex((c) => c.contractId === Number(contractId));\n    state.contracts.data[index] = contract;\n    state.contracts.success = true;\n  },\n  UPDATE_CONTRACT_FAILURE(state, error) {\n    state.contracts.isUpdating = false;\n    state.contracts.error = error;\n    state.contracts.success = false;\n  },\n  ACTIVATE_CONTRACT_REQUEST(state) {\n    state.contracts.isUpdating = true;\n    state.contracts.error = null;\n    state.contracts.success = null;\n  },\n  ACTIVATE_CONTRACT_SUCCESS(state, contract) {\n    const { contractId } = contract;\n    state.contracts.isUpdating = false;\n    console.log(contractId);\n    const index = state.contracts.data.findIndex((c) => c.contractId === Number(contractId));\n    state.contracts.data[index] = contract;\n    state.contracts.success = true;\n  },\n  ACTIVATE_CONTRACT_FAILURE(state, error) {\n    state.contracts.isUpdating = false;\n    state.contracts.error = error;\n    state.contracts.success = false;\n  },\n  SEND_NOTIFICATION_REQUEST(state) {\n    state.notifications.isCreating = true;\n    state.notifications.error = null;\n    state.notifications.success = null;\n  },\n  SEND_NOTIFICATION_SUCCESS(state) {\n    state.notifications.success = true;\n  },\n  SEND_NOTIFICATION_FAILURE(state, error) {\n    state.notifications.error = error;\n    state.notifications.success = false;\n  },\n\n  ADD_NOTIFICATION_LOCAL_REQUEST(state, noti) {\n    state.notifications.new = noti;\n  },\n  ADD_NOTIFICATION_LOCAL_SUCCESS(state, noti) {\n    state.notifications.data.unshift(noti);\n  },\n  ADD_NOTIFICATION_LOCAL_FAILURE(state, error) {\n    state.notifications.error = error;\n  },\n\n  CREATE_FEEDBACK_REQUEST(state) {\n    state.feedback.isLoading = true;\n  },\n  CREATE_FEEDBACK_SUCCESS(state, feedback) {\n    // state.feedback.data.push(feedback);\n    state.feedback.newlyCreated = feedback;\n    state.feedback.success = true;\n    state.feedback.isLoading = false;\n  },\n  CREATE_FEEDBACK_FAILURE(state, error) {\n    state.feedback.isLoading = true;\n    state.feedback.success = false;\n    state.feedback.error = error;\n  },\n\n  DELETE_FEEDBACK_REQUEST(state) {\n    state.feedback.isLoading = true;\n  },\n  DELETE_FEEDBACK_SUCCESS(state) {\n    state.feedback.success = true;\n    state.feedback.isLoading = false;\n    state.feedback.error = null;\n  },\n  DELETE_FEEDBACK_FAILURE(state, error) {\n    state.feedback.isLoading = true;\n    state.feedback.success = false;\n    state.feedback.error = error;\n  },\n\n  UPDATE_FEEDBACK_REQUEST(state) {\n    state.feedback.isLoading = true;\n    state.feedback.error = null;\n    state.feedback.success = null;\n  },\n  UPDATE_FEEDBACK_SUCCESS(state, feedback) {\n    state.feedback.feedbackUpdate = feedback;\n    state.feedback.success = true;\n    state.feedback.isLoading = false;\n  },\n  UPDATE_FEEDBACK_FAILURE(state, error) {\n    state.feedback.error = error;\n    state.feedback.success = false;\n    state.feedback.isLoading = false;\n  },\n\n  GET_ROOM_REQUESTS_REQUEST(state) {\n    state.requests.isLoading = true;\n    state.requests.error = null;\n    state.requests.success = null;\n  },\n  GET_ROOM_REQUESTS_SUCCESS(state, requests) {\n    state.requests.isLoading = false;\n    state.requests.data = requests;\n    state.requests.success = true;\n  },\n  GET_ROOM_REQUESTS_FAILURE(state, error) {\n    state.requests.isLoading = false;\n    state.requests.error = error;\n    state.requests.success = false;\n  },\n  GET_ALLRENTERS_REQUEST(state) {\n    state.renters.isLoading = true;\n    state.renters.success = null;\n    state.renters.error = null;\n  },\n  GET_ALLRENTERS_SUCCESS(state, renters) {\n    state.renters.isLoading = false;\n    state.renters.success = true;\n    state.renters.data = renters;\n  },\n  GET_ALLRENTERS_FAILURE(state, error) {\n    state.renters.isLoading = false;\n    state.renters.success = false;\n    state.renters.error = error;\n  },\n  GET_ALLVENDORS_REQUEST(state) {\n    state.vendors.isLoading = true;\n    state.vendors.success = null;\n    state.vendors.error = null;\n  },\n  GET_ALLVENDORS_SUCCESS(state, vendors) {\n    state.vendors.isLoading = false;\n    state.vendors.success = true;\n    state.vendors.data = vendors;\n  },\n  GET_ALLVENDORS_FAILURE(state, error) {\n    state.vendors.isLoading = false;\n    state.vendors.success = false;\n    state.vendors.error = error;\n  },\n  GET_ALLTYPES_REQUEST(state) {\n    state.types.isLoading = true;\n    state.types.success = null;\n    state.types.error = null;\n  },\n  GET_ALLTYPES_SUCCESS(state, types) {\n    state.types.isLoading = false;\n    state.types.success = true;\n    state.types.data = types;\n  },\n  GET_ALLTYPES_FAILURE(state, error) {\n    state.types.isLoading = false;\n    state.types.success = false;\n    state.types.error = error;\n  },\n  UPDATE_HOSTEL_TYPE_REQUEST(state) {\n    state.types.isLoading = true;\n    state.types.isUpdating = true;\n    state.types.error = null;\n    state.types.success = null;\n  },\n  UPDATE_HOSTEL_TYPE_SUCCESS(state, type) {\n    const index = state.types.data.types.findIndex((item) => item.typeId === type.typeId);\n    const { group } = state.types.data.types[index];\n    console.log(index);\n    const newType = { ...type };\n    newType.group = group;\n    state.types.data.types.splice(index, 1);\n    state.types.data.types.push(newType);\n    state.types.success = true;\n    state.types.isLoading = false;\n    state.types.isUpdating = false;\n  },\n  UPDATE_HOSTEL_TYPE_FAILURE(state, error) {\n    state.types.error = error;\n    state.types.success = false;\n    state.types.isLoading = false;\n    state.types.isUpdating = false;\n  },\n  UPDATE_USER_REQUEST(state) {\n    state.user.isLoading = true;\n    state.user.isUpdating = true;\n    state.user.error = null;\n    state.user.success = null;\n  },\n  UPDATE_USER_SUCCESS(state, user) {\n    state.user.data = user;\n    state.user.success = true;\n    state.user.isLoading = false;\n    state.user.isUpdating = false;\n  },\n  UPDATE_USER_FAILURE(state, error) {\n    state.user.error = error;\n    state.user.success = false;\n    state.user.isLoading = false;\n    state.user.isUpdating = false;\n  },\n  UPDATE_VENDOR_REQUEST(state) {\n    state.vendors.isLoading = true;\n    state.vendors.isUpdating = true;\n    state.vendors.error = null;\n    state.vendors.success = null;\n    //\n    state.user.isLoading = true;\n    state.user.isUpdating = true;\n  },\n  UPDATE_VENDOR_SUCCESS(state, user) {\n    const index = state.vendors.data.findIndex((item) => item.userId === user.userId);\n    state.vendors.data.splice(index, 1);\n    state.vendors.data.push(user);\n    state.vendors.success = true;\n    state.vendors.isLoading = false;\n    state.vendors.isUpdating = false;\n    //\n    if (user.userId === state.user.data.userId) {\n      const temp = user[0];\n      state.user.data = temp;\n      state.user.success = true;\n      state.user.isLoading = false;\n      state.user.isUpdating = false;\n    }\n  },\n  UPDATE_VENDOR_FAILURE(state, error) {\n    state.vendors.error = error;\n    state.vendors.success = false;\n    state.vendors.isLoading = false;\n    state.vendors.isUpdating = false;\n    //\n    state.user.isLoading = true;\n    state.user.isUpdating = true;\n  },\n\n  UPDATE_RENTER_REQUEST(state) {\n    state.renters.isLoading = true;\n    state.renters.isUpdating = true;\n    state.renters.error = null;\n    state.renters.success = null;\n  },\n  UPDATE_RENTER_SUCCESS(state, user) {\n    const index = state.renters.data.findIndex((item) => item.userId === user.userId);\n    state.renters.data.splice(index, 1);\n    state.renters.data.push(user);\n    state.renters.success = true;\n    state.renters.isLoading = false;\n    state.renters.isUpdating = false;\n\n    //\n    if (user.userId === state.user.data.userId) {\n      const temp = user[0];\n      state.user.data = temp;\n      state.user.success = true;\n      state.user.isLoading = false;\n      state.user.isUpdating = false;\n    }\n  },\n  UPDATE_RENTER_FAILURE(state, error) {\n    state.renters.error = error;\n    state.renters.success = false;\n    state.renters.isLoading = false;\n    state.renters.isUpdating = false;\n  },\n};\n\nconst actions = {\n  async getRoomRequests({ commit }) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role) {\n      try {\n        commit(mutationTypes.GET_ROOM_REQUESTS_REQUEST);\n        const res = await window.axios.get(`/api/v1/renters/${userId}/requests`);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_ROOM_REQUESTS_SUCCESS, res.data.data);\n        } else {\n          commit(\n            mutationTypes.GET_ROOM_REQUESTS_FAILURE,\n            new Error('response with status code != 200'),\n          );\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_ROOM_REQUESTS_FAILURE, error);\n      }\n    } else {\n      console.log('User are not logged in, cannot get user data');\n    }\n  },\n  async createRoomRequest({ commit }, request) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role) {\n      try {\n        commit(mutationTypes.CREATE_ROOM_REQUEST_REQUEST);\n        const res = await window.axios.post(`/api/v1/renters/${userId}/requests`, request);\n        if (res.status >= 200 && res.status <= 299) {\n          commit(mutationTypes.CREATE_ROOM_REQUEST_SUCCESS, res.data.data);\n        } else {\n          commit(\n            mutationTypes.CREATE_ROOM_REQUEST_FAILURE,\n            new Error('response with status code != 200'),\n          );\n        }\n      } catch (error) {\n        commit(mutationTypes.CREATE_ROOM_REQUEST_FAILURE, error);\n      }\n    } else {\n      console.log('User are not logged in, cannot get user data');\n    }\n  },\n  async login({ commit }, params) {\n    // params {phone, password}\n    commit(mutationTypes.GET_USER_REQUEST);\n    let res = null;\n    try {\n      const { phone, password, getTokenIdFromFirebase } = params;\n      res = await window.axios.post('/api/v1/login', { phone, password });\n      if (res.status === 200) {\n        const userData = res.data.data;\n        const { jwtToken } = userData;\n        const { idToken, refreshToken } = await getTokenIdFromFirebase(jwtToken);\n        userData.idToken = idToken;\n        userData.refreshToken = refreshToken;\n        commit(mutationTypes.GET_USER_SUCCESS, userData);\n      } else {\n        commit(mutationTypes.GET_USER_FAILURE);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_USER_FAILURE, error);\n    }\n  },\n  async clearUserData({ commit }) {\n    commit(mutationTypes.CLEAR_USER_DATA);\n  },\n  async getUser({ commit }) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role) {\n      try {\n        commit(mutationTypes.GET_USER_REQUEST);\n        const res = await window.axios.get(`/api/v1/${role}/${userId}`);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_USER_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.GET_USER_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_USER_FAILURE, error);\n      }\n    } else {\n      console.log('User are not logged in, cannot get user data');\n    }\n  },\n  async updateUser({ commit, state }, newUser) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        commit(mutationTypes.UPDATE_USER_REQUEST);\n        const res = await window.axios.put(`/api/v1/${role}/${userId}`, newUser);\n        if (res.status === 200) {\n          commit(mutationTypes.UPDATE_USER_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.UPDATE_USER_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.UPDATE_USER_FAILURE, error);\n      }\n    } else {\n      throw new Error('userId, role or user.data null');\n    }\n  },\n\n  async updateVendorV2({ commit }, newUser) {\n    const { userId } = newUser;\n    const dataUpdate = newUser.data;\n    try {\n      commit(mutationTypes.UPDATE_VENDOR_REQUEST);\n      const res = await window.axios.put(`/api/v1/vendors/${userId}`, dataUpdate);\n      if (res.status === 200) {\n        commit(mutationTypes.UPDATE_VENDOR_SUCCESS, res.data.data);\n      } else {\n        commit(mutationTypes.UPDATE_VENDOR_FAILURE);\n      }\n    } catch (error) {\n      commit(mutationTypes.UPDATE_USER_FAILURE, error);\n    }\n  },\n\n  async updateRenterV2({ commit }, newUser) {\n    const { userId } = newUser;\n    const dataUpdate = newUser.data;\n    try {\n      commit(mutationTypes.UPDATE_RENTER_REQUEST);\n      const res = await window.axios.put(`/api/v1/renters/${userId}`, dataUpdate);\n      if (res.status === 200) {\n        commit(mutationTypes.UPDATE_RENTER_SUCCESS, res.data.data);\n      } else {\n        commit(mutationTypes.UPDATE_RENTER_FAILURE);\n      }\n    } catch (error) {\n      commit(mutationTypes.UPDATE_RENTER_FAILURE, error);\n    }\n  },\n\n  async updateUserFirebaseToken({ commit, state }, firebaseToken) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        commit(mutationTypes.UPDATE_USER_REQUEST);\n        const res = await window.axios.put(`/api/v1/${role}/${userId}/token`, { firebaseToken });\n        if (res.status === 200) {\n          commit(mutationTypes.UPDATE_USER_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.UPDATE_USER_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.UPDATE_USER_FAILURE, error);\n      }\n    } else {\n      throw new Error('userId, role or user.data null');\n    }\n  },\n  async getBookings({ commit, state }) {\n    console.log(window.$cookies);\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        commit(mutationTypes.GET_BOOKINGS_REQUEST);\n        const res = await window.axios.get(`/api/v1/${role}/${userId}/bookings`);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_BOOKINGS_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.GET_BOOKINGS_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_BOOKINGS_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get bookings');\n    }\n  },\n  async getContracts({ commit, state }) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        commit(mutationTypes.GET_CONTRACTS_REQUEST);\n        const res = await window.axios.get(`/api/v1/${role}/${userId}/contracts?sortBy=updatedAt&asc=false`);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_CONTRACTS_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.GET_CONTRACTS_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_CONTRACTS_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get contracts');\n    }\n  },\n  async getOneBooking({ commit, state }, bookingId) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        const currentIds = state.bookings.data.map((booking) => booking.bookingId);\n        if (!currentIds.includes(bookingId)) {\n          commit(mutationTypes.GET_BOOKING_REQUEST);\n          const res = await window.axios.get(`/api/v1/bookings/${bookingId}`);\n          if (res.status === 200) {\n            res.data.data.new = true;\n            commit(mutationTypes.GET_BOOKING_SUCCESS, res.data.data);\n          } else {\n            commit(mutationTypes.GET_BOOKING_FAILURE);\n          }\n        } else {\n          console.log('this booking is already in store');\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_BOOKING_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get a new booking');\n    }\n  },\n  insertOneBooking({ commit, state }, booking) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        commit(mutationTypes.GET_BOOKING_REQUEST);\n        const editBooking = { ...booking, new: true };\n        commit(mutationTypes.GET_BOOKING_SUCCESS, editBooking);\n      } catch (error) {\n        commit(mutationTypes.GET_BOOKING_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get a new booking');\n    }\n  },\n  async createBooking({ commit, state }, booking) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        commit(mutationTypes.CREATE_BOOKING_REQUEST);\n        const res = await window.axios.post('/api/v1/bookings', booking);\n        if (res.status === 201) {\n          commit(mutationTypes.CREATE_BOOKING_SUCCESS, res.data.data);\n        }\n      } catch (error) {\n        commit(mutationTypes.CREATE_BOOKING_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get a new booking');\n    }\n  },\n  async getDeals({ commit, state }) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        commit(mutationTypes.GET_DEALS_REQUEST);\n        const res = await window.axios.get(`/api/v1/${role}/${userId}/deals`);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_DEALS_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.GET_DEALS_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_DEALS_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get deals');\n    }\n  },\n  async createDeal({ commit, state }, deal) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        commit(mutationTypes.CREATE_DEAL_REQUEST);\n        const res = await window.axios.post('/api/v1/deals', deal);\n        if (res.status === 201) {\n          commit(mutationTypes.CREATE_DEAL_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.CREATE_DEAL_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.CREATE_DEAL_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get deals');\n    }\n  },\n  async getDeal({ commit, state }, dealIds) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    const currentIds = state.deals.data.map((deal) => deal.dealId);\n    const newIds = dealIds.filter((newId) => !currentIds.includes(newId));\n    if (newIds.lenght > 0) {\n      if (userId && role && state.user.data) {\n        try {\n          commit(mutationTypes.GET_DEAL_REQUEST);\n          const res = await window.axios.get(`/api/v1/deals/${newIds[0]}`);\n          if (res.status === 200) {\n            commit(mutationTypes.GET_DEAL_SUCCESS, res.data.data);\n          } else {\n            commit(mutationTypes.GET_DEAL_FAILURE);\n          }\n        } catch (error) {\n          commit(mutationTypes.GET_DEAL_FAILURE, error);\n        }\n      } else {\n        throw new Error('You have to login before get deals');\n      }\n    } else {\n      console.log('not a new deal');\n    }\n  },\n  async cancelDeal({ commit, state }, dealId) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        const deal = state.deals.data.filter((item) => item.dealId === dealId)[0];\n        if (deal) {\n          commit(mutationTypes.CANCEL_DEAL_REQUEST);\n          const res = await window.axios.put('/api/v1/deals', {\n            dealId,\n            renterId: deal.renter.renterId,\n            vendorId: deal.vendor.vendorId,\n            typeId: deal.type.typeId,\n            status: 'CANCELED',\n            offeredPrice: deal.offeredPrice,\n          });\n          if (res.status === 200) {\n            commit(mutationTypes.CANCEL_DEAL_SUCCESS, res.data.data);\n          }\n        } else {\n          console.log('deal is null');\n        }\n      } catch (error) {\n        commit(mutationTypes.CANCEL_DEAL_FAILURE, error);\n      }\n    } else {\n      throw new Error('you are not loged in');\n    }\n  },\n  async cancelBooking({ commit, state }, bookingId) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        const booking = state.bookings.data.filter((item) => item.bookingId === bookingId)[0];\n        if (booking) {\n          commit(mutationTypes.CANCEL_BOOKING_REQUEST);\n          const res = await window.axios.put(`/api/v1/bookings/${bookingId}`, {\n            bookingId,\n            dealId: booking.deal ? booking.deal.dealId : null,\n            typeId: booking.type.typeId,\n            renterId: booking.renter.renterId,\n            vendorId: booking.vendor.vendorId,\n            status: 'CANCELLED',\n            meetTime: booking.meetTime,\n            qrCode: booking.qrCode,\n          });\n          if (res.status === 200) {\n            commit(mutationTypes.CANCEL_BOOKING_SUCCESS, res.data.data);\n          }\n        } else {\n          console.log(`booking ${bookingId} is not existed in store`);\n        }\n      } catch (error) {\n        commit(mutationTypes.CREATE_BOOKING_FAILURE, error);\n      }\n    } else {\n      throw new Error('you are not loged in');\n    }\n  },\n  async updateBookingStatus({ commit, state }, content) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    commit(mutationTypes.DONE_BOOKING_REQUEST);\n    if (userId && role && state.user.data) {\n      try {\n        const { bookingId, qrCode } = content;\n        console.log(bookingId, qrCode);\n        const booking = state.bookings.data.find((item) => item.bookingId === Number(bookingId));\n        if (booking) {\n          const res = await window.axios.put(`/api/v1/bookings/${bookingId}`, {\n            bookingId: Number(bookingId),\n            dealId: booking.deal ? booking.deal.dealId : null,\n            typeId: booking.type.typeId,\n            renterId: booking.renter.renterId,\n            vendorId: booking.vendor.vendorId,\n            status: 'DONE',\n            meetTime: booking.meetTime,\n            qrCode,\n          });\n          console.log(res);\n          if (res.status === 200) {\n            commit(mutationTypes.DONE_BOOKING_SUCCESS, Number(bookingId));\n          }\n        } else {\n          const error = new Error(`booking ${bookingId} is not existed in store`);\n          console.log(error);\n          commit(mutationTypes.DONE_BOOKING_FAILURE, error);\n        }\n      } catch (error) {\n        commit(mutationTypes.DONE_BOOKING_FAILURE, error);\n      }\n    } else {\n      const error = new Error('you are not loged in');\n      commit(mutationTypes.DONE_BOOKING_FAILURE, error);\n    }\n  },\n  updateBookingStatusLocal({ commit, state }, bookingId) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    commit(mutationTypes.DONE_BOOKING_REQUEST);\n    if (userId && role && state.user.data) {\n      try {\n        const booking = state.bookings.data.filter((item) => item.bookingId === bookingId)[0];\n        if (booking) {\n          booking.status = 'DONE';\n          commit(mutationTypes.DONE_BOOKING_SUCCESS, bookingId);\n        } else {\n          const error = new Error(`booking ${bookingId} is not existed in store`);\n          console.log(error);\n          commit(mutationTypes.DONE_BOOKING_FAILURE, error);\n        }\n      } catch (error) {\n        commit(mutationTypes.DONE_BOOKING_FAILURE, error);\n      }\n    } else {\n      const error = new Error('you are not loged in');\n      commit(mutationTypes.DONE_BOOKING_FAILURE, error);\n    }\n  },\n  clearNewlyCreatedBooking({ commit }) {\n    commit(mutationTypes.CLEAR_NEWLY_CREATED_BOOKING);\n  },\n  async registerRenter({ commit }, renter) {\n    try {\n      commit(mutationTypes.REGISTER_USER_REQUEST);\n      const response = await window.axios.post('/api/v1/renters/register', renter);\n      if (response.status >= 200 && response.status <= 299) {\n        console.log(response.data.data);\n        commit(mutationTypes.REGISTER_USER_SUCCESS, response.data.data);\n      }\n      if (response.status === 409) {\n        commit(mutationTypes.REGISTER_USER_FAILURE, 'Số điện thoại này đã được đăng kí');\n      }\n    } catch (error) {\n      commit(mutationTypes.REGISTER_USER_FAILURE, error);\n    }\n  },\n  async registerVendor({ commit }, vendor) {\n    try {\n      commit(mutationTypes.REGISTER_USER_REQUEST);\n      const response = await window.axios.post('/api/v1/vendors/register', vendor);\n      if (response.status >= 200 && response.status <= 299) {\n        commit(mutationTypes.REGISTER_USER_SUCCESS, response.data.data);\n      }\n      if (response.status === 409) {\n        commit(mutationTypes.REGISTER_USER_FAILURE, 'Số điện thoại này đã được đăng kí');\n      }\n    } catch (error) {\n      commit(mutationTypes.REGISTER_USER_FAILURE, error);\n    }\n  },\n  async createContract({ commit, state }, contract) {\n    try {\n      commit(mutationTypes.CREATE_CONTRACT_REQUEST);\n      const userId = window.$cookies.get('userId');\n      const role = window.$cookies.get('role');\n      if (!userId && !state.user.data) {\n        const error = new Error('Loggin to create contract');\n        commit(mutationTypes.CREATE_CONTRACT_FAILURE, error);\n      } else if (role !== 'vendors') {\n        const error = new Error('Only vendor have permission to create contract');\n        commit(mutationTypes.CREATE_CONTRACT_FAILURE, error);\n      } else {\n        const res = await window.axios.post('/api/v1/contracts', contract);\n        if (res.status >= 200 && res.status <= 299) {\n          commit(mutationTypes.CREATE_CONTRACT_SUCCESS, res.data.data);\n        } else {\n          const error = new Error('Cannot receive response from server');\n          commit(mutationTypes.CREATE_CONTRACT_FAILURE, error);\n        }\n      }\n    } catch (error) {\n      commit(mutationTypes.CREATE_CONTRACT_FAILURE, error);\n    }\n  },\n  async updateContract({ commit, state }, contract) {\n    try {\n      commit(mutationTypes.UPDATE_CONTRACT_REQUEST);\n      const userId = window.$cookies.get('userId');\n      const role = window.$cookies.get('role');\n      if (!role && !userId && !state.user.data) {\n        const error = new Error('Loggin to update contract');\n        commit(mutationTypes.UPDATE_CONTRACT_FAILURE, error);\n      } else {\n        console.log(JSON.stringify(contract));\n\n        const { contractId } = contract;\n        const res = await window.axios.put(`/api/v1/contracts/${contractId}`, contract);\n        if (!res) {\n          const error = new Error('Cannot receive response from server');\n          commit(mutationTypes.UPDATE_CONTRACT_FAILURE, error);\n        } else if (res.status >= 200 && res.status <= 299) {\n          commit(mutationTypes.UPDATE_CONTRACT_SUCCESS, contractId);\n        }\n      }\n    } catch (error) {\n      commit(mutationTypes.UPDATE_CONTRACT_FAILURE, error);\n    }\n  },\n  async activateContract({ commit, state }, payload) {\n    try {\n      console.log('activate contract');\n      commit(mutationTypes.ACTIVATE_CONTRACT_REQUEST);\n      const userId = window.$cookies.get('userId');\n      const role = window.$cookies.get('role');\n      if (!role && !userId && !state.user.data) {\n        const error = new Error('Loggin to activate contract');\n        commit(mutationTypes.ACTIVATE_CONTRACT_FAILURE, error);\n      } else {\n        const { contractId, qrCode, status } = payload;\n        const res = await window.axios.put(`/api/v1/contracts/confirm/${contractId}`, { qrCode, status });\n        if (!res) {\n          const error = new Error('Cannot receive response from server');\n          commit(mutationTypes.ACTIVATE_CONTRACT_FAILURE, error);\n        } else if (res.status >= 200 && res.status <= 299) {\n          commit(mutationTypes.ACTIVATE_CONTRACT_SUCCESS, res.data.data);\n        }\n      }\n    } catch (error) {\n      commit(mutationTypes.UPDATE_CONTRACT_FAILURE, error);\n    }\n  },\n  async updateContractLocal({ commit, state }, contractId) {\n    try {\n      commit(mutationTypes.UPDATE_CONTRACT_REQUEST);\n      const userId = window.$cookies.get('userId');\n      const role = window.$cookies.get('role');\n      if (!userId && !state.user.data) {\n        const error = new Error('Loggin to activate contract');\n        commit(mutationTypes.UPDATE_CONTRACT_FAILURE, error);\n      } else if (role !== 'vendors') {\n        const error = new Error('Only vendor have permission to update contract locally');\n        commit(mutationTypes.UPDATE_CONTRACT_FAILURE, error);\n      } else {\n        commit(mutationTypes.UPDATE_CONTRACT_SUCCESS, contractId);\n      }\n    } catch (error) {\n      commit(mutationTypes.UPDATE_CONTRACT_FAILURE, error);\n    }\n  },\n  async getOneContract({ commit, state }, contractId) {\n    const userId = window.$cookies.get('userId');\n    const role = window.$cookies.get('role');\n    if (userId && role && state.user.data) {\n      try {\n        commit(mutationTypes.GET_ONE_CONTRACT_REQUEST);\n        const res = await window.axios.get(`/api/v1/contracts/${contractId}`);\n        if (res.status === 200) {\n          commit(mutationTypes.GET_ONE_CONTRACT_SUCCESS, res.data.data);\n        } else {\n          commit(mutationTypes.GET_ONE_CONTRACT_FAILURE);\n        }\n      } catch (error) {\n        commit(mutationTypes.GET_ONE_CONTRACT_FAILURE, error);\n      }\n    } else {\n      throw new Error('You have to login before get contracts');\n    }\n  },\n  async sendNotification({ commit }, payload) {\n    // payload = {title, body, action, id, receiver}\n    // receiver of format: renters|vendors-id\n    // vendors-1\n    // eslint-disable-next-line\n    const { title, body, action, id, vendorId, renterId, icon } = payload;\n    commit(mutationTypes.SEND_NOTIFICATION_REQUEST);\n    try {\n      const noti = {\n        vendorId,\n        renterId,\n        data: {\n          title,\n          body,\n          action,\n          id,\n          icon,\n        },\n      };\n      await window.axios.post('/api/v1/notification/token', noti);\n      commit(mutationTypes.SEND_NOTIFICATION_SUCCESS);\n    } catch (error) {\n      commit(mutationTypes.SEND_NOTIFICATION_FAILURE, error);\n    }\n  },\n  addNotificationLocal({ commit }, noti) {\n    try {\n      commit(mutationTypes.ADD_NOTIFICATION_LOCAL_REQUEST);\n      commit(mutationTypes.ADD_NOTIFICATION_LOCAL_SUCCESS, noti);\n    } catch (error) {\n      commit(mutationTypes.ADD_NOTIFICATION_LOCAL_FAILURE, error);\n    }\n  },\n  async sendFeedback({ commit, state }, feedback) {\n    try {\n      commit(mutationTypes.CREATE_FEEDBACK_REQUEST);\n      const userId = window.$cookies.get('userId');\n      const role = window.$cookies.get('role');\n      if (!userId && !state.user.data) {\n        const error = new Error('Loggin to send feedback');\n        commit(mutationTypes.CREATE_FEEDBACK_FAILURE, error);\n      } else if (role !== 'renters') {\n        const error = new Error('Only renter have permission to send feedback');\n        commit(mutationTypes.CREATE_FEEDBACK_FAILURE, error);\n      } else {\n        const res = await window.axios.post('/api/v1/feedbacks', feedback);\n        if (res.status >= 200 && res.status <= 299) {\n          commit(mutationTypes.CREATE_FEEDBACK_SUCCESS, res.data.data);\n        } else {\n          const error = new Error('Cannot receive response from server');\n          commit(mutationTypes.CREATE_FEEDBACK_FAILURE, error);\n        }\n      }\n    } catch (error) {\n      commit(mutationTypes.CREATE_FEEDBACK_FAILURE, error);\n    }\n  },\n  async deleteFeedback({ commit, state }, feedbackId) {\n    try {\n      commit(mutationTypes.DELETE_FEEDBACK_REQUEST);\n      const userId = window.$cookies.get('userId');\n      const role = window.$cookies.get('role');\n      if (!userId && !state.user.data) {\n        const error = new Error('Loggin to remove feedback');\n        commit(mutationTypes.DELETE_FEEDBACK_FAILURE, error);\n      } else if (role !== 'renters') {\n        const error = new Error('Only owner  have permission to remove feedback');\n        commit(mutationTypes.DELETE_FEEDBACK_FAILURE, error);\n      } else {\n        const res = await window.axios.delete(`/api/v1/feedbacks/${feedbackId}`);\n        if (res.status >= 200 && res.status <= 299) {\n          commit(mutationTypes.DELETE_FEEDBACK_SUCCESS);\n        } else {\n          const error = new Error('Cannot receive response from server');\n          commit(mutationTypes.DELETE_FEEDBACK_FAILURE, error);\n        }\n      }\n    } catch (error) {\n      commit(mutationTypes.CREATE_FEEDBACK_FAILURE, error);\n    }\n    return feedbackId;\n  },\n  async updateFeedback({ commit, state }, feedback) {\n    try {\n      commit(mutationTypes.UPDATE_FEEDBACK_REQUEST);\n      const userId = window.$cookies.get('userId');\n      const role = window.$cookies.get('role');\n      if (!userId && !state.user.data) {\n        const error = new Error('Loggin to update feedback');\n        commit(mutationTypes.UPDATE_FEEDBACK_FAILURE, error);\n      } else if (role !== 'renters') {\n        const error = new Error('Only owner have permission to feedback');\n        console.log(feedback);\n        commit(mutationTypes.UPDATE_FEEDBACK_FAILURE, error);\n      } else {\n        const res = await window.axios.put(`/api/v1/feedbacks/${feedback.feedbackId}`, {\n          feedback,\n        });\n        if (!res) {\n          const error = new Error('Cannot receive response from server');\n          commit(mutationTypes.UPDATE_FEEDBACK_FAILURE, error);\n        } else if (res.status >= 200 && res.status <= 299) {\n          commit(mutationTypes.UPDATE_FEEDBACK_SUCCESS, res.data.data);\n        }\n      }\n    } catch (error) {\n      commit(mutationTypes.UPDATE_FEEDBACK_FAILURE, error);\n    }\n  },\n\n  async getAllRenters({ commit }) {\n    try {\n      commit(mutationTypes.GET_ALLRENTERS_REQUEST);\n      const res = await window.axios.get('/api/v1/renters/renters?sortBy=createdAt&asc=false');\n      if (res.status >= 200 && res.status <= 299) {\n        commit(mutationTypes.GET_ALLRENTERS_SUCCESS, res.data.data);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_ALLRENTERS_FAILURE, error);\n    }\n  },\n\n  async getAllVendors({ commit }) {\n    try {\n      commit(mutationTypes.GET_ALLVENDORS_REQUEST);\n      const res = await window.axios.get('/api/v1/vendors/vendors?sortBy=createdAt&asc=false');\n      if (res.status >= 200 && res.status <= 299) {\n        commit(mutationTypes.GET_ALLVENDORS_SUCCESS, res.data.data);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_ALLVENDORS_FAILURE, error);\n    }\n  },\n\n  async getAllTypes({ commit }) {\n    try {\n      commit(mutationTypes.GET_ALLTYPES_REQUEST);\n      const res = await window.axios.get('/api/v1/types/all?asc=false&page=1&size=100&sortBy=createdAt');\n      if (res.status >= 200 && res.status <= 299) {\n        commit(mutationTypes.GET_ALLTYPES_SUCCESS, res.data.data);\n      }\n    } catch (error) {\n      commit(mutationTypes.GET_ALLTYPES_FAILURE, error);\n    }\n  },\n\n  async updateHostelTypeV2({ commit }, types) {\n    try {\n      commit(mutationTypes.UPDATE_HOSTEL_TYPE_REQUEST);\n      const { typeId } = types;\n      if (types) {\n        const res = await window.axios.put(`/api/v1/types/${typeId}/active`, types.data);\n        console.log(res);\n        commit(mutationTypes.UPDATE_HOSTEL_TYPE_SUCCESS, res.data.data);\n      }\n    } catch (error) {\n      console.log(error);\n      commit(mutationTypes.UPDATE_HOSTEL_TYPE_FAILURE, error);\n    }\n  },\n};\n\nexport default {\n  namespaced: true,\n  state: myState,\n  mutations,\n  getters: myGetters,\n  actions,\n};\n"]}]}